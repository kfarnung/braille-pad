{"version":3,"sources":["Data/LocalStorageComponent.ts","Data/LocalStorage.ts","version.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","Views/TabViewBase.tsx","Morse/MorsePicture.tsx","Morse/MorseStream.tsx","Morse/MorseTable.tsx","Views/Encoding/Morse.tsx"],"names":["LocalStorageComponent","props","VERSION_STORAGE_KEY","previousVersion","LocalStorage","getObject","versionIncreased","version","clear","setObject","prev","current","compareVersions","this","restoreState","updateState","onUpdateState","saveState","getLocalStorageKey","onSaveState","onRestoreState","Component","undefined","_isSupported","storage","window","localStorage","x","setItem","removeItem","e","DOMException","code","name","length","key","isSupported","getItem","getKey","objString","JSON","parse","value","object","stringify","_prefix","target","property","receiver","Reflect","get","base","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","TabViewBase","_activeKey","state","activeKey","savedState","setState","MorsePicture","Array","from","morseString","map","index","renderDot","renderDash","className","viewBox","cx","cy","r","width","height","MorseStream","_morseStream","onKeyDown","bind","onKeyPress","morseStream","document","addEventListener","removeEventListener","Header","Body","codeText","plainText","invertText","reverseText","invertReverseText","onClick","onDotClick","variant","onDashClick","onBackspaceClick","onNextClick","onClearClick","replace","MorseString","toString","invertDotsAndDashes","reverse","ev","defaultPrevented","handled","keyCode","preventDefault","Character","DOT","DASH","substring","lastCharacter","slice","CHARACTER_DIVIDER","WORD_DIVIDER","MorseTable","striped","responsive","renderRows","getPotentialMatches","entry","display","toMorseString","encoding","Morse","animation","id","onSelect","onTabSelect","eventKey","title"],"mappings":"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","file":"static/js/12.4381a8e5.chunk.js","sourcesContent":["import compareVersions from 'compare-versions';\nimport { Component } from 'react';\nimport LocalStorage from './LocalStorage';\nimport { version } from '../version';\n\nabstract class LocalStorageComponent<P = {}, S = {}, SavedState = {}> extends Component<P, S> {\n  public constructor(props: P) {\n    super(props);\n\n    // If the current localstorage was created with a prior version of puzztool, clear\n    // the local storage to get rid of any obsolete or incompatible artifacts\n    const previousVersion = LocalStorage.getObject<string>(this.VERSION_STORAGE_KEY);\n    if (this.versionIncreased(previousVersion, version)) {\n      LocalStorage.clear();\n      // Store the current version\n      LocalStorage.setObject<string>(this.VERSION_STORAGE_KEY, version);\n    }\n  }\n\n  private versionIncreased(prev: string | null, current: string): boolean {\n    if (prev == null) {\n      // If there's no recorded version number, this is the user's first visit\n      // to the page since 0.7.0 released.  To clean up any potential legacy\n      // incompatabilities, clear storage and write the version.\n      return true;\n    }\n\n    return compareVersions(current, prev) === 1;\n  }\n\n  public componentDidMount() {\n    this.restoreState();\n    this.updateState();\n  }\n\n  protected updateState() {\n    this.onUpdateState();\n    this.saveState();\n  }\n\n  protected abstract getLocalStorageKey(): string;\n  protected abstract onSaveState(): SavedState;\n  protected abstract onRestoreState(savedState: SavedState | null): void;\n  protected abstract onUpdateState(): void;\n\n  private saveState() {\n    LocalStorage.setObject<SavedState>(this.getLocalStorageKey(), this.onSaveState());\n  }\n\n  private restoreState() {\n    this.onRestoreState(LocalStorage.getObject<SavedState>(this.getLocalStorageKey()));\n  }\n\n  private readonly VERSION_STORAGE_KEY: string = \"puzztoolVersion\";\n}\n\nexport default LocalStorageComponent;\n","class LocalStorage {\n  private static _isSupported?: boolean;\n  private static _prefix: string = 'puzztool';\n\n  public static isSupported() {\n    if (this._isSupported === undefined) {\n      const storage = window.localStorage;\n      const x = '__storage_test__';\n\n      try {\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        this._isSupported = true;\n      } catch (e) {\n          this._isSupported = e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            storage.length !== 0;\n      }\n    }\n\n    return this._isSupported;\n  }\n\n  public static getItem(key: string) {\n    if (this.isSupported()) {\n      return window.localStorage.getItem(this.getKey(key));\n    }\n\n    return null;\n  }\n\n  public static getObject<T>(key: string) {\n    if (this.isSupported()) {\n      const objString = window.localStorage.getItem(this.getKey(key));\n\n      if (objString !== null) {\n        return JSON.parse(objString) as T;\n      }\n    }\n\n    return null;\n  }\n\n  public static setItem(key: string, value: string) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), value);\n    }\n  }\n\n  public static setObject<T>(key: string, object: T) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), JSON.stringify(object));\n    }\n  }\n\n  public static clear() {\n    if (this.isSupported()) {\n      window.localStorage.clear();\n    }\n  }\n\n  private static getKey(key: string) {\n    return `${this._prefix}_${key}`;\n  }\n}\n\nexport default LocalStorage;\n","// generated by genversion\nexport const version = '0.7.0';\n","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import LocalStorageComponent from '../Data/LocalStorageComponent';\n\n// To inherit from this class:\n// 1. import Tab from 'react-bootstrap/Tab';\n// 2. import Tabs from 'react-bootstrap/Tabs';\n// 3. override render() and getLocalStorageKey()\n// 4. Ensure your constructor calls super()\n\ntype TabViewBaseProps = {};\ntype State = {\n  activeKey: number,\n};\n\ntype SavedState = {\n  activeKey: number,\n};\n\nabstract class TabViewBase extends LocalStorageComponent<TabViewBaseProps, State, SavedState> {\n  private _activeKey: number = 1;\n\n  constructor(props: TabViewBaseProps) {\n    super(props);\n\n    this.state = {\n      activeKey: this._activeKey,\n    };\n  }\n\n  /* Classes derived from TabViewBase should implement the following functions:\n\n  public render() {}\n\n  protected getLocalStorageKey() {\n    return 'YourClassNameHere';\n  }\n  */\n\n  protected onSaveState() {\n    return {\n      activeKey: this._activeKey,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._activeKey = savedState.activeKey;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      activeKey: this._activeKey,\n    });\n  }\n\n  protected onTabSelect(activeKey: number) {\n    this._activeKey = activeKey;\n    this.updateState();\n  }\n}\n\nexport default TabViewBase;\n","import React, { Component } from 'react';\n\ntype Props = {\n  morseString: String\n};\n\nclass MorsePicture extends Component<Props> {\n  public static renderDot() {\n    return (\n      <svg className=\"MorsePicture-dotIcon\" viewBox=\"0 0 30 30\">\n        <circle cx=\"15\" cy=\"15\" r=\"15\" />\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    );\n  }\n\n  public static renderDash() {\n    return (\n      <svg className=\"MorsePicture-dashIcon\" viewBox=\"0 0 90 30\">\n        <rect width=\"90\" height=\"30\" />\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    );\n  }\n\n  public render() {\n    return Array.from(this.props.morseString)\n      .map((value: string, index: number) => (\n        <span key={index}>\n          {value === '.' ? MorsePicture.renderDot() : MorsePicture.renderDash()}\n        </span>\n      ));\n  }\n}\n\nexport default MorsePicture;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport { MorseCharacter as Character, MorseString } from 'puzzle-lib';\nimport LocalStorageComponent from '../Data/LocalStorageComponent';\nimport MorsePicture from './MorsePicture';\nimport './MorseStream.scss';\n\ntype Props = {};\ntype State = {\n  morseStream: string\n};\n\ntype SavedState = {\n  morseStream: string\n};\n\nclass MorseStream extends LocalStorageComponent<Props, State, SavedState> {\n\n  private _morseStream: string = '';\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n\n    this.state = {\n      morseStream: this._morseStream,\n    };\n  }\n\n  public componentDidMount() {\n    super.componentDidMount();\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keypress', this.onKeyPress);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n    document.removeEventListener('keypress', this.onKeyPress);\n  }\n\n  public render() {\n    return (\n      <div className=\"MorseStream\">\n        <Card className=\"MorseStream-morse-output\">\n          <Card.Header>Input</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.codeText()}<span className=\"blinking-cursor\">|</span>\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Plaintext</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.plainText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Swap Dots/Dashes</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.invertText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.reverseText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left + Swap Dots/Dashes</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.invertReverseText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <ButtonToolbar className=\"MorseStream-inputCommands\">\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onDotClick()}\n              variant=\"primary\"\n            >\n              {MorsePicture.renderDot()}\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onDashClick()}\n              variant=\"primary\"\n            >\n              {MorsePicture.renderDash()}\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n        <ButtonToolbar className=\"MorseStream-commands\">\n          <ButtonGroup>\n            <Button onClick={() => this.onBackspaceClick()}>&#x232b;</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button onClick={() => this.onNextClick()}>Next</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onClearClick()}\n              variant=\"danger\"\n            >\n              Clear\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'MorseStream';\n  }\n\n  protected onSaveState() {\n    return {\n      morseStream: this._morseStream,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._morseStream = savedState.morseStream;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      morseStream: this._morseStream,\n    });\n  }\n\n  private codeText(): string {\n    // Replace dot with interpunct for readability\n    // Replace dash with full width hyphen for readability.  Don't use emdash\n    // because multiple emdashes get combined with no space between them.\n    return this._morseStream.replace(/\\./g, '\\u00b7').replace(/-/g, '\\uff0d');\n  }\n\n  private plainText(): string {\n    return new MorseString(this._morseStream).toString();\n  }\n\n  private invertText(): string {\n    return new MorseString(this._morseStream).invertDotsAndDashes().toString();\n  }\n\n  private reverseText(): string {\n    return new MorseString(this._morseStream).reverse().toString();\n  }\n\n  private invertReverseText(): string {\n    return new MorseString(this._morseStream)\n      .invertDotsAndDashes()\n      .reverse()\n      .toString();\n  }\n\n  private onKeyDown(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = false;\n\n    // Chrome won't trigger keypress for any keys that can invoke browser\n    // actions.\n    if ((ev.key === \"Backspace\") || (ev.keyCode === 8)) { // Backspace\n      this.onBackspaceClick();\n      handled = true;\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onKeyPress(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = true;\n    if (ev.key) {\n      switch (ev.key) {\n        case \"-\":\n        case \"j\":\n          this.onDashClick();\n          break;\n        case \".\":\n        case \"k\":\n          this.onDotClick();\n          break;\n        case \"Enter\":\n        case \" \":\n        case \"l\":\n          this.onNextClick();\n          break;\n        case \";\":\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    } else {\n      // Older browsers such as Edge don't support ev.key\n      switch (ev.keyCode) {\n        case 45: // '-'\n        case 106: // 'J'\n          this.onDashClick();\n          break;\n        case 46: // '.'\n        case 107: // 'K'\n          this.onDotClick();\n          break;\n        case 13: // Enter\n        case 32: // Space\n        case 108: // 'L'\n          this.onNextClick();\n          break;\n        case 59: // ';'\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onDotClick() {\n    this._morseStream += Character.DOT;\n\n    this.updateState();\n  }\n\n  private onDashClick() {\n    this._morseStream += Character.DASH;\n\n    this.updateState();\n  }\n\n  private onBackspaceClick() {\n    if (this._morseStream.length > 0) {\n      this._morseStream =\n        this._morseStream.substring(0, this._morseStream.length - 1);\n    }\n\n    this.updateState();\n  }\n\n  private onNextClick() {\n    if (this._morseStream.length > 0) {\n      const lastCharacter = this._morseStream.slice(-1);\n      if (lastCharacter === MorseString.CHARACTER_DIVIDER) {\n        // Pressing next twice starts a new word\n        this._morseStream =\n          this._morseStream.substring(0, this._morseStream.length - 1) +\n          MorseString.WORD_DIVIDER;\n      } else if (lastCharacter !== MorseString.WORD_DIVIDER) {\n        this._morseStream += MorseString.CHARACTER_DIVIDER;\n      }\n    }\n\n    this.updateState();\n  }\n\n  private onClearClick() {\n    this._morseStream = '';\n\n    this.updateState();\n  }\n}\n\nexport default MorseStream;\n","import React, { Component } from 'react';\nimport { MorseCharacter as Character } from 'puzzle-lib';\nimport Table from 'react-bootstrap/Table';\nimport MorsePicture from './MorsePicture';\nimport './MorseTable.scss';\n\nclass MorseTable extends Component {\n  public render() {\n    return (\n      <div className=\"MorseTable\">\n        <Table striped={true} responsive={true}>\n          <thead>\n            <tr>\n              <th>Character</th>\n              <th>Morse</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderRows()}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\n  private renderRows() {\n    const characters = new Character().getPotentialMatches();\n    return characters.map((entry) => (\n      <tr key={entry.display}>\n        <td>{entry.display}</td>\n        <td>\n          <div className=\"MorseTable-morseView\">\n            <MorsePicture morseString={Character.toMorseString(entry.encoding)} />\n          </div>\n        </td>\n      </tr>\n    ));\n  }\n}\n\nexport default MorseTable;\n","import React from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport TabViewBase from '../TabViewBase';\nimport MorseStream from '../../Morse/MorseStream';\nimport MorseTable from '../../Morse/MorseTable';\nimport './Morse.scss';\n\nclass Morse extends TabViewBase {\n  public render() {\n    return (\n      <div className=\"Morse\">\n        <Tabs\n          activeKey={this.state.activeKey}\n          animation={false}\n          id=\"Morse-tabs\"\n          // tslint:disable-next-line: no-any\n          onSelect={(activeKey: any) => this.onTabSelect(activeKey as number)}\n        >\n          <Tab className=\"Morse-tab-value\" eventKey={1} title=\"Value\">\n            <MorseStream />\n          </Tab>\n          <Tab eventKey={2} title=\"Reference\">\n            <MorseTable />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'Morse';\n  }\n}\n\nexport default Morse;\n"],"sourceRoot":""}
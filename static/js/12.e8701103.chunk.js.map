{"version":3,"sources":["Data/LocalStorageComponent.ts","Data/LocalStorage.ts","version.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","Views/TabViewBase.tsx","Morse/MorsePicture.tsx","Morse/MorseStream.tsx","Morse/MorseTable.tsx","Views/Encoding/Morse.tsx"],"names":["LocalStorageComponent","props","_this","Object","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","VERSION_STORAGE_KEY","previousVersion","LocalStorage","getObject","versionIncreased","version","clear","setObject","prev","current","compareVersions","restoreState","updateState","onUpdateState","saveState","getLocalStorageKey","onSaveState","onRestoreState","Component","undefined","_isSupported","storage","window","localStorage","x","setItem","removeItem","e","DOMException","code","name","length","key","isSupported","getItem","getKey","objString","JSON","parse","value","object","stringify","concat","_prefix","__webpack_require__","d","__webpack_exports__","get_get","target","property","receiver","Reflect","get","base","prototype","hasOwnProperty","getPrototypeOf","_superPropBase","desc","getOwnPropertyDescriptor","TabViewBase","_activeKey","state","activeKey","savedState","setState","MorsePicture","Array","from","morseString","map","index","react_default","a","createElement","renderDot","renderDash","className","viewBox","cx","cy","r","width","height","MorseStream","classCallCheck","possibleConstructorReturn","_morseStream","onKeyDown","bind","assertThisInitialized","onKeyPress","morseStream","document","addEventListener","removeEventListener","_this2","Card_default","Header","Body","codeText","plainText","invertText","reverseText","invertReverseText","ButtonToolbar_default","ButtonGroup_default","Button_default","onClick","onDotClick","variant","onDashClick","onBackspaceClick","onNextClick","onClearClick","replace","MorseString","toString","invertDotsAndDashes","reverse","ev","defaultPrevented","handled","keyCode","preventDefault","Character","DOT","DASH","substring","lastCharacter","slice","CHARACTER_DIVIDER","WORD_DIVIDER","MorseTable","Table_default","striped","responsive","renderRows","getPotentialMatches","entry","display","Morse_MorsePicture","toMorseString","encoding","Morse","Tabs_default","animation","id","onSelect","onTabSelect","Tab_default","eventKey","title","src_Morse_MorseStream","src_Morse_MorseTable"],"mappings":"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","file":"static/js/12.e8701103.chunk.js","sourcesContent":["import compareVersions from 'compare-versions';\nimport { Component } from 'react';\nimport LocalStorage from './LocalStorage';\nimport { version } from '../version';\n\nabstract class LocalStorageComponent<P = {}, S = {}, SavedState = {}> extends Component<P, S> {\n  public constructor(props: P) {\n    super(props);\n\n    // If the current localstorage was created with a prior version of puzztool, clear\n    // the local storage to get rid of any obsolete or incompatible artifacts\n    const previousVersion = LocalStorage.getObject<string>(this.VERSION_STORAGE_KEY);\n    if (this.versionIncreased(previousVersion, version)) {\n      LocalStorage.clear();\n      // Store the current version\n      LocalStorage.setObject<string>(this.VERSION_STORAGE_KEY, version);\n    }\n  }\n\n  private versionIncreased(prev: string | null, current: string): boolean {\n    if (prev == null) {\n      // If there's no recorded version number, this is the user's first visit\n      // to the page since 0.7.0 released.  To clean up any potential legacy\n      // incompatabilities, clear storage and write the version.\n      return true;\n    }\n\n    return compareVersions(current, prev) === 1;\n  }\n\n  public componentDidMount() {\n    this.restoreState();\n    this.updateState();\n  }\n\n  protected updateState() {\n    this.onUpdateState();\n    this.saveState();\n  }\n\n  protected abstract getLocalStorageKey(): string;\n  protected abstract onSaveState(): SavedState;\n  protected abstract onRestoreState(savedState: SavedState | null): void;\n  protected abstract onUpdateState(): void;\n\n  private saveState() {\n    LocalStorage.setObject<SavedState>(this.getLocalStorageKey(), this.onSaveState());\n  }\n\n  private restoreState() {\n    this.onRestoreState(LocalStorage.getObject<SavedState>(this.getLocalStorageKey()));\n  }\n\n  private readonly VERSION_STORAGE_KEY: string = \"puzztoolVersion\";\n}\n\nexport default LocalStorageComponent;\n","class LocalStorage {\n  private static _isSupported?: boolean;\n  private static _prefix: string = 'puzztool';\n\n  public static isSupported() {\n    if (this._isSupported === undefined) {\n      const storage = window.localStorage;\n      const x = '__storage_test__';\n\n      try {\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        this._isSupported = true;\n      } catch (e) {\n          this._isSupported = e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            storage.length !== 0;\n      }\n    }\n\n    return this._isSupported;\n  }\n\n  public static getItem(key: string) {\n    if (this.isSupported()) {\n      return window.localStorage.getItem(this.getKey(key));\n    }\n\n    return null;\n  }\n\n  public static getObject<T>(key: string) {\n    if (this.isSupported()) {\n      const objString = window.localStorage.getItem(this.getKey(key));\n\n      if (objString !== null) {\n        return JSON.parse(objString) as T;\n      }\n    }\n\n    return null;\n  }\n\n  public static setItem(key: string, value: string) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), value);\n    }\n  }\n\n  public static setObject<T>(key: string, object: T) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), JSON.stringify(object));\n    }\n  }\n\n  public static clear() {\n    if (this.isSupported()) {\n      window.localStorage.clear();\n    }\n  }\n\n  private static getKey(key: string) {\n    return `${this._prefix}_${key}`;\n  }\n}\n\nexport default LocalStorage;\n","// generated by genversion\nexport const version = '0.7.0';\n","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import LocalStorageComponent from '../Data/LocalStorageComponent';\n\n// To inherit from this class:\n// 1. import Tab from 'react-bootstrap/Tab';\n// 2. import Tabs from 'react-bootstrap/Tabs';\n// 3. override render() and getLocalStorageKey()\n// 4. Ensure your constructor calls super()\n\ntype TabViewBaseProps = {};\ntype State = {\n  activeKey: number,\n};\n\ntype SavedState = {\n  activeKey: number,\n};\n\nabstract class TabViewBase extends LocalStorageComponent<TabViewBaseProps, State, SavedState> {\n  private _activeKey: number = 1;\n\n  constructor(props: TabViewBaseProps) {\n    super(props);\n\n    this.state = {\n      activeKey: this._activeKey,\n    };\n  }\n\n  /* Classes derived from TabViewBase should implement the following functions:\n\n  public render() {}\n\n  protected getLocalStorageKey() {\n    return 'YourClassNameHere';\n  }\n  */\n\n  protected onSaveState() {\n    return {\n      activeKey: this._activeKey,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._activeKey = savedState.activeKey;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      activeKey: this._activeKey,\n    });\n  }\n\n  protected onTabSelect(activeKey: number) {\n    this._activeKey = activeKey;\n    this.updateState();\n  }\n}\n\nexport default TabViewBase;\n","import React, { Component } from 'react';\n\ntype Props = {\n  morseString: String\n};\n\nclass MorsePicture extends Component<Props> {\n  public static renderDot() {\n    return (\n      <svg className=\"MorsePicture-dotIcon\" viewBox=\"0 0 30 30\">\n        <circle cx=\"15\" cy=\"15\" r=\"15\" />\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    );\n  }\n\n  public static renderDash() {\n    return (\n      <svg className=\"MorsePicture-dashIcon\" viewBox=\"0 0 90 30\">\n        <rect width=\"90\" height=\"30\" />\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    );\n  }\n\n  public render() {\n    return Array.from(this.props.morseString)\n      .map((value: string, index: number) => (\n        <span key={index}>\n          {value === '.' ? MorsePicture.renderDot() : MorsePicture.renderDash()}\n        </span>\n      ));\n  }\n}\n\nexport default MorsePicture;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport { MorseCharacter as Character, MorseString } from 'puzzle-lib';\nimport LocalStorageComponent from '../Data/LocalStorageComponent';\nimport MorsePicture from './MorsePicture';\nimport './MorseStream.scss';\n\ntype Props = {};\ntype State = {\n  morseStream: string\n};\n\ntype SavedState = {\n  morseStream: string\n};\n\nclass MorseStream extends LocalStorageComponent<Props, State, SavedState> {\n\n  private _morseStream: string = '';\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n\n    this.state = {\n      morseStream: this._morseStream,\n    };\n  }\n\n  public componentDidMount() {\n    super.componentDidMount();\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keypress', this.onKeyPress);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n    document.removeEventListener('keypress', this.onKeyPress);\n  }\n\n  public render() {\n    return (\n      <div className=\"MorseStream\">\n        <Card className=\"MorseStream-morse-output\">\n          <Card.Header>Input</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.codeText()}<span className=\"blinking-cursor\">|</span>\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Plaintext</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.plainText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Swap Dots/Dashes</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.invertText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.reverseText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left + Swap Dots/Dashes</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.invertReverseText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <ButtonToolbar className=\"MorseStream-inputCommands\">\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onDotClick()}\n              variant=\"primary\"\n            >\n              {MorsePicture.renderDot()}\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onDashClick()}\n              variant=\"primary\"\n            >\n              {MorsePicture.renderDash()}\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n        <ButtonToolbar className=\"MorseStream-commands\">\n          <ButtonGroup>\n            <Button onClick={() => this.onBackspaceClick()}>&#x232b;</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button onClick={() => this.onNextClick()}>Next</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onClearClick()}\n              variant=\"danger\"\n            >\n              Clear\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'MorseStream';\n  }\n\n  protected onSaveState() {\n    return {\n      morseStream: this._morseStream,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._morseStream = savedState.morseStream;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      morseStream: this._morseStream,\n    });\n  }\n\n  private codeText(): string {\n    // Replace dot with interpunct for readability\n    // Replace dash with full width hyphen for readability.  Don't use emdash\n    // because multiple emdashes get combined with no space between them.\n    return this._morseStream.replace(/\\./g, '\\u00b7').replace(/-/g, '\\uff0d');\n  }\n\n  private plainText(): string {\n    return new MorseString(this._morseStream).toString();\n  }\n\n  private invertText(): string {\n    return new MorseString(this._morseStream).invertDotsAndDashes().toString();\n  }\n\n  private reverseText(): string {\n    return new MorseString(this._morseStream).reverse().toString();\n  }\n\n  private invertReverseText(): string {\n    return new MorseString(this._morseStream)\n      .invertDotsAndDashes()\n      .reverse()\n      .toString();\n  }\n\n  private onKeyDown(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = false;\n\n    // Chrome won't trigger keypress for any keys that can invoke browser\n    // actions.\n    if ((ev.key === \"Backspace\") || (ev.keyCode === 8)) { // Backspace\n      this.onBackspaceClick();\n      handled = true;\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onKeyPress(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = true;\n    if (ev.key) {\n      switch (ev.key) {\n        case \"-\":\n        case \"j\":\n          this.onDashClick();\n          break;\n        case \".\":\n        case \"k\":\n          this.onDotClick();\n          break;\n        case \"Enter\":\n        case \" \":\n        case \"l\":\n          this.onNextClick();\n          break;\n        case \";\":\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    } else {\n      // Older browsers such as Edge don't support ev.key\n      switch (ev.keyCode) {\n        case 45: // '-'\n        case 106: // 'J'\n          this.onDashClick();\n          break;\n        case 46: // '.'\n        case 107: // 'K'\n          this.onDotClick();\n          break;\n        case 13: // Enter\n        case 32: // Space\n        case 108: // 'L'\n          this.onNextClick();\n          break;\n        case 59: // ';'\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onDotClick() {\n    this._morseStream += Character.DOT;\n\n    this.updateState();\n  }\n\n  private onDashClick() {\n    this._morseStream += Character.DASH;\n\n    this.updateState();\n  }\n\n  private onBackspaceClick() {\n    if (this._morseStream.length > 0) {\n      this._morseStream =\n        this._morseStream.substring(0, this._morseStream.length - 1);\n    }\n\n    this.updateState();\n  }\n\n  private onNextClick() {\n    if (this._morseStream.length > 0) {\n      const lastCharacter = this._morseStream.slice(-1);\n      if (lastCharacter === MorseString.CHARACTER_DIVIDER) {\n        // Pressing next twice starts a new word\n        this._morseStream =\n          this._morseStream.substring(0, this._morseStream.length - 1) +\n          MorseString.WORD_DIVIDER;\n      } else if (lastCharacter !== MorseString.WORD_DIVIDER) {\n        this._morseStream += MorseString.CHARACTER_DIVIDER;\n      }\n    }\n\n    this.updateState();\n  }\n\n  private onClearClick() {\n    this._morseStream = '';\n\n    this.updateState();\n  }\n}\n\nexport default MorseStream;\n","import React, { Component } from 'react';\nimport { MorseCharacter as Character } from 'puzzle-lib';\nimport Table from 'react-bootstrap/Table';\nimport MorsePicture from './MorsePicture';\nimport './MorseTable.scss';\n\nclass MorseTable extends Component {\n  public render() {\n    return (\n      <div className=\"MorseTable\">\n        <Table striped={true} responsive={true}>\n          <thead>\n            <tr>\n              <th>Character</th>\n              <th>Morse</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderRows()}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\n  private renderRows() {\n    const characters = new Character().getPotentialMatches();\n    return characters.map((entry) => (\n      <tr key={entry.display}>\n        <td>{entry.display}</td>\n        <td>\n          <div className=\"MorseTable-morseView\">\n            <MorsePicture morseString={Character.toMorseString(entry.encoding)} />\n          </div>\n        </td>\n      </tr>\n    ));\n  }\n}\n\nexport default MorseTable;\n","import React from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport TabViewBase from '../TabViewBase';\nimport MorseStream from '../../Morse/MorseStream';\nimport MorseTable from '../../Morse/MorseTable';\nimport './Morse.scss';\n\nclass Morse extends TabViewBase {\n  public render() {\n    return (\n      <div className=\"Morse\">\n        <Tabs\n          activeKey={this.state.activeKey}\n          animation={false}\n          id=\"Morse-tabs\"\n          // tslint:disable-next-line: no-any\n          onSelect={(activeKey: any) => this.onTabSelect(activeKey as number)}\n        >\n          <Tab className=\"Morse-tab-value\" eventKey={1} title=\"Value\">\n            <MorseStream />\n          </Tab>\n          <Tab eventKey={2} title=\"Reference\">\n            <MorseTable />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'Morse';\n  }\n}\n\nexport default Morse;\n"],"sourceRoot":""}
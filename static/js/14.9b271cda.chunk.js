(this.webpackJsonppuzztool=this.webpackJsonppuzztool||[]).push([[14],{220:function(e,t,n){},254:function(e,t,n){"use strict";n.r(t);var c,o=n(1),s=n(81),r=n(50),i=(n(0),n(36)),a=n(51),l=n(86),j=n(33),u=n(66),d=n(45),x=n(102),h=n(82),b=n(88),O=n(105);n(220);!function(e){e[e.consistent=0]="consistent",e[e.mixed=1]="mixed"}(c||(c={}));var m={clear:O.a,setHomogeneous:O.c,setText:O.d};var p=Object(h.b)((function(e){return{homogeneous:e.encoding.autoConvert.homogeneous,text:e.encoding.autoConvert.text}}),m)((function(e){var t=Object(b.a)();return Object(o.jsxs)("div",{className:"AutoConvertStream",children:[Object(o.jsxs)(j.a,{className:"AutoConvertStream-input",children:[Object(o.jsx)(j.a.Header,{children:e.prompt}),Object(o.jsxs)(j.a.Body,{children:[Object(o.jsx)(u.a,{onChange:function(t){e.setText(t.currentTarget.value)},placeholder:"Text",ref:t,value:e.text}),Object(o.jsxs)(l.a,{className:"AutoConvertStream-commands",children:[Object(o.jsxs)(x.a,{name:"options",onChange:function(t){return e.setHomogeneous(t===c.consistent)},type:"radio",value:e.homogeneous?c.consistent:c.mixed,children:[Object(o.jsx)(d.a,{value:c.consistent,children:"Consistent"}),Object(o.jsx)(d.a,{value:c.mixed,children:"Mixed"})]}),Object(o.jsx)(a.a,{children:Object(o.jsx)(i.a,{onClick:function(){e.clear()},variant:"danger",children:"Clear"})})]})]})]}),Object(o.jsxs)(j.a,{children:[Object(o.jsx)(j.a.Header,{children:"Output"}),Object(o.jsx)(j.a.Body,{children:Object(o.jsx)("pre",{className:"AutoConvertStream-output",children:r.StringAutoConvert.convertString(e.text,e.homogeneous)||" "})})]})]})}));t.default=function(){return Object(o.jsx)(s.a,{description:Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("p",{children:'AutoConvert will automatically detect and convert several encodings - simply enter your ciphertext. If all of your text is in the same encoding, you can select "force consistent encoding". This can be useful for ambigious strings.'}),Object(o.jsx)("p",{children:"Some of the supported encodings are:"}),Object(o.jsxs)("ul",{children:[Object(o.jsx)("li",{children:"ASCII (A=65, B=66)"}),Object(o.jsx)("li",{children:"Five bit binary (A=00001, B=00010)"}),Object(o.jsx)("li",{children:"Eight bit binary (A=01100001, B=01100010)"}),Object(o.jsx)("li",{children:"Ordinal (A=1, B=2)"}),Object(o.jsx)("li",{children:"Ternary (A=001, E=012)"})]})]}),title:"AutoConvert",children:Object(o.jsx)(p,{prompt:"Input"})})}}}]);
//# sourceMappingURL=14.9b271cda.chunk.js.map
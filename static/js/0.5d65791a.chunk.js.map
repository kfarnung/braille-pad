{"version":3,"sources":["../node_modules/puzzle-lib/build/src/index.js","../node_modules/puzzle-lib/build/src/Common/EncodingCategory.js","../node_modules/trie-prefix-tree/dist/config.js","../node_modules/puzzle-lib/build/src/Braille/BrailleEncoding.js","../node_modules/puzzle-lib/build/src/Common/EncodingCharacterBase.js","../node_modules/puzzle-lib/build/src/Common/EncodingDataBase.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarUtils.js","../node_modules/puzzle-lib/build/src/Cipher/KeyedCipherStringBase.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterEncoding.js","../node_modules/puzzle-lib/build/src/Morse/MorseEncoding.js","../node_modules/puzzle-lib/build/src/Braille/BrailleData.js","../node_modules/puzzle-lib/build/src/Common/EncodingEntry.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterConversion.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterTableEntry.js","../node_modules/puzzle-lib/build/src/Common/CharacterImage.js","../node_modules/puzzle-lib/build/src/Common/InlineSvg.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseCharacter.js","../node_modules/puzzle-lib/build/src/Common/Helpers.js","../node_modules/puzzle-lib/build/src/Nato/NatoCharacter.js","../node_modules/puzzle-lib/build/src/Resistor/ResistorColorEntry.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreEncoding.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDegrees.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDirection.js","../node_modules/puzzle-lib/build/src/WordSearch/Result.js","../node_modules/puzzle-lib/build/src/WordSearch/WordSearchDirection.js","../node_modules/trie-prefix-tree/dist/append.js","../node_modules/trie-prefix-tree/dist/utils.js","../node_modules/puzzle-lib/build/src/Braille/BrailleCharacter.js","../node_modules/puzzle-lib/build/src/Common/EncodingLookupResult.js","../node_modules/puzzle-lib/build/src/Braille/BrailleDot.js","../node_modules/puzzle-lib/build/src/Braille/BrailleStream.js","../node_modules/puzzle-lib/build/src/Cipher/AutoKeyString.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarString.js","../node_modules/puzzle-lib/build/src/Cipher/VigenereString.js","../node_modules/puzzle-lib/build/src/Conversion/SignificantFigures.js","../node_modules/puzzle-lib/build/src/Conversion/StringAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseData.js","../node_modules/puzzle-lib/build/src/Morse/MorseString.js","../node_modules/puzzle-lib/build/src/Nato/NatoData.js","../node_modules/puzzle-lib/build/src/NavalFlags/NavalFlags.js","../node_modules/puzzle-lib/build/src/Resistor/Resistor.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreCharacter.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreData.js","../node_modules/puzzle-lib/build/src/WordSearch/WordSearchSolver.js","../node_modules/trie-prefix-tree/dist/index.js","../node_modules/trie-prefix-tree/dist/create.js","../node_modules/trie-prefix-tree/dist/checkPrefix.js","../node_modules/trie-prefix-tree/dist/recursePrefix.js","../node_modules/trie-prefix-tree/dist/recurseRandomWord.js","../node_modules/trie-prefix-tree/dist/permutations.js"],"names":["Object","defineProperty","exports","value","BrailleCharacter_1","__webpack_require__","BrailleCharacter","BrailleDot_1","BrailleDot","BrailleEncoding_1","BrailleEncoding","BrailleStream_1","BrailleStream","AutoKeyString_1","AutoKeyString","CaesarString_1","CaesarString","KeyedCipherStringBase_1","KeyedCipherStringBase","VigenereString_1","VigenereString","CharacterImage_1","CharacterImage","EncodingCategory_1","EncodingCategory","EncodingEntry_1","EncodingEntry","InlineSvg_1","InlineSvg","CharacterAutoConvert_1","CharacterAutoConvert","CharacterConversion_1","CharacterConversion","CharacterEncoding_1","CharacterEncoding","CharacterTableEntry_1","CharacterTableEntry","SignificantFigures_1","SignificantFigures","StringAutoConvert_1","StringAutoConvert","MorseCharacter_1","MorseCharacter","MorseEncoding_1","MorseEncoding","MorseString_1","MorseString","NatoCharacter_1","NatoCharacter","NatoData_1","NatoData","NavalFlags_1","NavalFlags","Resistor_1","Resistor","ResistorColorEntry_1","ResistorColorEntry","SemaphoreCharacter_1","SemaphoreCharacter","SemaphoreDegrees_1","SemaphoreDegrees","SemaphoreDirection_1","SemaphoreDirection","Result_1","WordSearchResult","Result","WordSearchDirection_1","WordSearchDirection","WordSearchSolver_1","WordSearchSolver","default","END_WORD","END_WORD_REPLACER","PERMS_MIN_LEN","module","EncodingCharacterBase","data","category","this","_lookup","_data","_category","invalidateLookup","prototype","get","set","enumerable","configurable","clear","onClear","empty","onEmpty","getExactMatches","ensureLookup","exact","getPotentialMatches","partial","toString","exactString","valid","length","valueOf","getEncoding","lookup","EncodingLookupResult_1","EncodingDataBase","_entries","encoding","All","result","EncodingLookupResult","_i","_a","entry","push","addToList","display","CaesarUtils","rotateLetter","ch","rot","Error","alphaLength","code","charCodeAt","base","isLowerAlpha","lowerA","isUpperAlpha","upperA","String","fromCharCode","rotateLetterWithKey","key","keyIndex","decrypt","keyCh","getCharacterWithMod","toOrdinal","isAlpha","str","index","charAt","upperZ","lowerZ","text","_text","_key","encrypt","convert","packMorse","args","arguments","None","shift","args_1","arg","Dot","Dash","__extends","_extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","create","EncodingDataBase_1","BrailleData","_super","_this","call","LetterA","Letter","LetterB","LetterC","LetterD","LetterE","LetterF","LetterG","LetterH","LetterI","LetterJ","LetterK","LetterL","LetterM","LetterN","LetterO","LetterP","LetterQ","LetterR","LetterS","LetterT","LetterU","LetterV","LetterW","LetterX","LetterY","LetterZ","Number0","Number","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","FormattingNumber","Formatting","FormattingCapital","PunctuationComma","Punctuation","PunctuationSemicolon","PunctuationApostrophe","PunctuationColon","PunctuationHyphen","PunctuationDecimalPoint","PunctuationFullStop","PunctuationExclamationPoint","PunctuationOpenQuote","PunctuationQuestionMark","PunctuationCloseQuote","PunctuationBracket","PunctuationSlash","instance","getAsciiTable","retVal","addAsciiRange","toAscii","getOrdinalTable","ascii","chCode","ordinalCode","array","start","end","conversion","maxValue","i","letter","character","binary","getValue","ternary","octal","decimal","hexadecimal","padStart","Math","ceil","log","image","inlineSvg","viewBoxWidth","viewBoxHeight","render","convertCharacter","input","forcedCharacterEncoding","determineCharacterEncoding","Latin","baseTen","parseInt","Ascii","asciiPrintable","Ordinal","FiveBitBinary","appearsBinary","EightBitBinary","match","numeric","character_1","EncodingCharacterBase_1","Helpers_1","MorseData_1","MORSE_BITMASK","MorseData","_morse","toMorseString","morseChars","DOT","DASH","parseMorseString","morse","bits","backspace","substring","dot","dash","invertDotsAndDashes","Helpers","assert","indexOf","RESERVED_DIVIDER","replace","reverse","split","join","condition","assertMsg","message","word","name","colorCode","multiplier","toleranceInPercent","hasValue","undefined","getDisplayValue","hasTolerance","getDisplayTolerance","SemaphoreEncoding","FromDegrees","degrees","position","North","ToDegrees","direction","counter","wordPoints","points","from","trie","isEndWordLetter","_config2","isLastLetter","obj","_config","__esModule","objectCopy","JSON","parse","stringify","spacer","BrailleData_1","_encoding","mask","toggle","map","_chars","_currentStr","_processPosition","_numberMode","invalidate","value_1","append","pop","space","update","CaesarUtils_1","apply","rotStr","fullKey","currentLetter","getRotation","getRotations","rotations","num","sigFigs","roundInternal","floor","round","func","RangeError","factor","getFactor","absFactor","abs","absNum","digits","pow","convertString","homogeneous","splitString","encoding_1","determineStringEncoding","reduce","encodingCount","encodingKeys","parsed_1","charEncoding","maxEncoding","maxCount","encodingKeys_1","filter","item","PunctuationPeriod","PunctuationForwardSlash","PunctuationOpenParenthesis","PunctuationCloseParenthesis","PunctuationAmpersand","PunctuationDoubleDash","PunctuationPlusSign","PunctuationUnderscore","PunctuationQuotationMark","PunctuationDollarSign","PunctuationAtSign","characterDivider","wordDivider","CHARACTER_DIVIDER","WORD_DIVIDER","wordCharacters","w","wc","_words","subarray","_b","word_1","s","toUpperCase","colors","currentColor","INVALID_RESISTOR","applyMultiplier","multipler","BLACK","BROWN","RED","ORANGE","YELLOW","GREEN","BLUE","VIOLET","GREY","WHITE","GOLD","SILVER","colorTable","SemaphoreData_1","SemaphoreEncoding_1","SemaphoreData","_directions","addDirection","parseEncoding","directions","slice","dir","splice","removeDirection","hasDirection","getDegrees","sort","a","getPotentialMatch","other","previousValue","currentValue","_matrix","_targets","setWords","words","words_1","full","trim","addWord","setGrid","matrix","setDirections","Cardinal","CardinalAndDiagonal","concat","Diagonal","findWords","results","numRows","yIdx","lineLength","xIdx","x","y","pointResults","startSearch","translation","directionalResults","checkDirection","currentPoint","currentString","pointHistory","isInBounds","wordsWithPrefix","getPrefix","foundWord","point","_typeof","Symbol","iterator","isArray","_create2","arr","arr2","_toConsumableArray","tree","dump","_utils2","toLowerCase","_append2","removeWord","_checkPrefix","_checkPrefix6","prefixFound","prefixNode","isPrefix","prefix","strPrefix","sorted","_recursePrefix2","getRandomWordWithPrefix","_recurseRandomWord2","countPrefix","getWords","hasWord","_checkPrefix4","getAnagrams","letters","_permutations2","type","getSubAnagrams","_interopRequireDefault","accumulator","_append","every","_utils","recursePrefix","node","prefixes","branch","pushInOrder","recurseRandomWord","branches","keys","random","opts","permute","wordIsEmpty","wordFound","endWordFound","len","remaining"],"mappings":"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","file":"static/js/0.5d65791a.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrailleCharacter_1 = require(\"./Braille/BrailleCharacter\");\n\nexports.BrailleCharacter = BrailleCharacter_1.BrailleCharacter;\n\nvar BrailleDot_1 = require(\"./Braille/BrailleDot\");\n\nexports.BrailleDot = BrailleDot_1.BrailleDot;\n\nvar BrailleEncoding_1 = require(\"./Braille/BrailleEncoding\");\n\nexports.BrailleEncoding = BrailleEncoding_1.BrailleEncoding;\n\nvar BrailleStream_1 = require(\"./Braille/BrailleStream\");\n\nexports.BrailleStream = BrailleStream_1.BrailleStream;\n\nvar AutoKeyString_1 = require(\"./Cipher/AutoKeyString\");\n\nexports.AutoKeyString = AutoKeyString_1.AutoKeyString;\n\nvar CaesarString_1 = require(\"./Cipher/CaesarString\");\n\nexports.CaesarString = CaesarString_1.CaesarString;\n\nvar KeyedCipherStringBase_1 = require(\"./Cipher/KeyedCipherStringBase\");\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase_1.KeyedCipherStringBase;\n\nvar VigenereString_1 = require(\"./Cipher/VigenereString\");\n\nexports.VigenereString = VigenereString_1.VigenereString;\n\nvar CharacterImage_1 = require(\"./Common/CharacterImage\");\n\nexports.CharacterImage = CharacterImage_1.CharacterImage;\n\nvar EncodingCategory_1 = require(\"./Common/EncodingCategory\");\n\nexports.EncodingCategory = EncodingCategory_1.EncodingCategory;\n\nvar EncodingEntry_1 = require(\"./Common/EncodingEntry\");\n\nexports.EncodingEntry = EncodingEntry_1.EncodingEntry;\n\nvar InlineSvg_1 = require(\"./Common/InlineSvg\");\n\nexports.InlineSvg = InlineSvg_1.InlineSvg;\n\nvar CharacterAutoConvert_1 = require(\"./Conversion/CharacterAutoConvert\");\n\nexports.CharacterAutoConvert = CharacterAutoConvert_1.CharacterAutoConvert;\n\nvar CharacterConversion_1 = require(\"./Conversion/CharacterConversion\");\n\nexports.CharacterConversion = CharacterConversion_1.CharacterConversion;\n\nvar CharacterEncoding_1 = require(\"./Conversion/CharacterEncoding\");\n\nexports.CharacterEncoding = CharacterEncoding_1.CharacterEncoding;\n\nvar CharacterTableEntry_1 = require(\"./Conversion/CharacterTableEntry\");\n\nexports.CharacterTableEntry = CharacterTableEntry_1.CharacterTableEntry;\n\nvar SignificantFigures_1 = require(\"./Conversion/SignificantFigures\");\n\nexports.SignificantFigures = SignificantFigures_1.SignificantFigures;\n\nvar StringAutoConvert_1 = require(\"./Conversion/StringAutoConvert\");\n\nexports.StringAutoConvert = StringAutoConvert_1.StringAutoConvert;\n\nvar MorseCharacter_1 = require(\"./Morse/MorseCharacter\");\n\nexports.MorseCharacter = MorseCharacter_1.MorseCharacter;\n\nvar MorseEncoding_1 = require(\"./Morse/MorseEncoding\");\n\nexports.MorseEncoding = MorseEncoding_1.MorseEncoding;\n\nvar MorseString_1 = require(\"./Morse/MorseString\");\n\nexports.MorseString = MorseString_1.MorseString;\n\nvar NatoCharacter_1 = require(\"./Nato/NatoCharacter\");\n\nexports.NatoCharacter = NatoCharacter_1.NatoCharacter;\n\nvar NatoData_1 = require(\"./Nato/NatoData\");\n\nexports.NatoData = NatoData_1.NatoData;\n\nvar NavalFlags_1 = require(\"./NavalFlags/NavalFlags\");\n\nexports.NavalFlags = NavalFlags_1.NavalFlags;\n\nvar Resistor_1 = require(\"./Resistor/Resistor\");\n\nexports.Resistor = Resistor_1.Resistor;\n\nvar ResistorColorEntry_1 = require(\"./Resistor/ResistorColorEntry\");\n\nexports.ResistorColorEntry = ResistorColorEntry_1.ResistorColorEntry;\n\nvar SemaphoreCharacter_1 = require(\"./Semaphore/SemaphoreCharacter\");\n\nexports.SemaphoreCharacter = SemaphoreCharacter_1.SemaphoreCharacter;\n\nvar SemaphoreDegrees_1 = require(\"./Semaphore/SemaphoreDegrees\");\n\nexports.SemaphoreDegrees = SemaphoreDegrees_1.SemaphoreDegrees;\n\nvar SemaphoreDirection_1 = require(\"./Semaphore/SemaphoreDirection\");\n\nexports.SemaphoreDirection = SemaphoreDirection_1.SemaphoreDirection;\n\nvar Result_1 = require(\"./WordSearch/Result\");\n\nexports.WordSearchResult = Result_1.Result;\n\nvar WordSearchDirection_1 = require(\"./WordSearch/WordSearchDirection\");\n\nexports.WordSearchDirection = WordSearchDirection_1.WordSearchDirection;\n\nvar WordSearchSolver_1 = require(\"./WordSearch/WordSearchSolver\");\n\nexports.WordSearchSolver = WordSearchSolver_1.WordSearchSolver;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EncodingCategory;\n\n(function (EncodingCategory) {\n  EncodingCategory[EncodingCategory[\"None\"] = 0] = \"None\";\n  EncodingCategory[EncodingCategory[\"Letter\"] = 2] = \"Letter\";\n  EncodingCategory[EncodingCategory[\"Number\"] = 4] = \"Number\";\n  EncodingCategory[EncodingCategory[\"Formatting\"] = 8] = \"Formatting\";\n  EncodingCategory[EncodingCategory[\"Punctuation\"] = 16] = \"Punctuation\";\n  EncodingCategory[EncodingCategory[\"All\"] = 255] = \"All\";\n})(EncodingCategory = exports.EncodingCategory || (exports.EncodingCategory = {}));","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  END_WORD: '$',\n  END_WORD_REPLACER: '9a219a89-91cd-42e2-abd5-eb113af08ca8',\n  PERMS_MIN_LEN: 2\n};\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleEncoding;\n\n(function (BrailleEncoding) {\n  BrailleEncoding[BrailleEncoding[\"None\"] = 0] = \"None\"; // Letters (first decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterA\"] = 1] = \"LetterA\";\n  BrailleEncoding[BrailleEncoding[\"LetterB\"] = 3] = \"LetterB\";\n  BrailleEncoding[BrailleEncoding[\"LetterC\"] = 9] = \"LetterC\";\n  BrailleEncoding[BrailleEncoding[\"LetterD\"] = 25] = \"LetterD\";\n  BrailleEncoding[BrailleEncoding[\"LetterE\"] = 17] = \"LetterE\";\n  BrailleEncoding[BrailleEncoding[\"LetterF\"] = 11] = \"LetterF\";\n  BrailleEncoding[BrailleEncoding[\"LetterG\"] = 27] = \"LetterG\";\n  BrailleEncoding[BrailleEncoding[\"LetterH\"] = 19] = \"LetterH\";\n  BrailleEncoding[BrailleEncoding[\"LetterI\"] = 10] = \"LetterI\";\n  BrailleEncoding[BrailleEncoding[\"LetterJ\"] = 26] = \"LetterJ\"; // Letters (second decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterK\"] = 5] = \"LetterK\";\n  BrailleEncoding[BrailleEncoding[\"LetterL\"] = 7] = \"LetterL\";\n  BrailleEncoding[BrailleEncoding[\"LetterM\"] = 13] = \"LetterM\";\n  BrailleEncoding[BrailleEncoding[\"LetterN\"] = 29] = \"LetterN\";\n  BrailleEncoding[BrailleEncoding[\"LetterO\"] = 21] = \"LetterO\";\n  BrailleEncoding[BrailleEncoding[\"LetterP\"] = 15] = \"LetterP\";\n  BrailleEncoding[BrailleEncoding[\"LetterQ\"] = 31] = \"LetterQ\";\n  BrailleEncoding[BrailleEncoding[\"LetterR\"] = 23] = \"LetterR\";\n  BrailleEncoding[BrailleEncoding[\"LetterS\"] = 14] = \"LetterS\";\n  BrailleEncoding[BrailleEncoding[\"LetterT\"] = 30] = \"LetterT\"; // Letters (third decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterU\"] = 37] = \"LetterU\";\n  BrailleEncoding[BrailleEncoding[\"LetterV\"] = 39] = \"LetterV\";\n  BrailleEncoding[BrailleEncoding[\"LetterX\"] = 45] = \"LetterX\";\n  BrailleEncoding[BrailleEncoding[\"LetterY\"] = 61] = \"LetterY\";\n  BrailleEncoding[BrailleEncoding[\"LetterZ\"] = 53] = \"LetterZ\"; // Letters (fourth decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterW\"] = 58] = \"LetterW\"; // Numbers\n\n  BrailleEncoding[BrailleEncoding[\"Number1\"] = 1] = \"Number1\";\n  BrailleEncoding[BrailleEncoding[\"Number2\"] = 3] = \"Number2\";\n  BrailleEncoding[BrailleEncoding[\"Number3\"] = 9] = \"Number3\";\n  BrailleEncoding[BrailleEncoding[\"Number4\"] = 25] = \"Number4\";\n  BrailleEncoding[BrailleEncoding[\"Number5\"] = 17] = \"Number5\";\n  BrailleEncoding[BrailleEncoding[\"Number6\"] = 11] = \"Number6\";\n  BrailleEncoding[BrailleEncoding[\"Number7\"] = 27] = \"Number7\";\n  BrailleEncoding[BrailleEncoding[\"Number8\"] = 19] = \"Number8\";\n  BrailleEncoding[BrailleEncoding[\"Number9\"] = 10] = \"Number9\";\n  BrailleEncoding[BrailleEncoding[\"Number0\"] = 26] = \"Number0\"; // Formatting\n\n  BrailleEncoding[BrailleEncoding[\"FormattingNumber\"] = 60] = \"FormattingNumber\";\n  BrailleEncoding[BrailleEncoding[\"FormattingCapital\"] = 32] = \"FormattingCapital\"; // Punctuation\n\n  BrailleEncoding[BrailleEncoding[\"PunctuationComma\"] = 2] = \"PunctuationComma\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSemicolon\"] = 6] = \"PunctuationSemicolon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationApostrophe\"] = 4] = \"PunctuationApostrophe\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationColon\"] = 18] = \"PunctuationColon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationHyphen\"] = 36] = \"PunctuationHyphen\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationDecimalPoint\"] = 40] = \"PunctuationDecimalPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationFullStop\"] = 50] = \"PunctuationFullStop\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationExclamationPoint\"] = 22] = \"PunctuationExclamationPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationOpenQuote\"] = 38] = \"PunctuationOpenQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationQuestionMark\"] = 38] = \"PunctuationQuestionMark\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationCloseQuote\"] = 52] = \"PunctuationCloseQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationBracket\"] = 54] = \"PunctuationBracket\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSlash\"] = 12] = \"PunctuationSlash\";\n})(BrailleEncoding = exports.BrailleEncoding || (exports.BrailleEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCharacterBase =\n/** @class */\nfunction () {\n  function EncodingCharacterBase(data, category) {\n    this._lookup = null;\n    this._data = data;\n    this._category = category;\n    this.invalidateLookup();\n  }\n\n  Object.defineProperty(EncodingCharacterBase.prototype, \"category\", {\n    get: function get() {\n      return this._category;\n    },\n    set: function set(value) {\n      if (this._category !== value) {\n        this._category = value;\n        this.invalidateLookup();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  EncodingCharacterBase.prototype.clear = function () {\n    this.onClear();\n    this.invalidateLookup();\n  };\n\n  EncodingCharacterBase.prototype.empty = function () {\n    return this.onEmpty();\n  };\n\n  EncodingCharacterBase.prototype.getExactMatches = function () {\n    return this.ensureLookup().exact;\n  };\n\n  EncodingCharacterBase.prototype.getPotentialMatches = function () {\n    return this.ensureLookup().partial;\n  };\n\n  EncodingCharacterBase.prototype.toString = function () {\n    return this.ensureLookup().exactString;\n  };\n\n  EncodingCharacterBase.prototype.valid = function () {\n    return this.ensureLookup().exact.length > 0;\n  };\n\n  EncodingCharacterBase.prototype.valueOf = function () {\n    return this.getEncoding();\n  };\n\n  EncodingCharacterBase.prototype.invalidateLookup = function () {\n    this._lookup = null;\n  };\n\n  EncodingCharacterBase.prototype.ensureLookup = function () {\n    if (!this._lookup) {\n      this._lookup = this._data.lookup(this.getEncoding(), this._category);\n    }\n\n    return this._lookup;\n  };\n\n  return EncodingCharacterBase;\n}();\n\nexports.EncodingCharacterBase = EncodingCharacterBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"./EncodingCategory\");\n\nvar EncodingEntry_1 = require(\"./EncodingEntry\");\n\nvar EncodingLookupResult_1 = require(\"./EncodingLookupResult\");\n\nvar EncodingDataBase =\n/** @class */\nfunction () {\n  function EncodingDataBase() {\n    this._entries = [];\n  }\n\n  EncodingDataBase.prototype.lookup = function (encoding, category) {\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var result = new EncodingLookupResult_1.EncodingLookupResult();\n\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var entry = _a[_i];\n\n      if ((entry.category & category) !== 0) {\n        if (entry.encoding === encoding) {\n          result.exact.push(entry);\n        } else if ((entry.encoding & encoding) === encoding) {\n          result.partial.push(entry);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  EncodingDataBase.prototype.addToList = function (encoding, category, display) {\n    this._entries.push(new EncodingEntry_1.EncodingEntry(encoding, category, display));\n  };\n\n  return EncodingDataBase;\n}();\n\nexports.EncodingDataBase = EncodingDataBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterConversion_1 = require(\"../Conversion/CharacterConversion\");\n\nvar CaesarUtils =\n/** @class */\nfunction () {\n  function CaesarUtils() {}\n\n  CaesarUtils.rotateLetter = function (ch, rot) {\n    if (ch.length !== 1) {\n      throw new Error('Expected a single character');\n    }\n\n    rot %= this.alphaLength;\n\n    if (rot < 0) {\n      rot += this.alphaLength;\n    }\n\n    var code = ch.charCodeAt(0);\n    var base = 0;\n\n    if (this.isLowerAlpha(code)) {\n      base = this.lowerA;\n    } else if (this.isUpperAlpha(code)) {\n      base = this.upperA;\n    } else {\n      return ch;\n    }\n\n    return String.fromCharCode((code - base + rot) % this.alphaLength + base);\n  };\n\n  CaesarUtils.rotateLetterWithKey = function (ch, key, keyIndex, decrypt) {\n    if (decrypt === void 0) {\n      decrypt = false;\n    }\n\n    if (key.length === 0) {\n      return ch;\n    }\n\n    var keyCh = this.getCharacterWithMod(key, keyIndex);\n    var rot = CharacterConversion_1.CharacterConversion.toOrdinal(keyCh) - 1;\n\n    if (decrypt) {\n      rot = -rot;\n    }\n\n    return this.rotateLetter(ch, rot);\n  };\n\n  CaesarUtils.isAlpha = function (ch) {\n    var code = ch.charCodeAt(0);\n    return this.isUpperAlpha(code) || this.isLowerAlpha(code);\n  };\n\n  CaesarUtils.getCharacterWithMod = function (str, index) {\n    return str.charAt(index % str.length);\n  };\n\n  CaesarUtils.isUpperAlpha = function (code) {\n    return code >= this.upperA && code <= this.upperZ;\n  };\n\n  CaesarUtils.isLowerAlpha = function (code) {\n    return code >= this.lowerA && code <= this.lowerZ;\n  };\n\n  CaesarUtils.upperA = 'A'.charCodeAt(0);\n  CaesarUtils.upperZ = 'Z'.charCodeAt(0);\n  CaesarUtils.lowerA = 'a'.charCodeAt(0);\n  CaesarUtils.lowerZ = 'z'.charCodeAt(0);\n  CaesarUtils.alphaLength = 26;\n  return CaesarUtils;\n}();\n\nexports.CaesarUtils = CaesarUtils;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar KeyedCipherStringBase =\n/** @class */\nfunction () {\n  function KeyedCipherStringBase(text, key) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    if (key === void 0) {\n      key = '';\n    }\n\n    this._text = text;\n    this._key = key;\n  }\n\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"key\", {\n    get: function get() {\n      return this._key;\n    },\n    set: function set(value) {\n      this._key = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  KeyedCipherStringBase.prototype.encrypt = function () {\n    return this.convert(false);\n  };\n\n  KeyedCipherStringBase.prototype.decrypt = function () {\n    return this.convert(true);\n  };\n\n  return KeyedCipherStringBase;\n}();\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CharacterEncoding;\n\n(function (CharacterEncoding) {\n  CharacterEncoding[CharacterEncoding[\"None\"] = 0] = \"None\";\n  CharacterEncoding[CharacterEncoding[\"Latin\"] = 1] = \"Latin\";\n  CharacterEncoding[CharacterEncoding[\"Ordinal\"] = 2] = \"Ordinal\";\n  CharacterEncoding[CharacterEncoding[\"FiveBitBinary\"] = 3] = \"FiveBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"EightBitBinary\"] = 4] = \"EightBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"Ascii\"] = 5] = \"Ascii\";\n})(CharacterEncoding = exports.CharacterEncoding || (exports.CharacterEncoding = {}));","\"use strict\"; // The encoding for morse is much less straightforward than the others. The dots\n// and dashes each use two bits of the integer starting with the least-\n// significant bit.\n//\n// Example:\n//\n// 'F' -> ..-.\n//\n// Which encodes as:\n//\n// 01 01 10 01\n//  .  .  -  .\n//\n// Since it's packed starting with the LSB, the resulting number is reversed:\n//\n// 01100101 -> 0x65\n//\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction packMorse() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var value = MorseEncoding.None;\n  var shift = 0;\n\n  for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n    var arg = args_1[_a];\n    arg <<= shift;\n    value |= arg;\n    shift += 2;\n  }\n\n  return value;\n}\n\nvar MorseEncoding;\n\n(function (MorseEncoding) {\n  MorseEncoding[MorseEncoding[\"None\"] = 0] = \"None\"; // Primitives\n\n  MorseEncoding[MorseEncoding[\"Dot\"] = 1] = \"Dot\";\n  MorseEncoding[MorseEncoding[\"Dash\"] = 2] = \"Dash\"; // Letters\n\n  MorseEncoding[MorseEncoding[\"LetterA\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterA\";\n  MorseEncoding[MorseEncoding[\"LetterB\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterB\";\n  MorseEncoding[MorseEncoding[\"LetterC\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterC\";\n  MorseEncoding[MorseEncoding[\"LetterD\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterD\";\n  MorseEncoding[MorseEncoding[\"LetterE\"] = packMorse(MorseEncoding.Dot)] = \"LetterE\";\n  MorseEncoding[MorseEncoding[\"LetterF\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterF\";\n  MorseEncoding[MorseEncoding[\"LetterG\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterG\";\n  MorseEncoding[MorseEncoding[\"LetterH\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterH\";\n  MorseEncoding[MorseEncoding[\"LetterI\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterI\";\n  MorseEncoding[MorseEncoding[\"LetterJ\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterJ\";\n  MorseEncoding[MorseEncoding[\"LetterK\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterK\";\n  MorseEncoding[MorseEncoding[\"LetterL\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterL\";\n  MorseEncoding[MorseEncoding[\"LetterM\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterM\";\n  MorseEncoding[MorseEncoding[\"LetterN\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterN\";\n  MorseEncoding[MorseEncoding[\"LetterO\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterO\";\n  MorseEncoding[MorseEncoding[\"LetterP\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterP\";\n  MorseEncoding[MorseEncoding[\"LetterQ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterQ\";\n  MorseEncoding[MorseEncoding[\"LetterR\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterR\";\n  MorseEncoding[MorseEncoding[\"LetterS\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterS\";\n  MorseEncoding[MorseEncoding[\"LetterT\"] = packMorse(MorseEncoding.Dash)] = \"LetterT\";\n  MorseEncoding[MorseEncoding[\"LetterU\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterU\";\n  MorseEncoding[MorseEncoding[\"LetterV\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterV\";\n  MorseEncoding[MorseEncoding[\"LetterW\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterW\";\n  MorseEncoding[MorseEncoding[\"LetterX\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterX\";\n  MorseEncoding[MorseEncoding[\"LetterY\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterY\";\n  MorseEncoding[MorseEncoding[\"LetterZ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterZ\"; // Numbers\n\n  MorseEncoding[MorseEncoding[\"Number0\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number0\";\n  MorseEncoding[MorseEncoding[\"Number1\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number1\";\n  MorseEncoding[MorseEncoding[\"Number2\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number2\";\n  MorseEncoding[MorseEncoding[\"Number3\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number3\";\n  MorseEncoding[MorseEncoding[\"Number4\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"Number4\";\n  MorseEncoding[MorseEncoding[\"Number5\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number5\";\n  MorseEncoding[MorseEncoding[\"Number6\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number6\";\n  MorseEncoding[MorseEncoding[\"Number7\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number7\";\n  MorseEncoding[MorseEncoding[\"Number8\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number8\";\n  MorseEncoding[MorseEncoding[\"Number9\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"Number9\"; // Punctuation\n\n  MorseEncoding[MorseEncoding[\"PunctuationPeriod\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationPeriod\";\n  MorseEncoding[MorseEncoding[\"PunctuationComma\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationComma\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuestionMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationQuestionMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationApostrophe\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationApostrophe\";\n  MorseEncoding[MorseEncoding[\"PunctuationExclamationPoint\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationExclamationPoint\";\n  MorseEncoding[MorseEncoding[\"PunctuationForwardSlash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationForwardSlash\";\n  MorseEncoding[MorseEncoding[\"PunctuationOpenParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationOpenParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationCloseParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationCloseParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationAmpersand\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationAmpersand\";\n  MorseEncoding[MorseEncoding[\"PunctuationColon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationColon\";\n  MorseEncoding[MorseEncoding[\"PunctuationSemicolon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationSemicolon\";\n  MorseEncoding[MorseEncoding[\"PunctuationDoubleDash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDoubleDash\";\n  MorseEncoding[MorseEncoding[\"PunctuationPlusSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationPlusSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationHyphen\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationHyphen\";\n  MorseEncoding[MorseEncoding[\"PunctuationUnderscore\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationUnderscore\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuotationMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationQuotationMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationDollarSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDollarSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationAtSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationAtSign\";\n})(MorseEncoding = exports.MorseEncoding || (exports.MorseEncoding = {}));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleData =\n/** @class */\nfunction (_super) {\n  __extends(BrailleData, _super);\n\n  function BrailleData() {\n    var _this = _super.call(this) || this;\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingCapital, EncodingCategory_1.EncodingCategory.Formatting, '^');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, \"'\");\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationDecimalPoint, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationFullStop, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationOpenQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationCloseQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    return _this;\n  }\n\n  BrailleData.instance = new BrailleData();\n  return BrailleData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.BrailleData = BrailleData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingEntry =\n/** @class */\nfunction () {\n  function EncodingEntry(encoding, category, display) {\n    this.encoding = encoding;\n    this.category = category;\n    this.display = display;\n  }\n\n  EncodingEntry.prototype.toString = function () {\n    return this.display;\n  };\n\n  return EncodingEntry;\n}();\n\nexports.EncodingEntry = EncodingEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterTableEntry_1 = require(\"./CharacterTableEntry\");\n\nvar CharacterConversion =\n/** @class */\nfunction () {\n  function CharacterConversion() {}\n\n  CharacterConversion.getAsciiTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 48, 57, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 97, 122, CharacterConversion.toAscii, 127);\n    return retVal;\n  };\n\n  CharacterConversion.getOrdinalTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toOrdinal, 26);\n    return retVal;\n  };\n\n  CharacterConversion.toAscii = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var ascii = ch.charCodeAt(0);\n\n    if (ascii >= 0 && ascii <= 127) {\n      return ascii;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.toOrdinal = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var chCode = ch.charCodeAt(0);\n    var ordinalCode = chCode - 'a'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    ordinalCode = chCode - 'A'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.addAsciiRange = function (array, start, end, conversion, maxValue) {\n    for (var i = start; i <= end; i++) {\n      var letter = String.fromCharCode(i);\n      array.push(new CharacterTableEntry_1.CharacterTableEntry(letter, conversion(letter), maxValue));\n    }\n  };\n\n  return CharacterConversion;\n}();\n\nexports.CharacterConversion = CharacterConversion;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterTableEntry =\n/** @class */\nfunction () {\n  function CharacterTableEntry(character, value, maxValue) {\n    this.character = character;\n    this.binary = CharacterTableEntry.getValue(value, 2, maxValue);\n    this.ternary = CharacterTableEntry.getValue(value, 3, maxValue);\n    this.octal = CharacterTableEntry.getValue(value, 8, maxValue);\n    this.decimal = CharacterTableEntry.getValue(value, 10, maxValue);\n    this.hexadecimal = CharacterTableEntry.getValue(value, 16, maxValue);\n  }\n\n  CharacterTableEntry.getValue = function (value, base, maxValue) {\n    return value.toString(base).padStart(Math.ceil(Math.log(maxValue) / Math.log(base)), '0');\n  };\n\n  return CharacterTableEntry;\n}();\n\nexports.CharacterTableEntry = CharacterTableEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage =\n/** @class */\nfunction () {\n  function CharacterImage(character, image) {\n    this.character = character;\n    this.image = image;\n  }\n\n  return CharacterImage;\n}();\n\nexports.CharacterImage = CharacterImage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar InlineSvg =\n/** @class */\nfunction () {\n  function InlineSvg(inlineSvg, viewBoxWidth, viewBoxHeight) {\n    this.inlineSvg = inlineSvg;\n    this.viewBoxWidth = viewBoxWidth;\n    this.viewBoxHeight = viewBoxHeight;\n  }\n\n  InlineSvg.prototype.render = function () {\n    // tslint:disable-next-line:max-line-length\n    return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 \" + this.viewBoxWidth + \" \" + this.viewBoxHeight + \"\\\">\" + this.inlineSvg + \"</svg>\";\n  };\n\n  return InlineSvg;\n}();\n\nexports.InlineSvg = InlineSvg;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar CharacterAutoConvert =\n/** @class */\nfunction () {\n  function CharacterAutoConvert() {} // Forced encoding can be useful when converting an entire string\n  // or simply dealing with binary which has no leading zeros\n\n\n  CharacterAutoConvert.convertCharacter = function (input, forcedCharacterEncoding) {\n    var encoding = null;\n\n    if (!forcedCharacterEncoding) {\n      encoding = this.determineCharacterEncoding(input);\n    } else {\n      encoding = forcedCharacterEncoding;\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.None) {\n      return '';\n    } // Assume that Latin characters should remain\n\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Latin) {\n      return input;\n    }\n\n    var baseTen = Number.parseInt(input, 10);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ascii) {\n      return CharacterAutoConvert.asciiPrintable(baseTen);\n    }\n\n    var asciiOffset = 64;\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ordinal) {\n      return CharacterAutoConvert.asciiPrintable(baseTen + asciiOffset);\n    }\n\n    var binary = Number.parseInt(input, 2);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.FiveBitBinary && this.appearsBinary(input)) {\n      return CharacterAutoConvert.asciiPrintable(binary + asciiOffset);\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.EightBitBinary && this.appearsBinary(input)) {\n      return CharacterAutoConvert.asciiPrintable(binary);\n    }\n\n    return '';\n  };\n\n  CharacterAutoConvert.asciiPrintable = function (index) {\n    if (index < 32 || index > 126) {\n      return '';\n    }\n\n    return String.fromCharCode(index);\n  };\n\n  CharacterAutoConvert.determineCharacterEncoding = function (input) {\n    if (input.match(/[a-z]/i)) {\n      return CharacterEncoding_1.CharacterEncoding.Latin;\n    }\n\n    var numeric = Number.parseInt(input, 10);\n\n    if (this.appearsBinary(input)) {\n      if (input.length === 5) {\n        return CharacterEncoding_1.CharacterEncoding.FiveBitBinary;\n      } else if (input.length === 8 || input.length === 7) {\n        return CharacterEncoding_1.CharacterEncoding.EightBitBinary;\n      }\n    }\n\n    if (input.length < 3 && numeric > 0 && numeric < 27) {\n      return CharacterEncoding_1.CharacterEncoding.Ordinal;\n    }\n\n    if (numeric > 64 && numeric < 91) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    if (numeric > 97 && numeric < 123) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    return CharacterEncoding_1.CharacterEncoding.None;\n  };\n\n  CharacterAutoConvert.appearsBinary = function (character) {\n    for (var _i = 0, character_1 = character; _i < character_1.length; _i++) {\n      var letter = character_1[_i];\n\n      if (letter !== '0' && letter !== '1') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return CharacterAutoConvert;\n}();\n\nexports.CharacterAutoConvert = CharacterAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar Helpers_1 = require(\"../Common/Helpers\");\n\nvar MorseData_1 = require(\"./MorseData\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MORSE_BITMASK = MorseEncoding_1.MorseEncoding.Dot | MorseEncoding_1.MorseEncoding.Dash;\n\nvar MorseCharacter =\n/** @class */\nfunction (_super) {\n  __extends(MorseCharacter, _super);\n\n  function MorseCharacter(str, category) {\n    if (str === void 0) {\n      str = '';\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, MorseData_1.MorseData.instance, category) || this;\n\n    _this._morse = str;\n    return _this;\n  }\n\n  MorseCharacter.toMorseString = function (encoding) {\n    var morseChars = '';\n\n    while (encoding !== MorseEncoding_1.MorseEncoding.None) {\n      if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dot) {\n        morseChars += MorseCharacter.DOT;\n      } else if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dash) {\n        morseChars += MorseCharacter.DASH;\n      } else {\n        throw new Error('Invalid morse bits');\n      }\n\n      encoding >>>= 2;\n    }\n\n    return morseChars;\n  };\n\n  MorseCharacter.parseMorseString = function (morse) {\n    var bits = MorseEncoding_1.MorseEncoding.None;\n\n    for (var i = morse.length - 1; i >= 0; i--) {\n      var ch = morse[i];\n\n      if (ch === MorseCharacter.DOT) {\n        bits |= MorseEncoding_1.MorseEncoding.Dot;\n      } else if (ch === MorseCharacter.DASH) {\n        bits |= MorseEncoding_1.MorseEncoding.Dash;\n      } else {\n        throw new Error('Invalid morse character');\n      }\n\n      bits <<= 2;\n    }\n\n    bits >>>= 2;\n    return bits;\n  };\n\n  Object.defineProperty(MorseCharacter.prototype, \"morseString\", {\n    get: function get() {\n      return this._morse;\n    },\n    set: function set(value) {\n      this._morse = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MorseCharacter.prototype.backspace = function () {\n    if (this._morse.length > 0) {\n      this._morse = this._morse.substring(0, this._morse.length - 1);\n      this.invalidateLookup();\n    }\n  };\n\n  MorseCharacter.prototype.dot = function () {\n    this._morse += MorseCharacter.DOT;\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.dash = function () {\n    this._morse += MorseCharacter.DASH;\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.invertDotsAndDashes = function () {\n    // Replace dots with a placeholder, dashes with dots, then placeholders with dashes\n    Helpers_1.Helpers.assert(this._morse.indexOf(MorseCharacter.RESERVED_DIVIDER) < 0);\n    this._morse = this._morse.replace(/\\./g, 'A').replace(/-/g, MorseCharacter.DOT).replace(/A/g, MorseCharacter.DASH);\n  };\n\n  MorseCharacter.prototype.reverse = function () {\n    this._morse = this._morse.split('').reverse().join('');\n  };\n\n  MorseCharacter.prototype.onClear = function () {\n    this._morse = '';\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.onEmpty = function () {\n    return this._morse.length === 0;\n  };\n\n  MorseCharacter.prototype.getEncoding = function () {\n    return MorseCharacter.parseMorseString(this._morse);\n  };\n\n  MorseCharacter.DOT = '.';\n  MorseCharacter.DASH = '-'; // Character which may not appear in morse and is reserved for use by this class\n\n  MorseCharacter.RESERVED_DIVIDER = 'A';\n  return MorseCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.MorseCharacter = MorseCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Helpers =\n/** @class */\nfunction () {\n  function Helpers() {}\n\n  Helpers.assert = function (condition) {\n    if (!condition) {\n      throw new Error();\n    }\n  };\n\n  Helpers.assertMsg = function (condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  };\n\n  return Helpers;\n}();\n\nexports.Helpers = Helpers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter =\n/** @class */\nfunction () {\n  function NatoCharacter(character, word) {\n    this.character = character;\n    this.word = word;\n  }\n\n  return NatoCharacter;\n}();\n\nexports.NatoCharacter = NatoCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry =\n/** @class */\nfunction () {\n  function ResistorColorEntry(name, colorCode, multiplier, value, toleranceInPercent) {\n    this.name = name;\n    this.value = value;\n    this.colorCode = colorCode;\n    this.multiplier = multiplier;\n    this.toleranceInPercent = toleranceInPercent;\n  }\n\n  ResistorColorEntry.prototype.hasValue = function () {\n    return this.value !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayValue = function () {\n    if (this.value === undefined) {\n      return '';\n    }\n\n    return this.value.toString();\n  };\n\n  ResistorColorEntry.prototype.hasTolerance = function () {\n    return this.toleranceInPercent !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayTolerance = function () {\n    if (this.toleranceInPercent === undefined) {\n      return '';\n    }\n\n    return this.toleranceInPercent + \"%\";\n  };\n\n  return ResistorColorEntry;\n}();\n\nexports.ResistorColorEntry = ResistorColorEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreEncoding;\n\n(function (SemaphoreEncoding) {\n  SemaphoreEncoding[SemaphoreEncoding[\"None\"] = 0] = \"None\"; // Letters\n\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterA\"] = 96] = \"LetterA\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterB\"] = 160] = \"LetterB\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterC\"] = 288] = \"LetterC\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterD\"] = 34] = \"LetterD\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterE\"] = 36] = \"LetterE\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterF\"] = 40] = \"LetterF\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterG\"] = 48] = \"LetterG\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterH\"] = 192] = \"LetterH\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterI\"] = 320] = \"LetterI\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterJ\"] = 10] = \"LetterJ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterK\"] = 66] = \"LetterK\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterL\"] = 68] = \"LetterL\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterM\"] = 72] = \"LetterM\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterN\"] = 80] = \"LetterN\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterO\"] = 384] = \"LetterO\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterP\"] = 130] = \"LetterP\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterQ\"] = 132] = \"LetterQ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterR\"] = 136] = \"LetterR\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterS\"] = 144] = \"LetterS\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterT\"] = 258] = \"LetterT\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterU\"] = 260] = \"LetterU\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterV\"] = 18] = \"LetterV\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterW\"] = 12] = \"LetterW\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterX\"] = 20] = \"LetterX\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterY\"] = 264] = \"LetterY\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterZ\"] = 24] = \"LetterZ\"; // Numbers\n\n  SemaphoreEncoding[SemaphoreEncoding[\"Number1\"] = 96] = \"Number1\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number2\"] = 160] = \"Number2\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number3\"] = 288] = \"Number3\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number4\"] = 34] = \"Number4\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number5\"] = 36] = \"Number5\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number6\"] = 40] = \"Number6\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number7\"] = 48] = \"Number7\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number8\"] = 192] = \"Number8\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number9\"] = 320] = \"Number9\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number0\"] = 66] = \"Number0\"; // Formatting\n\n  SemaphoreEncoding[SemaphoreEncoding[\"FormattingNumber\"] = 6] = \"FormattingNumber\";\n})(SemaphoreEncoding = exports.SemaphoreEncoding || (exports.SemaphoreEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SemaphoreDirection_1 = require(\"./SemaphoreDirection\");\n\nvar SemaphoreDegrees =\n/** @class */\nfunction () {\n  function SemaphoreDegrees() {}\n\n  SemaphoreDegrees.FromDegrees = function (degrees) {\n    if (degrees >= 360) {\n      degrees = degrees % 360;\n    }\n\n    if (degrees % 45 !== 0 || degrees < 0) {\n      throw new Error('Invalid degrees');\n    }\n\n    var position = degrees / 45;\n    return SemaphoreDirection_1.SemaphoreDirection.North << position;\n  };\n\n  SemaphoreDegrees.ToDegrees = function (direction) {\n    var position = SemaphoreDirection_1.SemaphoreDirection.North;\n    var counter = 0;\n\n    while (counter < 9 && position !== direction) {\n      position = position << 1;\n      counter++;\n    }\n\n    return counter * 45;\n  };\n\n  return SemaphoreDegrees;\n}();\n\nexports.SemaphoreDegrees = SemaphoreDegrees;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreDirection;\n\n(function (SemaphoreDirection) {\n  SemaphoreDirection[SemaphoreDirection[\"None\"] = 0] = \"None\";\n  SemaphoreDirection[SemaphoreDirection[\"North\"] = 2] = \"North\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthEast\"] = 4] = \"NorthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"East\"] = 8] = \"East\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthEast\"] = 16] = \"SouthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"South\"] = 32] = \"South\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthWest\"] = 64] = \"SouthWest\";\n  SemaphoreDirection[SemaphoreDirection[\"West\"] = 128] = \"West\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthWest\"] = 256] = \"NorthWest\";\n})(SemaphoreDirection = exports.SemaphoreDirection || (exports.SemaphoreDirection = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Result =\n/** @class */\nfunction () {\n  function Result(word, wordPoints) {\n    this.word = word;\n    this.points = Array.from(wordPoints);\n  }\n\n  return Result;\n}();\n\nexports.Result = Result;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar WordSearchDirection;\n\n(function (WordSearchDirection) {\n  WordSearchDirection[WordSearchDirection[\"None\"] = 0] = \"None\";\n  WordSearchDirection[WordSearchDirection[\"Cardinal\"] = 1] = \"Cardinal\";\n  WordSearchDirection[WordSearchDirection[\"Diagonal\"] = 2] = \"Diagonal\";\n  WordSearchDirection[WordSearchDirection[\"CardinalAndDiagonal\"] = 3] = \"CardinalAndDiagonal\";\n})(WordSearchDirection = exports.WordSearchDirection || (exports.WordSearchDirection = {}));","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = append;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction append(trie, letter, index, array) {\n  var isEndWordLetter = letter === _config2.default.END_WORD;\n  var isLastLetter = index === array.length - 1;\n\n  if (isEndWordLetter && !isLastLetter) {\n    trie[_config2.default.END_WORD] = 1;\n    trie[_config2.default.END_WORD_REPLACER] = {};\n    trie = trie[_config2.default.END_WORD_REPLACER];\n  } else {\n    trie[letter] = trie[letter] || {};\n    trie = trie[letter];\n  }\n\n  if (isLastLetter) {\n    trie[_config2.default.END_WORD] = 1;\n  }\n\n  return trie;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  objectCopy: function objectCopy(obj) {\n    if (typeof obj === 'undefined') {\n      return {};\n    }\n\n    return JSON.parse(JSON.stringify(obj));\n  },\n  stringify: function stringify(obj) {\n    var spacer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    if (typeof obj === 'undefined') {\n      return '';\n    }\n\n    return JSON.stringify(obj, null, spacer);\n  }\n};\nmodule.exports = exports['default'];","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleCharacter =\n/** @class */\nfunction (_super) {\n  __extends(BrailleCharacter, _super);\n\n  function BrailleCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = BrailleEncoding_1.BrailleEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, BrailleData_1.BrailleData.instance, category) || this;\n\n    _this._encoding = encoding;\n    return _this;\n  }\n\n  Object.defineProperty(BrailleCharacter.prototype, \"encoding\", {\n    get: function get() {\n      return this._encoding;\n    },\n    set: function set(value) {\n      this._encoding = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleCharacter.prototype.get = function (mask) {\n    return (this._encoding & mask) === mask;\n  };\n\n  BrailleCharacter.prototype.toggle = function (mask) {\n    this._encoding ^= mask;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onClear = function () {\n    this._encoding = BrailleEncoding_1.BrailleEncoding.None;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onEmpty = function () {\n    return this._encoding === BrailleEncoding_1.BrailleEncoding.None;\n  };\n\n  BrailleCharacter.prototype.getEncoding = function () {\n    return this._encoding;\n  };\n\n  return BrailleCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.BrailleCharacter = BrailleCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingLookupResult =\n/** @class */\nfunction () {\n  function EncodingLookupResult() {\n    this.exact = [];\n    this.partial = [];\n  }\n\n  Object.defineProperty(EncodingLookupResult.prototype, \"exactString\", {\n    get: function get() {\n      return this.exact.map(function (value) {\n        return value.toString();\n      }).join('/');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return EncodingLookupResult;\n}();\n\nexports.EncodingLookupResult = EncodingLookupResult;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleDot;\n\n(function (BrailleDot) {\n  BrailleDot[BrailleDot[\"None\"] = 0] = \"None\";\n  BrailleDot[BrailleDot[\"UpperLeft\"] = 1] = \"UpperLeft\";\n  BrailleDot[BrailleDot[\"MiddleLeft\"] = 2] = \"MiddleLeft\";\n  BrailleDot[BrailleDot[\"LowerLeft\"] = 4] = \"LowerLeft\";\n  BrailleDot[BrailleDot[\"UpperRight\"] = 8] = \"UpperRight\";\n  BrailleDot[BrailleDot[\"MiddleRight\"] = 16] = \"MiddleRight\";\n  BrailleDot[BrailleDot[\"LowerRight\"] = 32] = \"LowerRight\";\n})(BrailleDot = exports.BrailleDot || (exports.BrailleDot = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleStream =\n/** @class */\nfunction () {\n  function BrailleStream() {\n    this._chars = [];\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n    this.invalidate();\n  }\n\n  Object.defineProperty(BrailleStream.prototype, \"chars\", {\n    get: function get() {\n      return this._chars;\n    },\n    set: function set(value) {\n      this.clear();\n\n      for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n        var ch = value_1[_i];\n\n        this._chars.push(ch);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleStream.prototype.append = function (ch) {\n    this._chars.push(ch.valueOf());\n  };\n\n  BrailleStream.prototype.clear = function () {\n    this._chars.length = 0;\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.backspace = function () {\n    this._chars.pop();\n\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.space = function () {\n    this._chars.push(BrailleEncoding_1.BrailleEncoding.None);\n  };\n\n  BrailleStream.prototype.toString = function () {\n    this.update();\n    return this._currentStr;\n  };\n\n  BrailleStream.prototype.invalidate = function () {\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n  };\n\n  BrailleStream.prototype.update = function () {\n    while (this._processPosition < this._chars.length) {\n      var ch = this._chars[this._processPosition];\n\n      switch (ch) {\n        case BrailleEncoding_1.BrailleEncoding.None:\n          this._numberMode = false;\n          this._currentStr += ' ';\n          break;\n\n        case BrailleEncoding_1.BrailleEncoding.FormattingNumber:\n          this._numberMode = true;\n          this._currentStr += '#';\n          break;\n\n        default:\n          var category = EncodingCategory_1.EncodingCategory.Punctuation | (this._numberMode ? EncodingCategory_1.EncodingCategory.Number : EncodingCategory_1.EncodingCategory.Letter);\n          var exact = BrailleData_1.BrailleData.instance.lookup(ch, category).exact;\n\n          if (exact.length > 0) {\n            this._currentStr += exact[0].toString();\n          }\n\n      }\n\n      this._processPosition++;\n    }\n  };\n\n  return BrailleStream;\n}();\n\nexports.BrailleStream = BrailleStream;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar AutoKeyString =\n/** @class */\nfunction (_super) {\n  __extends(AutoKeyString, _super);\n\n  function AutoKeyString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AutoKeyString.prototype.convert = function (decrypt) {\n    if (this._key.length < 1) {\n      return this._text;\n    } else {\n      var rotStr = [];\n      var keyIndex = 0;\n      var fullKey = this._key;\n\n      for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n        var ch = _a[_i];\n\n        if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n          var currentLetter = CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, fullKey, keyIndex++, decrypt);\n          rotStr.push(currentLetter);\n\n          if (decrypt) {\n            fullKey += currentLetter;\n          } else {\n            fullKey += ch;\n          }\n        } else {\n          rotStr.push(ch);\n        }\n      }\n\n      return rotStr.join('');\n    }\n  };\n\n  return AutoKeyString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.AutoKeyString = AutoKeyString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar CaesarString =\n/** @class */\nfunction () {\n  function CaesarString(text) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    this._text = text;\n  }\n\n  Object.defineProperty(CaesarString.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CaesarString.prototype.getRotation = function (rot) {\n    var rotStr = [];\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n      rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetter(ch, rot));\n    }\n\n    return rotStr.join('');\n  };\n\n  CaesarString.prototype.getRotations = function () {\n    var rotations = [];\n    rotations.push(this._text);\n\n    for (var i = 1; i < 26; i++) {\n      rotations.push(this.getRotation(i));\n    }\n\n    return rotations;\n  };\n\n  return CaesarString;\n}();\n\nexports.CaesarString = CaesarString;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar VigenereString =\n/** @class */\nfunction (_super) {\n  __extends(VigenereString, _super);\n\n  function VigenereString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  VigenereString.prototype.convert = function (decrypt) {\n    var rotStr = [];\n    var keyIndex = 0;\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n        rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, this._key, keyIndex++, decrypt));\n      } else {\n        rotStr.push(ch);\n      }\n    }\n\n    return rotStr.join('');\n  };\n\n  return VigenereString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.VigenereString = VigenereString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SignificantFigures =\n/** @class */\nfunction () {\n  function SignificantFigures() {}\n\n  SignificantFigures.ceil = function (num, sigFigs) {\n    return this.roundInternal(Math.ceil, num, sigFigs);\n  };\n\n  SignificantFigures.floor = function (num, sigFigs) {\n    return this.roundInternal(Math.floor, num, sigFigs);\n  };\n\n  SignificantFigures.round = function (num, sigFigs) {\n    return this.roundInternal(Math.round, num, sigFigs);\n  };\n\n  SignificantFigures.roundInternal = function (func, num, sigFigs) {\n    if (num === 0) {\n      return num;\n    }\n\n    if (sigFigs <= 0) {\n      throw new RangeError('sigFigs value must be positive');\n    }\n\n    var factor = this.getFactor(num, sigFigs);\n\n    if (factor > 0) {\n      return func(num / factor) * factor;\n    } else if (factor < 0) {\n      var absFactor = Math.abs(factor);\n      return func(num * absFactor) / absFactor;\n    } else {\n      return num;\n    }\n  };\n\n  SignificantFigures.getFactor = function (num, sigFigs) {\n    var absNum = Math.abs(num);\n    var digits = 0;\n\n    if (absNum < 1) {\n      digits = -sigFigs;\n    } else {\n      digits = Math.ceil(Math.log(absNum) / Math.log(10)) - sigFigs;\n    }\n\n    if (digits < 0) {\n      return -Math.pow(10, Math.abs(digits));\n    } else {\n      return Math.pow(10, digits);\n    }\n  };\n\n  return SignificantFigures;\n}();\n\nexports.SignificantFigures = SignificantFigures;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterAutoConvert_1 = require(\"./CharacterAutoConvert\");\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar StringAutoConvert =\n/** @class */\nfunction () {\n  function StringAutoConvert() {}\n\n  StringAutoConvert.convertString = function (input, homogeneous) {\n    var split = this.splitString(input);\n\n    if (homogeneous) {\n      var encoding_1 = this.determineStringEncoding(input);\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter, encoding_1);\n      }, '');\n    } else {\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter);\n      }, '');\n    }\n  };\n\n  StringAutoConvert.determineStringEncoding = function (input) {\n    var encodingCount = {};\n    var parsed = this.splitString(input);\n    var encodingKeys = [];\n\n    for (var _i = 0, parsed_1 = parsed; _i < parsed_1.length; _i++) {\n      var letter = parsed_1[_i];\n      var charEncoding = CharacterAutoConvert_1.CharacterAutoConvert.determineCharacterEncoding(letter);\n\n      if (!encodingCount[charEncoding]) {\n        encodingCount[charEncoding] = 1;\n        encodingKeys.push(charEncoding);\n      } else {\n        encodingCount[charEncoding] = encodingCount[charEncoding] + 1;\n      }\n    }\n\n    var maxCount = 0;\n    var maxEncoding;\n    maxEncoding = CharacterEncoding_1.CharacterEncoding.None;\n\n    for (var _a = 0, encodingKeys_1 = encodingKeys; _a < encodingKeys_1.length; _a++) {\n      var encoding = encodingKeys_1[_a];\n\n      if (encodingCount[encoding] > maxCount) {\n        maxCount = encodingCount[encoding];\n        maxEncoding = encoding;\n      }\n    }\n\n    return maxEncoding;\n  };\n\n  StringAutoConvert.splitString = function (input) {\n    return input.split(' ').filter(function (item) {\n      return item !== '';\n    });\n  };\n\n  return StringAutoConvert;\n}();\n\nexports.StringAutoConvert = StringAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MorseData =\n/** @class */\nfunction (_super) {\n  __extends(MorseData, _super);\n\n  function MorseData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9'); // Punctuation\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPeriod, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, \"'\");\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationForwardSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationOpenParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationCloseParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAmpersand, EncodingCategory_1.EncodingCategory.Punctuation, '&');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDoubleDash, EncodingCategory_1.EncodingCategory.Punctuation, '=');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPlusSign, EncodingCategory_1.EncodingCategory.Punctuation, '+');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationUnderscore, EncodingCategory_1.EncodingCategory.Punctuation, '_');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuotationMark, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDollarSign, EncodingCategory_1.EncodingCategory.Punctuation, '$');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAtSign, EncodingCategory_1.EncodingCategory.Punctuation, '@');\n\n    return _this;\n  }\n\n  MorseData.instance = new MorseData();\n  return MorseData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.MorseData = MorseData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Helpers_1 = require(\"../Common/Helpers\");\n\nvar MorseCharacter_1 = require(\"./MorseCharacter\"); // MorseString represents a string of multiple morse characters.  It allows for a longer representation\n// to be converted to a single string and allows for sentence-level transforms such as reversing\n// the order of tokens.\n\n\nvar MorseString =\n/** @class */\nfunction () {\n  function MorseString(morse, characterDivider, wordDivider) {\n    if (morse === void 0) {\n      morse = '';\n    }\n\n    if (characterDivider === void 0) {\n      characterDivider = MorseString.CHARACTER_DIVIDER;\n    }\n\n    if (wordDivider === void 0) {\n      wordDivider = MorseString.WORD_DIVIDER;\n    } // The dividers should be single characters which don't clash with the other string content\n\n\n    Helpers_1.Helpers.assertMsg(characterDivider.length === 1, 'Divider must be a single character');\n    Helpers_1.Helpers.assertMsg(wordDivider.length === 1, 'Divider must be a single character');\n    Helpers_1.Helpers.assertMsg(characterDivider !== wordDivider, 'Dividers must be different from each other');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Word divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Word divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Word divider must not be a reserved value');\n    var words = morse.split(wordDivider).filter(function (w) {\n      return w.length > 0;\n    }); // Discard any empty characters (caused by trailing separator)\n\n    var wordCharacters = words.map(function (w) {\n      return w.split(characterDivider).filter(function (wc) {\n        return wc.length > 0;\n      });\n    });\n    this._words = wordCharacters.map(function (subarray) {\n      return subarray.map(function (wc) {\n        return new MorseCharacter_1.MorseCharacter(wc);\n      });\n    });\n  } // reverse reverses the order of all tokens in the string (including separators), such as would be\n  // the case if you were reading the data for a puzzle backwards.\n\n\n  MorseString.prototype.reverse = function () {\n    for (var i = 0; i < this._words.length; i++) {\n      for (var _i = 0, _a = this._words[i]; _i < _a.length; _i++) {\n        var c = _a[_i]; // Reverse the dots/dashes in each letter\n\n        c.reverse();\n      } // Reverse the letters in each word\n\n\n      this._words[i] = this._words[i].reverse();\n    } // Reverse the order of the words\n\n\n    this._words = this._words.reverse();\n    return this;\n  }; // invertDotsAndDashes switches all dots and dashes in the input, such as would be the case if\n  // you had two ambiguous symbols for dot/dash and selected the wrong mapping.\n\n\n  MorseString.prototype.invertDotsAndDashes = function () {\n    for (var _i = 0, _a = this._words; _i < _a.length; _i++) {\n      var word = _a[_i];\n\n      for (var _b = 0, word_1 = word; _b < word_1.length; _b++) {\n        var c = word_1[_b];\n        c.invertDotsAndDashes();\n      }\n    }\n\n    return this;\n  };\n\n  MorseString.prototype.toString = function () {\n    var s = '';\n\n    for (var i = 0; i < this._words.length; i++) {\n      if (i > 0) {\n        s += ' '; // This is a new word\n      }\n\n      for (var _i = 0, _a = this._words[i]; _i < _a.length; _i++) {\n        var c = _a[_i];\n        s += c.toString() || '?';\n      }\n    }\n\n    return s;\n  };\n\n  MorseString.CHARACTER_DIVIDER = '/';\n  MorseString.WORD_DIVIDER = ' ';\n  return MorseString;\n}();\n\nexports.MorseString = MorseString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter_1 = require(\"./NatoCharacter\"); // There's no concept of a 'partial match' for a NATO letter, so there's no\n// reason to derive from EncodingDataBase.\n\n\nvar NatoData =\n/** @class */\nfunction () {\n  function NatoData() {\n    this._entries = [new NatoCharacter_1.NatoCharacter('A', 'Alfa'), new NatoCharacter_1.NatoCharacter('B', 'Bravo'), new NatoCharacter_1.NatoCharacter('C', 'Charlie'), new NatoCharacter_1.NatoCharacter('D', 'Delta'), new NatoCharacter_1.NatoCharacter('E', 'Echo'), new NatoCharacter_1.NatoCharacter('F', 'Foxtrot'), new NatoCharacter_1.NatoCharacter('G', 'Golf'), new NatoCharacter_1.NatoCharacter('H', 'Hotel'), new NatoCharacter_1.NatoCharacter('I', 'India'), new NatoCharacter_1.NatoCharacter('J', 'Juliet'), new NatoCharacter_1.NatoCharacter('K', 'Kilo'), new NatoCharacter_1.NatoCharacter('L', 'Lima'), new NatoCharacter_1.NatoCharacter('M', 'Mike'), new NatoCharacter_1.NatoCharacter('N', 'November'), new NatoCharacter_1.NatoCharacter('O', 'Oscar'), new NatoCharacter_1.NatoCharacter('P', 'Papa'), new NatoCharacter_1.NatoCharacter('Q', 'Quebec'), new NatoCharacter_1.NatoCharacter('R', 'Romeo'), new NatoCharacter_1.NatoCharacter('S', 'Sierra'), new NatoCharacter_1.NatoCharacter('T', 'Tango'), new NatoCharacter_1.NatoCharacter('U', 'Uniform'), new NatoCharacter_1.NatoCharacter('V', 'Victor'), new NatoCharacter_1.NatoCharacter('W', 'Whiskey'), new NatoCharacter_1.NatoCharacter('X', 'X-ray'), new NatoCharacter_1.NatoCharacter('Y', 'Yankee'), new NatoCharacter_1.NatoCharacter('Z', 'Zulu')];\n  }\n\n  Object.defineProperty(NatoData.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NatoData.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NatoData.instance = new NatoData();\n  return NatoData;\n}();\n\nexports.NatoData = NatoData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage_1 = require(\"../Common/CharacterImage\");\n\nvar InlineSvg_1 = require(\"../Common/InlineSvg\");\n\nvar NavalFlags =\n/** @class */\nfunction () {\n  function NavalFlags() {\n    this._entries = [// tslint:disable:max-line-length (SVG images are messy)\n    new CharacterImage_1.CharacterImage('A', new InlineSvg_1.InlineSvg(\"<path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('B', new InlineSvg_1.InlineSvg('<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#f00\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>', 180, 180)), new CharacterImage_1.CharacterImage('C', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"46.8\\\" width=\\\"144\\\" height=\\\"86.4\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"75.6\\\" width=\\\"144\\\" height=\\\"28.8\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('D', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"54\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('E', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"90\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('F', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 l 72,72 l -72,72 l -72,-72 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('G', new InlineSvg_1.InlineSvg(\"<path fill=\\\"#000094\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#FC0\\\" stroke-width=\\\"24\\\" d=\\\"m30,18v144m48,0V18m48,0v144\\\"/>\\n      <path d=\\\"M18,18H162V162H18z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('H', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('I', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <circle cx=\\\"90\\\" cy=\\\"90\\\" r=\\\"36\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('J', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"66\\\" width=\\\"144\\\" height=\\\"48\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('K', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('L', new InlineSvg_1.InlineSvg(\"<rect x=\\\"16\\\" y=\\\"16\\\" width=\\\"148\\\" height=\\\"148\\\" rx=\\\"2\\\"/>\\n      <path fill=\\\"#FC0\\\" d=\\\"m20,20h70v140h70V90H20\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('M', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#fff\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('N', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 54 V 162 H 90 V 18 H 126 V 162 H 162 V 126 H 18 V 90 H 162 V 54 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('O', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('P', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Q', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('R', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#fc0\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('S', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('T', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"96\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"48\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('U', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#ffffff\\\"/>\\n      <path d=\\\"M 18,18 H 90 V 90 H 18 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 162,91 H 91 V 162 H 162 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('V', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#f00\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('W', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"42\\\" y=\\\"42\\\" width=\\\"96\\\" height=\\\"96\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"66\\\" y=\\\"66\\\" width=\\\"48\\\" height=\\\"48\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('X', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#000094\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Y', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\"><path d=\\\"m18,18h144v144H18\\\"/></clipPath>\\n      <path fill=\\\"#FC0\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#F00\\\" stroke-dasharray=\\\"18.8\\\" stroke-width=\\\"250\\\" clip-path=\\\"url(#c)\\\" d=\\\"m4,4 160,160\\\"/>\\n      <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\" d=\\\"M18,18H162V162H18z\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Z', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 V 162 H 162 z\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 162,18 V 162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 90,90 L 162,162 H 18 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180))];\n  }\n\n  Object.defineProperty(NavalFlags.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NavalFlags.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NavalFlags.instance = new NavalFlags();\n  return NavalFlags;\n}();\n\nexports.NavalFlags = NavalFlags;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry_1 = require(\"./ResistorColorEntry\");\n\nvar Resistor =\n/** @class */\nfunction () {\n  function Resistor() {}\n  /**\n   * getValue assumes there is no tolerance band, as tolerance is not part of\n   * the value calculation\n   */\n\n\n  Resistor.getValue = function (colors) {\n    if (colors.length < 3 || colors.length > 4) {\n      throw new RangeError('Invalid resistor size');\n    } // Should we throw an error if the first color is black?  In resistors, it's\n    // technically not allowed, but in puzzle events who knows what they'll do.\n    // The math works out fine (it's just a leading zero), so for now it's\n    // allowed.\n    // Iterate through all but the final band (the multipler) and extract the\n    // values\n\n\n    var value = 0;\n\n    for (var i = 0; i < colors.length - 1; ++i) {\n      var currentColor = colors[i];\n\n      if (currentColor.value === undefined) {\n        return Resistor.INVALID_RESISTOR;\n      }\n\n      value *= 10;\n      value += currentColor.value;\n    }\n\n    return Resistor.applyMultiplier(value, colors[colors.length - 1].multiplier);\n  };\n\n  Resistor.getDisplayValue = function (value) {\n    if (value >= 1000000000) {\n      return value / 1000000000 + \"G\";\n    } else if (value >= 1000000) {\n      return value / 1000000 + \"M\";\n    } else if (value >= 1000) {\n      return value / 1000 + \"k\";\n    } else {\n      return value.toString();\n    }\n  };\n\n  Resistor.applyMultiplier = function (value, multipler) {\n    if (multipler >= 1) {\n      return value * multipler;\n    } else if (multipler > 0) {\n      // Avoid floating point multiplication issues\n      return value / (1 / multipler);\n    } else {\n      throw new RangeError('Invalid multiplier');\n    }\n  }; // Name, Color, Multiplier, Value, Tolerance\n\n\n  Resistor.BLACK = new ResistorColorEntry_1.ResistorColorEntry('Black', '#000000', 1, 0);\n  Resistor.BROWN = new ResistorColorEntry_1.ResistorColorEntry('Brown', '#8B4513', 10, 1, 1);\n  Resistor.RED = new ResistorColorEntry_1.ResistorColorEntry('Red', '#FF0000', 100, 2, 2);\n  Resistor.ORANGE = new ResistorColorEntry_1.ResistorColorEntry('Orange', '#EE7420', 1000, 3);\n  Resistor.YELLOW = new ResistorColorEntry_1.ResistorColorEntry('Yellow', '#FFFF00', 10000, 4);\n  Resistor.GREEN = new ResistorColorEntry_1.ResistorColorEntry('Green', '#008000', 100000, 5, 0.5);\n  Resistor.BLUE = new ResistorColorEntry_1.ResistorColorEntry('Blue', '#0000FF', 1000000, 6, 0.25);\n  Resistor.VIOLET = new ResistorColorEntry_1.ResistorColorEntry('Violet', '#800080', 10000000, 7, 0.1);\n  Resistor.GREY = new ResistorColorEntry_1.ResistorColorEntry('Grey', '#808080', 100000000, 8);\n  Resistor.WHITE = new ResistorColorEntry_1.ResistorColorEntry('White', '#FFFFFF', 1000000000, 9);\n  Resistor.GOLD = new ResistorColorEntry_1.ResistorColorEntry('Gold', '#AB8D3F', 0.1, undefined, 5);\n  Resistor.SILVER = new ResistorColorEntry_1.ResistorColorEntry('Silver', '#C0C0C0', 0.01, undefined, 10);\n  Resistor.colorTable = [Resistor.BLACK, Resistor.BROWN, Resistor.RED, Resistor.ORANGE, Resistor.YELLOW, Resistor.GREEN, Resistor.BLUE, Resistor.VIOLET, Resistor.GREY, Resistor.WHITE, Resistor.GOLD, Resistor.SILVER];\n  Resistor.INVALID_RESISTOR = -1;\n  return Resistor;\n}();\n\nexports.Resistor = Resistor;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar SemaphoreData_1 = require(\"./SemaphoreData\");\n\nvar SemaphoreDegrees_1 = require(\"./SemaphoreDegrees\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreCharacter =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreCharacter, _super);\n\n  function SemaphoreCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = SemaphoreEncoding_1.SemaphoreEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, SemaphoreData_1.SemaphoreData.instance, category) || this;\n\n    _this._directions = [];\n\n    _this.addDirection(encoding);\n\n    return _this;\n  }\n\n  SemaphoreCharacter.parseEncoding = function (encoding) {\n    var directions = [];\n\n    for (var i = 1; i <= 8; i++) {\n      var direction = 1 << i;\n\n      if ((encoding & direction) === direction) {\n        directions.push(direction);\n      }\n    }\n\n    return directions;\n  };\n\n  Object.defineProperty(SemaphoreCharacter.prototype, \"directions\", {\n    get: function get() {\n      return this._directions;\n    },\n    set: function set(value) {\n      this._directions = value.slice(0, 2);\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SemaphoreCharacter.prototype.addDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      this._directions.push(dir);\n    }\n\n    if (this._directions.length > 2) {\n      this._directions.splice(0, this._directions.length - 2);\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.removeDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      var index = this._directions.indexOf(dir);\n\n      if (index >= 0) {\n        this._directions.splice(index, 1);\n      }\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.hasDirection = function (direction) {\n    return this._directions.indexOf(direction) >= 0;\n  };\n\n  SemaphoreCharacter.prototype.getDegrees = function () {\n    return this._directions.map(function (value) {\n      return SemaphoreDegrees_1.SemaphoreDegrees.ToDegrees(value);\n    }).sort(function (a, b) {\n      return a - b;\n    });\n  };\n\n  SemaphoreCharacter.prototype.getPotentialMatch = function (other) {\n    if (this.directions.length !== 1 || this.directions[0] === other) {\n      return null;\n    }\n\n    var potentialMatch = this.getPotentialMatches().filter(function (value) {\n      return (value.encoding & other) === other;\n    })[0];\n    return potentialMatch || null;\n  };\n\n  SemaphoreCharacter.prototype.onClear = function () {\n    this._directions.length = 0;\n  };\n\n  SemaphoreCharacter.prototype.onEmpty = function () {\n    return this._directions.length === 0;\n  };\n\n  SemaphoreCharacter.prototype.getEncoding = function () {\n    return this._directions.reduce(function (previousValue, currentValue) {\n      return previousValue |= currentValue;\n    }, SemaphoreEncoding_1.SemaphoreEncoding.None);\n  };\n\n  return SemaphoreCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.SemaphoreCharacter = SemaphoreCharacter;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreData =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreData, _super);\n\n  function SemaphoreData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0'); // Formatting\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    return _this;\n  }\n\n  SemaphoreData.instance = new SemaphoreData();\n  return SemaphoreData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.SemaphoreData = SemaphoreData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar trie = require(\"trie-prefix-tree\");\n\nvar Result_1 = require(\"./Result\");\n\nvar WordSearchDirection_1 = require(\"./WordSearchDirection\");\n\nvar WordSearchSolver =\n/** @class */\nfunction () {\n  function WordSearchSolver() {\n    // Use empty grid and list by default\n    this._matrix = [[]];\n    this._targets = trie([]); // Use both sets of directions by default\n\n    this._directions = [// Cardinal directions\n    [0, 1], [-1, 0], [1, 0], [0, -1], // Diagonal\n    [1, 1], [-1, -1], [1, -1], [-1, 1]];\n  }\n\n  WordSearchSolver.prototype.setWords = function (words) {\n    for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n      var full = words_1[_i];\n\n      if (full === null || typeof full === 'undefined') {\n        throw new Error('Invalid input in WordSearchSolver.findWords()');\n      }\n\n      var word = full.trim();\n\n      if (word !== '') {\n        this._targets.addWord(word);\n      } else {\n        throw new Error('Cannot find an empty string in the wordsearch');\n      }\n    }\n  };\n\n  WordSearchSolver.prototype.setGrid = function (matrix) {\n    this._matrix = matrix;\n  };\n\n  WordSearchSolver.prototype.setDirections = function (direction) {\n    this._directions = [];\n\n    if (direction === WordSearchDirection_1.WordSearchDirection.Cardinal || direction === WordSearchDirection_1.WordSearchDirection.CardinalAndDiagonal) {\n      this._directions = this._directions.concat([[0, 1], [-1, 0], [1, 0], [0, -1]]);\n    }\n\n    if (direction === WordSearchDirection_1.WordSearchDirection.Diagonal || direction === WordSearchDirection_1.WordSearchDirection.CardinalAndDiagonal) {\n      this._directions = this._directions.concat([[1, 1], [-1, -1], [1, -1], [-1, 1]]);\n    }\n  };\n\n  WordSearchSolver.prototype.findWords = function () {\n    var results = [];\n    var numRows = this._matrix.length;\n\n    for (var yIdx = 0; yIdx < numRows; yIdx++) {\n      var lineLength = this._matrix[yIdx].length;\n\n      for (var xIdx = 0; xIdx < lineLength; xIdx++) {\n        var p = {\n          x: xIdx,\n          y: yIdx\n        };\n        var pointResults = this.startSearch(p);\n        results.push.apply(results, pointResults);\n      }\n    }\n\n    return results;\n  };\n\n  WordSearchSolver.prototype.startSearch = function (start) {\n    var results = [];\n\n    for (var _i = 0, _a = this._directions; _i < _a.length; _i++) {\n      var translation = _a[_i];\n      var directionalResults = this.checkDirection(start, translation);\n      results.push.apply(results, directionalResults);\n    }\n\n    return results;\n  };\n\n  WordSearchSolver.prototype.checkDirection = function (start, direction) {\n    var results = []; // Working set\n\n    var currentPoint = start;\n    var currentString = '';\n    var pointHistory = [];\n\n    while (this.isInBounds(currentPoint)) {\n      currentString = currentString + this._matrix[currentPoint.y][currentPoint.x]; // Get the candidates with the current prefix string\n\n      var wordsWithPrefix = this._targets.getPrefix(currentString); // No point in going on, we've run out of possibilities\n\n\n      if (wordsWithPrefix.length === 0) {\n        break;\n      }\n\n      var p = {\n        x: currentPoint.x,\n        y: currentPoint.y\n      };\n      pointHistory.push(p); // Is a candidate an exact match for the current search string? Save it.\n\n      if (wordsWithPrefix.indexOf(currentString) !== -1) {\n        var foundWord = new Result_1.Result(currentString, pointHistory);\n        results.push(foundWord);\n      }\n\n      var next = {\n        x: currentPoint.x + direction[0],\n        y: currentPoint.y + direction[1]\n      };\n      currentPoint = next;\n    }\n\n    return results;\n  };\n\n  WordSearchSolver.prototype.isInBounds = function (point) {\n    if (point.y < 0 || point.y >= this._matrix.length) {\n      return false;\n    }\n\n    if (point.x < 0 || point.x >= this._matrix[point.y].length) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return WordSearchSolver;\n}();\n\nexports.WordSearchSolver = WordSearchSolver;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = function (input) {\n  if (!Array.isArray(input)) {\n    throw 'Expected parameter Array, received ' + (typeof input === 'undefined' ? 'undefined' : _typeof(input));\n  }\n\n  var trie = (0, _create2.default)([].concat(_toConsumableArray(input)));\n  return {\n    /**\n     * Get the generated raw trie object\n    */\n    tree: function tree() {\n      return trie;\n    },\n\n    /**\n     * Get a string representation of the trie\n    */\n    dump: function dump() {\n      var spacer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return _utils2.default.stringify(trie, spacer);\n    },\n\n    /**\n     * Add a new word to the trie\n     */\n    addWord: function addWord(word) {\n      if (typeof word !== 'string' || word === '') {\n        throw 'Expected parameter string, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var reducer = function reducer() {\n        return _append2.default.apply(undefined, arguments);\n      };\n\n      var input = word.toLowerCase().split('');\n      input.reduce(reducer, trie);\n      return this;\n    },\n\n    /**\n     * Remove an existing word from the trie\n     */\n    removeWord: function removeWord(word) {\n      if (typeof word !== 'string' || word === '') {\n        throw 'Expected parameter string, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var _checkPrefix = (0, _checkPrefix6.default)(trie, word),\n          prefixFound = _checkPrefix.prefixFound,\n          prefixNode = _checkPrefix.prefixNode;\n\n      if (prefixFound) {\n        delete prefixNode[_config2.default.END_WORD];\n      }\n\n      return this;\n    },\n\n    /**\n     * Check a prefix is valid\n     * @returns Boolean\n    */\n    isPrefix: function isPrefix(prefix) {\n      if (typeof prefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof prefix === 'undefined' ? 'undefined' : _typeof(prefix));\n      }\n\n      var _checkPrefix2 = (0, _checkPrefix6.default)(trie, prefix),\n          prefixFound = _checkPrefix2.prefixFound;\n\n      return prefixFound;\n    },\n\n    /**\n    * Get a list of all words in the trie with the given prefix\n    * @returns Array\n    */\n    getPrefix: function getPrefix(strPrefix) {\n      var sorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (typeof strPrefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof strPrefix === 'undefined' ? 'undefined' : _typeof(strPrefix));\n      }\n\n      if (typeof sorted !== 'boolean') {\n        throw 'Expected sort parameter as boolean, received ' + (typeof sorted === 'undefined' ? 'undefined' : _typeof(sorted));\n      }\n\n      if (!this.isPrefix(strPrefix)) {\n        return [];\n      }\n\n      var prefixNode = strPrefix.length ? (0, _checkPrefix6.default)(trie, strPrefix).prefixNode : trie;\n      return (0, _recursePrefix2.default)(prefixNode, strPrefix, sorted);\n    },\n\n    /**\n    * Get a random word in the trie with the given prefix\n    * @returns Array\n    */\n    getRandomWordWithPrefix: function getRandomWordWithPrefix(strPrefix) {\n      if (typeof strPrefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof strPrefix === 'undefined' ? 'undefined' : _typeof(strPrefix));\n      }\n\n      if (!this.isPrefix(strPrefix)) {\n        return '';\n      }\n\n      var _checkPrefix3 = (0, _checkPrefix6.default)(trie, strPrefix),\n          prefixNode = _checkPrefix3.prefixNode;\n\n      return (0, _recurseRandomWord2.default)(prefixNode, strPrefix);\n    },\n\n    /**\n    * Count the number of words with the given prefixSearch\n    * @returns Number\n    */\n    countPrefix: function countPrefix(strPrefix) {\n      var prefixes = this.getPrefix(strPrefix);\n      return prefixes.length;\n    },\n\n    /**\n    * Get all words in the trie\n    * @returns Array\n    */\n    getWords: function getWords() {\n      var sorted = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.getPrefix('', sorted);\n    },\n\n    /**\n    * Check the existence of a word in the trie\n    * @returns Boolean\n    */\n    hasWord: function hasWord(word) {\n      if (typeof word !== 'string') {\n        throw 'Expected string word, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var _checkPrefix4 = (0, _checkPrefix6.default)(trie, word),\n          prefixFound = _checkPrefix4.prefixFound,\n          prefixNode = _checkPrefix4.prefixNode;\n\n      if (prefixFound) {\n        return prefixNode[_config2.default.END_WORD] === 1;\n      }\n\n      return false;\n    },\n\n    /**\n    * Get a list of valid anagrams that can be made from the given letters\n    * @returns Array\n    */\n    getAnagrams: function getAnagrams(letters) {\n      if (typeof letters !== 'string') {\n        throw 'Anagrams expected string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n      }\n\n      if (letters.length < PERMS_MIN_LEN) {\n        throw 'getAnagrams expects at least ' + PERMS_MIN_LEN + ' letters';\n      }\n\n      return (0, _permutations2.default)(letters, trie, {\n        type: 'anagram'\n      });\n    },\n\n    /**\n    * Get a list of all sub-anagrams that can be made from the given letters\n    * @returns Array\n    */\n    getSubAnagrams: function getSubAnagrams(letters) {\n      if (typeof letters !== 'string') {\n        throw 'Expected string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n      }\n\n      if (letters.length < PERMS_MIN_LEN) {\n        throw 'getSubAnagrams expects at least ' + PERMS_MIN_LEN + ' letters';\n      }\n\n      return (0, _permutations2.default)(letters, trie, {\n        type: 'sub-anagram'\n      });\n    }\n  };\n};\n\nvar _create = require('./create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _append = require('./append');\n\nvar _append2 = _interopRequireDefault(_append);\n\nvar _checkPrefix5 = require('./checkPrefix');\n\nvar _checkPrefix6 = _interopRequireDefault(_checkPrefix5);\n\nvar _recursePrefix = require('./recursePrefix');\n\nvar _recursePrefix2 = _interopRequireDefault(_recursePrefix);\n\nvar _recurseRandomWord = require('./recurseRandomWord');\n\nvar _recurseRandomWord2 = _interopRequireDefault(_recurseRandomWord);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _permutations = require('./permutations');\n\nvar _permutations2 = _interopRequireDefault(_permutations);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar PERMS_MIN_LEN = _config2.default.PERMS_MIN_LEN;\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = create;\n\nvar _append = require('./append');\n\nvar _append2 = _interopRequireDefault(_append);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction create(input) {\n  if (!Array.isArray(input)) {\n    throw 'Expected parameter Array, received ' + (typeof input === 'undefined' ? 'undefined' : _typeof(input));\n  }\n\n  var trie = input.reduce(function (accumulator, item) {\n    item.toLowerCase().split('').reduce(_append2.default, accumulator);\n    return accumulator;\n  }, {});\n  return trie;\n}\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkPrefix;\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction checkPrefix(prefixNode, prefix) {\n  var input = prefix.toLowerCase().split('');\n  var prefixFound = input.every(function (letter, index) {\n    if (!prefixNode[letter]) {\n      return false;\n    }\n\n    return prefixNode = prefixNode[letter];\n  });\n  return {\n    prefixFound: prefixFound,\n    prefixNode: prefixNode\n  };\n}\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recursePrefix;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // sort items as they're being found\n// to prevent slow .sort() in NodeJs\n\n\nvar pushInOrder = function pushInOrder(word, prefixes) {\n  var i = 0;\n\n  while (i < prefixes.length) {\n    if (word < prefixes[i]) {\n      break;\n    }\n\n    i += 1;\n  }\n\n  prefixes.splice(i, 0, word);\n  return prefixes;\n};\n\nfunction recursePrefix(node, prefix, sorted) {\n  var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var word = prefix;\n\n  for (var branch in node) {\n    var currentLetter = branch;\n\n    if (branch === _config2.default.END_WORD && typeof node[branch] === 'number') {\n      if (sorted) {\n        pushInOrder(word, prefixes);\n      } else {\n        prefixes.push(word);\n      }\n\n      word = '';\n    } else if (branch === _config2.default.END_WORD_REPLACER) {\n      currentLetter = _config2.default.END_WORD;\n    }\n\n    recursePrefix(node[branch], prefix + currentLetter, sorted, prefixes);\n  }\n\n  return prefixes;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recurseRandomWord;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction recurseRandomWord(node, prefix) {\n  var word = prefix;\n  var branches = Object.keys(node);\n  var branch = branches[Math.floor(Math.random() * branches.length)];\n\n  if (branch === _config2.default.END_WORD) {\n    return word;\n  }\n\n  return recurseRandomWord(node[branch], prefix + branch);\n}\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = permutations;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction permutations(letters, trie) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    type: 'anagram'\n  };\n\n  if (typeof letters !== 'string') {\n    throw 'Permutations expects string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n  }\n\n  var words = [];\n\n  var permute = function permute(word, node) {\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var wordIsEmpty = word.length === 0;\n    var wordFound = words.indexOf(prefix) !== -1;\n    var endWordFound = node[_config2.default.END_WORD] === 1;\n\n    if (wordIsEmpty && endWordFound && !wordFound) {\n      words.push(prefix);\n    }\n\n    for (var i = 0, len = word.length; i < len; i++) {\n      var letter = word[i];\n\n      if (opts.type === 'sub-anagram') {\n        if (endWordFound && !(words.indexOf(prefix) !== -1)) {\n          words.push(prefix);\n        }\n      }\n\n      if (node[letter]) {\n        var remaining = word.substring(0, i) + word.substring(i + 1, len);\n        permute(remaining, node[letter], prefix + letter, words);\n      }\n    }\n\n    return words.sort();\n  };\n\n  return permute(letters, trie);\n}\n\n;\nmodule.exports = exports['default'];"],"sourceRoot":""}
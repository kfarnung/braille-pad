{"version":3,"sources":["Views/Reference/NatoTable.tsx","../node_modules/react-bootstrap/esm/Table.js"],"names":["NatoTable","className","striped","responsive","NatoData","instance","entries","map","value","key","character","word","Table","forwardRef","_ref","ref","bsPrefix","bordered","borderless","hover","size","variant","props","decoratedBsPrefix","classes","table","createElement","responsiveClass"],"mappings":"6HAAA,kDA4BeA,UAvBf,WACE,OACE,yBAAKC,UAAU,aACb,kBAAC,IAAD,CAAOC,SAAS,EAAMC,YAAY,GAChC,+BACE,4BACE,sCACA,2CAGJ,+BACGC,WAASC,SAASC,QAAQC,KAAI,SAACC,GAAD,OAC7B,wBAAIC,IAAKD,EAAME,WACb,4BAAKF,EAAME,WACX,4BAAKF,EAAMG,e,gCCnBzB,yDAKIC,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBf,EAAYa,EAAKb,UACjBC,EAAUY,EAAKZ,QACfe,EAAWH,EAAKG,SAChBC,EAAaJ,EAAKI,WAClBC,EAAQL,EAAKK,MACbC,EAAON,EAAKM,KACZC,EAAUP,EAAKO,QACflB,EAAaW,EAAKX,WAClBmB,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIS,EAAoB,YAAmBP,EAAU,SACjDQ,EAAU,IAAWvB,EAAWsB,EAAmBF,GAAWE,EAAoB,IAAMF,EAASD,GAAQG,EAAoB,IAAMH,EAAMlB,GAAWqB,EAAoB,WAAYN,GAAYM,EAAoB,YAAaL,GAAcK,EAAoB,cAAeJ,GAASI,EAAoB,UAC/SE,EAAQ,IAAMC,cAAc,QAAS,YAAS,GAAIJ,EAAO,CAC3DrB,UAAWuB,EACXT,IAAKA,KAGP,GAAIZ,EAAY,CACd,IAAIwB,EAAkBJ,EAAoB,cAM1C,MAJ0B,kBAAfpB,IACTwB,EAAkBA,EAAkB,IAAMxB,GAGrC,IAAMuB,cAAc,MAAO,CAChCzB,UAAW0B,GACVF,GAGL,OAAOA,KAEM","file":"static/js/15.006e9810.chunk.js","sourcesContent":["import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { NatoData } from 'puzzle-lib';\nimport './NatoTable.scss';\n\nfunction NatoTable() {\n  return (\n    <div className=\"NatoTable\">\n      <Table striped={true} responsive={true}>\n        <thead>\n          <tr>\n            <th>Letter</th>\n            <th>NATO Word</th>\n          </tr>\n        </thead>\n        <tbody>\n          {NatoData.instance.entries.map((value) => (\n            <tr key={value.character}>\n              <td>{value.character}</td>\n              <td>{value.word}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default NatoTable;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}
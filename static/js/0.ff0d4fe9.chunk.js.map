{"version":3,"sources":["../node_modules/puzzle-lib/build/src/index.js","../node_modules/puzzle-lib/build/src/Common/EncodingCategory.js","../node_modules/trie-prefix-tree/dist/config.js","../node_modules/puzzle-lib/build/src/Braille/BrailleEncoding.js","../node_modules/puzzle-lib/build/src/Common/EncodingCharacterBase.js","../node_modules/puzzle-lib/build/src/Common/EncodingDataBase.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarUtils.js","../node_modules/puzzle-lib/build/src/Cipher/KeyedCipherStringBase.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterEncoding.js","../node_modules/puzzle-lib/build/src/Morse/MorseEncoding.js","../node_modules/puzzle-lib/build/src/Braille/BrailleData.js","../node_modules/puzzle-lib/build/src/Common/EncodingEntry.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterConversion.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterTableEntry.js","../node_modules/left-pad/index.js","../node_modules/puzzle-lib/build/src/Common/CharacterImage.js","../node_modules/puzzle-lib/build/src/Common/InlineSvg.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseCharacter.js","../node_modules/puzzle-lib/build/src/Common/Helpers.js","../node_modules/puzzle-lib/build/src/Nato/NatoCharacter.js","../node_modules/puzzle-lib/build/src/Resistor/ResistorColorEntry.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreEncoding.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDegrees.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDirection.js","../node_modules/puzzle-lib/build/src/WordSearch/Result.js","../node_modules/trie-prefix-tree/dist/append.js","../node_modules/trie-prefix-tree/dist/utils.js","../node_modules/puzzle-lib/build/src/Braille/BrailleCharacter.js","../node_modules/puzzle-lib/build/src/Common/EncodingLookupResult.js","../node_modules/puzzle-lib/build/src/Braille/BrailleDot.js","../node_modules/puzzle-lib/build/src/Braille/BrailleStream.js","../node_modules/puzzle-lib/build/src/Cipher/AutoKeyString.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarString.js","../node_modules/puzzle-lib/build/src/Cipher/VigenereString.js","../node_modules/puzzle-lib/build/src/Conversion/SignificantFigures.js","../node_modules/puzzle-lib/build/src/Conversion/StringAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseData.js","../node_modules/puzzle-lib/build/src/Morse/MorseString.js","../node_modules/puzzle-lib/build/src/Nato/NatoData.js","../node_modules/puzzle-lib/build/src/NavalFlags/NavalFlags.js","../node_modules/puzzle-lib/build/src/Resistor/Resistor.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreCharacter.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreData.js","../node_modules/puzzle-lib/build/src/WordSearch/WordSearchSolver.js","../node_modules/trie-prefix-tree/dist/index.js","../node_modules/trie-prefix-tree/dist/create.js","../node_modules/trie-prefix-tree/dist/checkPrefix.js","../node_modules/trie-prefix-tree/dist/recursePrefix.js","../node_modules/trie-prefix-tree/dist/recurseRandomWord.js","../node_modules/trie-prefix-tree/dist/permutations.js"],"names":["Object","defineProperty","exports","value","BrailleCharacter_1","__webpack_require__","BrailleCharacter","BrailleDot_1","BrailleDot","BrailleEncoding_1","BrailleEncoding","BrailleStream_1","BrailleStream","AutoKeyString_1","AutoKeyString","CaesarString_1","CaesarString","KeyedCipherStringBase_1","KeyedCipherStringBase","VigenereString_1","VigenereString","CharacterImage_1","CharacterImage","EncodingCategory_1","EncodingCategory","EncodingEntry_1","EncodingEntry","InlineSvg_1","InlineSvg","CharacterAutoConvert_1","CharacterAutoConvert","CharacterConversion_1","CharacterConversion","CharacterEncoding_1","CharacterEncoding","CharacterTableEntry_1","CharacterTableEntry","SignificantFigures_1","SignificantFigures","StringAutoConvert_1","StringAutoConvert","MorseCharacter_1","MorseCharacter","MorseEncoding_1","MorseEncoding","MorseString_1","MorseString","NatoCharacter_1","NatoCharacter","NatoData_1","NatoData","NavalFlags_1","NavalFlags","Resistor_1","Resistor","ResistorColorEntry_1","ResistorColorEntry","SemaphoreCharacter_1","SemaphoreCharacter","SemaphoreDegrees_1","SemaphoreDegrees","SemaphoreDirection_1","SemaphoreDirection","Result_1","WordSearchResult","Result","WordSearchSolver_1","WordSearchSolver","default","END_WORD","END_WORD_REPLACER","PERMS_MIN_LEN","module","EncodingCharacterBase","data","category","this","_lookup","_data","_category","invalidateLookup","prototype","get","set","enumerable","configurable","clear","onClear","empty","onEmpty","getExactMatches","ensureLookup","exact","getPotentialMatches","partial","toString","exactString","valid","length","valueOf","getEncoding","lookup","EncodingLookupResult_1","EncodingDataBase","_entries","encoding","All","result","EncodingLookupResult","_i","_a","entry","push","addToList","display","CaesarUtils","rotateLetter","ch","rot","Error","alphaLength","code","charCodeAt","base","isLowerAlpha","lowerA","isUpperAlpha","upperA","String","fromCharCode","rotateLetterWithKey","key","keyIndex","decrypt","keyCh","getCharacterWithMod","toOrdinal","isAlpha","str","index","charAt","upperZ","lowerZ","text","_text","_key","encrypt","convert","packMorse","args","arguments","None","shift","args_1","arg","Dot","Dash","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","EncodingDataBase_1","BrailleData","_super","_this","call","LetterA","Letter","LetterB","LetterC","LetterD","LetterE","LetterF","LetterG","LetterH","LetterI","LetterJ","LetterK","LetterL","LetterM","LetterN","LetterO","LetterP","LetterQ","LetterR","LetterS","LetterT","LetterU","LetterV","LetterW","LetterX","LetterY","LetterZ","Number0","Number","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","FormattingNumber","Formatting","FormattingCapital","PunctuationComma","Punctuation","PunctuationSemicolon","PunctuationApostrophe","PunctuationColon","PunctuationHyphen","PunctuationDecimalPoint","PunctuationFullStop","PunctuationExclamationPoint","PunctuationOpenQuote","PunctuationQuestionMark","PunctuationCloseQuote","PunctuationBracket","PunctuationSlash","instance","getAsciiTable","retVal","addAsciiRange","toAscii","getOrdinalTable","ascii","chCode","ordinalCode","array","start","end","conversion","maxValue","i","letter","leftPad","character","binary","getValue","ternary","octal","decimal","hexadecimal","Math","ceil","log","len","cache","pad","image","inlineSvg","viewBoxWidth","viewBoxHeight","render","convertCharacter","input","forcedCharacterEncoding","determineCharacterEncoding","Latin","baseTen","parseInt","Ascii","asciiPrintable","Ordinal","FiveBitBinary","appearsBinary","EightBitBinary","match","numeric","character_1","EncodingCharacterBase_1","Helpers_1","MorseData_1","MORSE_BITMASK","MorseData","_morse","toMorseString","morseChars","DOT","DASH","parseMorseString","morse","bits","backspace","substring","dot","dash","invertDotsAndDashes","Helpers","assert","indexOf","RESERVED_DIVIDER","replace","reverse","split","join","condition","assertMsg","message","word","name","colorCode","multiplier","toleranceInPercent","hasValue","undefined","getDisplayValue","hasTolerance","getDisplayTolerance","SemaphoreEncoding","FromDegrees","degrees","position","North","ToDegrees","direction","counter","wordPoints","points","from","trie","isEndWordLetter","_config2","isLastLetter","obj","_config","__esModule","objectCopy","JSON","parse","stringify","spacer","BrailleData_1","_encoding","mask","toggle","map","_chars","_currentStr","_processPosition","_numberMode","invalidate","value_1","append","pop","space","update","CaesarUtils_1","apply","rotStr","fullKey","currentLetter","getRotation","getRotations","rotations","num","sigFigs","roundInternal","floor","round","func","RangeError","factor","getFactor","absFactor","abs","absNum","digits","pow","convertString","homogeneous","splitString","encoding_1","determineStringEncoding","reduce","encodingCount","encodingKeys","parsed_1","charEncoding","maxEncoding","maxCount","encodingKeys_1","filter","item","PunctuationPeriod","PunctuationForwardSlash","PunctuationOpenParenthesis","PunctuationCloseParenthesis","PunctuationAmpersand","PunctuationDoubleDash","PunctuationPlusSign","PunctuationUnderscore","PunctuationQuotationMark","PunctuationDollarSign","PunctuationAtSign","characterDivider","wordDivider","CHARACTER_DIVIDER","WORD_DIVIDER","wordCharacters","w","wc","_words","subarray","_b","word_1","s","toUpperCase","colors","currentColor","INVALID_RESISTOR","applyMultiplier","multipler","BLACK","BROWN","RED","ORANGE","YELLOW","GREEN","BLUE","VIOLET","GREY","WHITE","GOLD","SILVER","colorTable","SemaphoreData_1","SemaphoreEncoding_1","SemaphoreData","_directions","addDirection","parseEncoding","directions","slice","dir","splice","removeDirection","hasDirection","getDegrees","sort","a","getPotentialMatch","other","previousValue","currentValue","matrix","_matrix","_targets","findWords","words","words_1","full","trim","addWord","search","results","numRows","yIdx","lineLength","xIdx","x","y","pointResults","startSearch","translation","directionalResults","checkDirection","currentPoint","currentString","pointHistory","isInBounds","wordsWithPrefix","getPrefix","foundWord","point","_typeof","Symbol","iterator","isArray","_create2","concat","arr","arr2","_toConsumableArray","tree","dump","_utils2","toLowerCase","_append2","removeWord","_checkPrefix","_checkPrefix6","prefixFound","prefixNode","isPrefix","prefix","strPrefix","sorted","_recursePrefix2","getRandomWordWithPrefix","_recurseRandomWord2","countPrefix","getWords","hasWord","_checkPrefix4","getAnagrams","letters","_permutations2","type","getSubAnagrams","_interopRequireDefault","accumulator","_append","every","_utils","recursePrefix","node","prefixes","branch","pushInOrder","recurseRandomWord","branches","keys","random","opts","permute","wordIsEmpty","wordFound","endWordFound","remaining"],"mappings":"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","file":"static/js/0.ff0d4fe9.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrailleCharacter_1 = require(\"./Braille/BrailleCharacter\");\n\nexports.BrailleCharacter = BrailleCharacter_1.BrailleCharacter;\n\nvar BrailleDot_1 = require(\"./Braille/BrailleDot\");\n\nexports.BrailleDot = BrailleDot_1.BrailleDot;\n\nvar BrailleEncoding_1 = require(\"./Braille/BrailleEncoding\");\n\nexports.BrailleEncoding = BrailleEncoding_1.BrailleEncoding;\n\nvar BrailleStream_1 = require(\"./Braille/BrailleStream\");\n\nexports.BrailleStream = BrailleStream_1.BrailleStream;\n\nvar AutoKeyString_1 = require(\"./Cipher/AutoKeyString\");\n\nexports.AutoKeyString = AutoKeyString_1.AutoKeyString;\n\nvar CaesarString_1 = require(\"./Cipher/CaesarString\");\n\nexports.CaesarString = CaesarString_1.CaesarString;\n\nvar KeyedCipherStringBase_1 = require(\"./Cipher/KeyedCipherStringBase\");\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase_1.KeyedCipherStringBase;\n\nvar VigenereString_1 = require(\"./Cipher/VigenereString\");\n\nexports.VigenereString = VigenereString_1.VigenereString;\n\nvar CharacterImage_1 = require(\"./Common/CharacterImage\");\n\nexports.CharacterImage = CharacterImage_1.CharacterImage;\n\nvar EncodingCategory_1 = require(\"./Common/EncodingCategory\");\n\nexports.EncodingCategory = EncodingCategory_1.EncodingCategory;\n\nvar EncodingEntry_1 = require(\"./Common/EncodingEntry\");\n\nexports.EncodingEntry = EncodingEntry_1.EncodingEntry;\n\nvar InlineSvg_1 = require(\"./Common/InlineSvg\");\n\nexports.InlineSvg = InlineSvg_1.InlineSvg;\n\nvar CharacterAutoConvert_1 = require(\"./Conversion/CharacterAutoConvert\");\n\nexports.CharacterAutoConvert = CharacterAutoConvert_1.CharacterAutoConvert;\n\nvar CharacterConversion_1 = require(\"./Conversion/CharacterConversion\");\n\nexports.CharacterConversion = CharacterConversion_1.CharacterConversion;\n\nvar CharacterEncoding_1 = require(\"./Conversion/CharacterEncoding\");\n\nexports.CharacterEncoding = CharacterEncoding_1.CharacterEncoding;\n\nvar CharacterTableEntry_1 = require(\"./Conversion/CharacterTableEntry\");\n\nexports.CharacterTableEntry = CharacterTableEntry_1.CharacterTableEntry;\n\nvar SignificantFigures_1 = require(\"./Conversion/SignificantFigures\");\n\nexports.SignificantFigures = SignificantFigures_1.SignificantFigures;\n\nvar StringAutoConvert_1 = require(\"./Conversion/StringAutoConvert\");\n\nexports.StringAutoConvert = StringAutoConvert_1.StringAutoConvert;\n\nvar MorseCharacter_1 = require(\"./Morse/MorseCharacter\");\n\nexports.MorseCharacter = MorseCharacter_1.MorseCharacter;\n\nvar MorseEncoding_1 = require(\"./Morse/MorseEncoding\");\n\nexports.MorseEncoding = MorseEncoding_1.MorseEncoding;\n\nvar MorseString_1 = require(\"./Morse/MorseString\");\n\nexports.MorseString = MorseString_1.MorseString;\n\nvar NatoCharacter_1 = require(\"./Nato/NatoCharacter\");\n\nexports.NatoCharacter = NatoCharacter_1.NatoCharacter;\n\nvar NatoData_1 = require(\"./Nato/NatoData\");\n\nexports.NatoData = NatoData_1.NatoData;\n\nvar NavalFlags_1 = require(\"./NavalFlags/NavalFlags\");\n\nexports.NavalFlags = NavalFlags_1.NavalFlags;\n\nvar Resistor_1 = require(\"./Resistor/Resistor\");\n\nexports.Resistor = Resistor_1.Resistor;\n\nvar ResistorColorEntry_1 = require(\"./Resistor/ResistorColorEntry\");\n\nexports.ResistorColorEntry = ResistorColorEntry_1.ResistorColorEntry;\n\nvar SemaphoreCharacter_1 = require(\"./Semaphore/SemaphoreCharacter\");\n\nexports.SemaphoreCharacter = SemaphoreCharacter_1.SemaphoreCharacter;\n\nvar SemaphoreDegrees_1 = require(\"./Semaphore/SemaphoreDegrees\");\n\nexports.SemaphoreDegrees = SemaphoreDegrees_1.SemaphoreDegrees;\n\nvar SemaphoreDirection_1 = require(\"./Semaphore/SemaphoreDirection\");\n\nexports.SemaphoreDirection = SemaphoreDirection_1.SemaphoreDirection;\n\nvar Result_1 = require(\"./WordSearch/Result\");\n\nexports.WordSearchResult = Result_1.Result;\n\nvar WordSearchSolver_1 = require(\"./WordSearch/WordSearchSolver\");\n\nexports.WordSearchSolver = WordSearchSolver_1.WordSearchSolver;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EncodingCategory;\n\n(function (EncodingCategory) {\n  EncodingCategory[EncodingCategory[\"None\"] = 0] = \"None\";\n  EncodingCategory[EncodingCategory[\"Letter\"] = 2] = \"Letter\";\n  EncodingCategory[EncodingCategory[\"Number\"] = 4] = \"Number\";\n  EncodingCategory[EncodingCategory[\"Formatting\"] = 8] = \"Formatting\";\n  EncodingCategory[EncodingCategory[\"Punctuation\"] = 16] = \"Punctuation\";\n  EncodingCategory[EncodingCategory[\"All\"] = 255] = \"All\";\n})(EncodingCategory = exports.EncodingCategory || (exports.EncodingCategory = {}));","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  END_WORD: '$',\n  END_WORD_REPLACER: '9a219a89-91cd-42e2-abd5-eb113af08ca8',\n  PERMS_MIN_LEN: 2\n};\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleEncoding;\n\n(function (BrailleEncoding) {\n  BrailleEncoding[BrailleEncoding[\"None\"] = 0] = \"None\"; // Letters (first decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterA\"] = 1] = \"LetterA\";\n  BrailleEncoding[BrailleEncoding[\"LetterB\"] = 3] = \"LetterB\";\n  BrailleEncoding[BrailleEncoding[\"LetterC\"] = 9] = \"LetterC\";\n  BrailleEncoding[BrailleEncoding[\"LetterD\"] = 25] = \"LetterD\";\n  BrailleEncoding[BrailleEncoding[\"LetterE\"] = 17] = \"LetterE\";\n  BrailleEncoding[BrailleEncoding[\"LetterF\"] = 11] = \"LetterF\";\n  BrailleEncoding[BrailleEncoding[\"LetterG\"] = 27] = \"LetterG\";\n  BrailleEncoding[BrailleEncoding[\"LetterH\"] = 19] = \"LetterH\";\n  BrailleEncoding[BrailleEncoding[\"LetterI\"] = 10] = \"LetterI\";\n  BrailleEncoding[BrailleEncoding[\"LetterJ\"] = 26] = \"LetterJ\"; // Letters (second decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterK\"] = 5] = \"LetterK\";\n  BrailleEncoding[BrailleEncoding[\"LetterL\"] = 7] = \"LetterL\";\n  BrailleEncoding[BrailleEncoding[\"LetterM\"] = 13] = \"LetterM\";\n  BrailleEncoding[BrailleEncoding[\"LetterN\"] = 29] = \"LetterN\";\n  BrailleEncoding[BrailleEncoding[\"LetterO\"] = 21] = \"LetterO\";\n  BrailleEncoding[BrailleEncoding[\"LetterP\"] = 15] = \"LetterP\";\n  BrailleEncoding[BrailleEncoding[\"LetterQ\"] = 31] = \"LetterQ\";\n  BrailleEncoding[BrailleEncoding[\"LetterR\"] = 23] = \"LetterR\";\n  BrailleEncoding[BrailleEncoding[\"LetterS\"] = 14] = \"LetterS\";\n  BrailleEncoding[BrailleEncoding[\"LetterT\"] = 30] = \"LetterT\"; // Letters (third decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterU\"] = 37] = \"LetterU\";\n  BrailleEncoding[BrailleEncoding[\"LetterV\"] = 39] = \"LetterV\";\n  BrailleEncoding[BrailleEncoding[\"LetterX\"] = 45] = \"LetterX\";\n  BrailleEncoding[BrailleEncoding[\"LetterY\"] = 61] = \"LetterY\";\n  BrailleEncoding[BrailleEncoding[\"LetterZ\"] = 53] = \"LetterZ\"; // Letters (fourth decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterW\"] = 58] = \"LetterW\"; // Numbers\n\n  BrailleEncoding[BrailleEncoding[\"Number1\"] = 1] = \"Number1\";\n  BrailleEncoding[BrailleEncoding[\"Number2\"] = 3] = \"Number2\";\n  BrailleEncoding[BrailleEncoding[\"Number3\"] = 9] = \"Number3\";\n  BrailleEncoding[BrailleEncoding[\"Number4\"] = 25] = \"Number4\";\n  BrailleEncoding[BrailleEncoding[\"Number5\"] = 17] = \"Number5\";\n  BrailleEncoding[BrailleEncoding[\"Number6\"] = 11] = \"Number6\";\n  BrailleEncoding[BrailleEncoding[\"Number7\"] = 27] = \"Number7\";\n  BrailleEncoding[BrailleEncoding[\"Number8\"] = 19] = \"Number8\";\n  BrailleEncoding[BrailleEncoding[\"Number9\"] = 10] = \"Number9\";\n  BrailleEncoding[BrailleEncoding[\"Number0\"] = 26] = \"Number0\"; // Formatting\n\n  BrailleEncoding[BrailleEncoding[\"FormattingNumber\"] = 60] = \"FormattingNumber\";\n  BrailleEncoding[BrailleEncoding[\"FormattingCapital\"] = 32] = \"FormattingCapital\"; // Punctuation\n\n  BrailleEncoding[BrailleEncoding[\"PunctuationComma\"] = 2] = \"PunctuationComma\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSemicolon\"] = 6] = \"PunctuationSemicolon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationApostrophe\"] = 4] = \"PunctuationApostrophe\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationColon\"] = 18] = \"PunctuationColon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationHyphen\"] = 36] = \"PunctuationHyphen\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationDecimalPoint\"] = 40] = \"PunctuationDecimalPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationFullStop\"] = 50] = \"PunctuationFullStop\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationExclamationPoint\"] = 22] = \"PunctuationExclamationPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationOpenQuote\"] = 38] = \"PunctuationOpenQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationQuestionMark\"] = 38] = \"PunctuationQuestionMark\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationCloseQuote\"] = 52] = \"PunctuationCloseQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationBracket\"] = 54] = \"PunctuationBracket\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSlash\"] = 12] = \"PunctuationSlash\";\n})(BrailleEncoding = exports.BrailleEncoding || (exports.BrailleEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCharacterBase =\n/** @class */\nfunction () {\n  function EncodingCharacterBase(data, category) {\n    this._lookup = null;\n    this._data = data;\n    this._category = category;\n    this.invalidateLookup();\n  }\n\n  Object.defineProperty(EncodingCharacterBase.prototype, \"category\", {\n    get: function get() {\n      return this._category;\n    },\n    set: function set(value) {\n      if (this._category !== value) {\n        this._category = value;\n        this.invalidateLookup();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  EncodingCharacterBase.prototype.clear = function () {\n    this.onClear();\n    this.invalidateLookup();\n  };\n\n  EncodingCharacterBase.prototype.empty = function () {\n    return this.onEmpty();\n  };\n\n  EncodingCharacterBase.prototype.getExactMatches = function () {\n    return this.ensureLookup().exact;\n  };\n\n  EncodingCharacterBase.prototype.getPotentialMatches = function () {\n    return this.ensureLookup().partial;\n  };\n\n  EncodingCharacterBase.prototype.toString = function () {\n    return this.ensureLookup().exactString;\n  };\n\n  EncodingCharacterBase.prototype.valid = function () {\n    return this.ensureLookup().exact.length > 0;\n  };\n\n  EncodingCharacterBase.prototype.valueOf = function () {\n    return this.getEncoding();\n  };\n\n  EncodingCharacterBase.prototype.invalidateLookup = function () {\n    this._lookup = null;\n  };\n\n  EncodingCharacterBase.prototype.ensureLookup = function () {\n    if (!this._lookup) {\n      this._lookup = this._data.lookup(this.getEncoding(), this._category);\n    }\n\n    return this._lookup;\n  };\n\n  return EncodingCharacterBase;\n}();\n\nexports.EncodingCharacterBase = EncodingCharacterBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"./EncodingCategory\");\n\nvar EncodingEntry_1 = require(\"./EncodingEntry\");\n\nvar EncodingLookupResult_1 = require(\"./EncodingLookupResult\");\n\nvar EncodingDataBase =\n/** @class */\nfunction () {\n  function EncodingDataBase() {\n    this._entries = [];\n  }\n\n  EncodingDataBase.prototype.lookup = function (encoding, category) {\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var result = new EncodingLookupResult_1.EncodingLookupResult();\n\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var entry = _a[_i];\n\n      if ((entry.category & category) !== 0) {\n        if (entry.encoding === encoding) {\n          result.exact.push(entry);\n        } else if ((entry.encoding & encoding) === encoding) {\n          result.partial.push(entry);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  EncodingDataBase.prototype.addToList = function (encoding, category, display) {\n    this._entries.push(new EncodingEntry_1.EncodingEntry(encoding, category, display));\n  };\n\n  return EncodingDataBase;\n}();\n\nexports.EncodingDataBase = EncodingDataBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterConversion_1 = require(\"../Conversion/CharacterConversion\");\n\nvar CaesarUtils =\n/** @class */\nfunction () {\n  function CaesarUtils() {}\n\n  CaesarUtils.rotateLetter = function (ch, rot) {\n    if (ch.length !== 1) {\n      throw new Error('Expected a single character');\n    }\n\n    rot %= this.alphaLength;\n\n    if (rot < 0) {\n      rot += this.alphaLength;\n    }\n\n    var code = ch.charCodeAt(0);\n    var base = 0;\n\n    if (this.isLowerAlpha(code)) {\n      base = this.lowerA;\n    } else if (this.isUpperAlpha(code)) {\n      base = this.upperA;\n    } else {\n      return ch;\n    }\n\n    return String.fromCharCode((code - base + rot) % this.alphaLength + base);\n  };\n\n  CaesarUtils.rotateLetterWithKey = function (ch, key, keyIndex, decrypt) {\n    if (decrypt === void 0) {\n      decrypt = false;\n    }\n\n    if (key.length === 0) {\n      return ch;\n    }\n\n    var keyCh = this.getCharacterWithMod(key, keyIndex);\n    var rot = CharacterConversion_1.CharacterConversion.toOrdinal(keyCh) - 1;\n\n    if (decrypt) {\n      rot = -rot;\n    }\n\n    return this.rotateLetter(ch, rot);\n  };\n\n  CaesarUtils.isAlpha = function (ch) {\n    var code = ch.charCodeAt(0);\n    return this.isUpperAlpha(code) || this.isLowerAlpha(code);\n  };\n\n  CaesarUtils.getCharacterWithMod = function (str, index) {\n    return str.charAt(index % str.length);\n  };\n\n  CaesarUtils.isUpperAlpha = function (code) {\n    return code >= this.upperA && code <= this.upperZ;\n  };\n\n  CaesarUtils.isLowerAlpha = function (code) {\n    return code >= this.lowerA && code <= this.lowerZ;\n  };\n\n  CaesarUtils.upperA = 'A'.charCodeAt(0);\n  CaesarUtils.upperZ = 'Z'.charCodeAt(0);\n  CaesarUtils.lowerA = 'a'.charCodeAt(0);\n  CaesarUtils.lowerZ = 'z'.charCodeAt(0);\n  CaesarUtils.alphaLength = 26;\n  return CaesarUtils;\n}();\n\nexports.CaesarUtils = CaesarUtils;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar KeyedCipherStringBase =\n/** @class */\nfunction () {\n  function KeyedCipherStringBase(text, key) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    if (key === void 0) {\n      key = '';\n    }\n\n    this._text = text;\n    this._key = key;\n  }\n\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"key\", {\n    get: function get() {\n      return this._key;\n    },\n    set: function set(value) {\n      this._key = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  KeyedCipherStringBase.prototype.encrypt = function () {\n    return this.convert(false);\n  };\n\n  KeyedCipherStringBase.prototype.decrypt = function () {\n    return this.convert(true);\n  };\n\n  return KeyedCipherStringBase;\n}();\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CharacterEncoding;\n\n(function (CharacterEncoding) {\n  CharacterEncoding[CharacterEncoding[\"None\"] = 0] = \"None\";\n  CharacterEncoding[CharacterEncoding[\"Latin\"] = 1] = \"Latin\";\n  CharacterEncoding[CharacterEncoding[\"Ordinal\"] = 2] = \"Ordinal\";\n  CharacterEncoding[CharacterEncoding[\"FiveBitBinary\"] = 3] = \"FiveBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"EightBitBinary\"] = 4] = \"EightBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"Ascii\"] = 5] = \"Ascii\";\n})(CharacterEncoding = exports.CharacterEncoding || (exports.CharacterEncoding = {}));","\"use strict\"; // The encoding for morse is much less straightforward than the others. The dots\n// and dashes each use two bits of the integer starting with the least-\n// significant bit.\n//\n// Example:\n//\n// 'F' -> ..-.\n//\n// Which encodes as:\n//\n// 01 01 10 01\n//  .  .  -  .\n//\n// Since it's packed starting with the LSB, the resulting number is reversed:\n//\n// 01100101 -> 0x65\n//\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction packMorse() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var value = MorseEncoding.None;\n  var shift = 0;\n\n  for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n    var arg = args_1[_a];\n    arg <<= shift;\n    value |= arg;\n    shift += 2;\n  }\n\n  return value;\n}\n\nvar MorseEncoding;\n\n(function (MorseEncoding) {\n  MorseEncoding[MorseEncoding[\"None\"] = 0] = \"None\"; // Primitives\n\n  MorseEncoding[MorseEncoding[\"Dot\"] = 1] = \"Dot\";\n  MorseEncoding[MorseEncoding[\"Dash\"] = 2] = \"Dash\"; // Letters\n\n  MorseEncoding[MorseEncoding[\"LetterA\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterA\";\n  MorseEncoding[MorseEncoding[\"LetterB\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterB\";\n  MorseEncoding[MorseEncoding[\"LetterC\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterC\";\n  MorseEncoding[MorseEncoding[\"LetterD\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterD\";\n  MorseEncoding[MorseEncoding[\"LetterE\"] = packMorse(MorseEncoding.Dot)] = \"LetterE\";\n  MorseEncoding[MorseEncoding[\"LetterF\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterF\";\n  MorseEncoding[MorseEncoding[\"LetterG\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterG\";\n  MorseEncoding[MorseEncoding[\"LetterH\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterH\";\n  MorseEncoding[MorseEncoding[\"LetterI\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterI\";\n  MorseEncoding[MorseEncoding[\"LetterJ\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterJ\";\n  MorseEncoding[MorseEncoding[\"LetterK\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterK\";\n  MorseEncoding[MorseEncoding[\"LetterL\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterL\";\n  MorseEncoding[MorseEncoding[\"LetterM\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterM\";\n  MorseEncoding[MorseEncoding[\"LetterN\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterN\";\n  MorseEncoding[MorseEncoding[\"LetterO\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterO\";\n  MorseEncoding[MorseEncoding[\"LetterP\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterP\";\n  MorseEncoding[MorseEncoding[\"LetterQ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterQ\";\n  MorseEncoding[MorseEncoding[\"LetterR\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterR\";\n  MorseEncoding[MorseEncoding[\"LetterS\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterS\";\n  MorseEncoding[MorseEncoding[\"LetterT\"] = packMorse(MorseEncoding.Dash)] = \"LetterT\";\n  MorseEncoding[MorseEncoding[\"LetterU\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterU\";\n  MorseEncoding[MorseEncoding[\"LetterV\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterV\";\n  MorseEncoding[MorseEncoding[\"LetterW\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterW\";\n  MorseEncoding[MorseEncoding[\"LetterX\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterX\";\n  MorseEncoding[MorseEncoding[\"LetterY\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterY\";\n  MorseEncoding[MorseEncoding[\"LetterZ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterZ\"; // Numbers\n\n  MorseEncoding[MorseEncoding[\"Number0\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number0\";\n  MorseEncoding[MorseEncoding[\"Number1\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number1\";\n  MorseEncoding[MorseEncoding[\"Number2\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number2\";\n  MorseEncoding[MorseEncoding[\"Number3\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number3\";\n  MorseEncoding[MorseEncoding[\"Number4\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"Number4\";\n  MorseEncoding[MorseEncoding[\"Number5\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number5\";\n  MorseEncoding[MorseEncoding[\"Number6\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number6\";\n  MorseEncoding[MorseEncoding[\"Number7\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number7\";\n  MorseEncoding[MorseEncoding[\"Number8\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number8\";\n  MorseEncoding[MorseEncoding[\"Number9\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"Number9\"; // Punctuation\n\n  MorseEncoding[MorseEncoding[\"PunctuationPeriod\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationPeriod\";\n  MorseEncoding[MorseEncoding[\"PunctuationComma\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationComma\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuestionMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationQuestionMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationApostrophe\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationApostrophe\";\n  MorseEncoding[MorseEncoding[\"PunctuationExclamationPoint\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationExclamationPoint\";\n  MorseEncoding[MorseEncoding[\"PunctuationForwardSlash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationForwardSlash\";\n  MorseEncoding[MorseEncoding[\"PunctuationOpenParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationOpenParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationCloseParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationCloseParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationAmpersand\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationAmpersand\";\n  MorseEncoding[MorseEncoding[\"PunctuationColon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationColon\";\n  MorseEncoding[MorseEncoding[\"PunctuationSemicolon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationSemicolon\";\n  MorseEncoding[MorseEncoding[\"PunctuationDoubleDash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDoubleDash\";\n  MorseEncoding[MorseEncoding[\"PunctuationPlusSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationPlusSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationHyphen\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationHyphen\";\n  MorseEncoding[MorseEncoding[\"PunctuationUnderscore\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationUnderscore\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuotationMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationQuotationMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationDollarSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDollarSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationAtSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationAtSign\";\n})(MorseEncoding = exports.MorseEncoding || (exports.MorseEncoding = {}));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleData =\n/** @class */\nfunction (_super) {\n  __extends(BrailleData, _super);\n\n  function BrailleData() {\n    var _this = _super.call(this) || this;\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingCapital, EncodingCategory_1.EncodingCategory.Formatting, '^');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationDecimalPoint, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationFullStop, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationOpenQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationCloseQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    return _this;\n  }\n\n  BrailleData.instance = new BrailleData();\n  return BrailleData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.BrailleData = BrailleData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingEntry =\n/** @class */\nfunction () {\n  function EncodingEntry(encoding, category, display) {\n    this.encoding = encoding;\n    this.category = category;\n    this.display = display;\n  }\n\n  EncodingEntry.prototype.toString = function () {\n    return this.display;\n  };\n\n  return EncodingEntry;\n}();\n\nexports.EncodingEntry = EncodingEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterTableEntry_1 = require(\"./CharacterTableEntry\");\n\nvar CharacterConversion =\n/** @class */\nfunction () {\n  function CharacterConversion() {}\n\n  CharacterConversion.getAsciiTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 48, 57, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 97, 122, CharacterConversion.toAscii, 127);\n    return retVal;\n  };\n\n  CharacterConversion.getOrdinalTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toOrdinal, 26);\n    return retVal;\n  };\n\n  CharacterConversion.toAscii = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var ascii = ch.charCodeAt(0);\n\n    if (ascii >= 0 && ascii <= 127) {\n      return ascii;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.toOrdinal = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var chCode = ch.charCodeAt(0);\n    var ordinalCode = chCode - 'a'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    ordinalCode = chCode - 'A'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.addAsciiRange = function (array, start, end, conversion, maxValue) {\n    for (var i = start; i <= end; i++) {\n      var letter = String.fromCharCode(i);\n      array.push(new CharacterTableEntry_1.CharacterTableEntry(letter, conversion(letter), maxValue));\n    }\n  };\n\n  return CharacterConversion;\n}();\n\nexports.CharacterConversion = CharacterConversion;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar leftPad = require(\"left-pad\");\n\nvar CharacterTableEntry =\n/** @class */\nfunction () {\n  function CharacterTableEntry(character, value, maxValue) {\n    this.character = character;\n    this.binary = CharacterTableEntry.getValue(value, 2, maxValue);\n    this.ternary = CharacterTableEntry.getValue(value, 3, maxValue);\n    this.octal = CharacterTableEntry.getValue(value, 8, maxValue);\n    this.decimal = CharacterTableEntry.getValue(value, 10, maxValue);\n    this.hexadecimal = CharacterTableEntry.getValue(value, 16, maxValue);\n  }\n\n  CharacterTableEntry.getValue = function (value, base, maxValue) {\n    return leftPad(value.toString(base), Math.ceil(Math.log(maxValue) / Math.log(base)), '0');\n  };\n\n  return CharacterTableEntry;\n}();\n\nexports.CharacterTableEntry = CharacterTableEntry;","/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\n\nmodule.exports = leftPad;\nvar cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];\n\nfunction leftPad(str, len, ch) {\n  // convert `str` to a `string`\n  str = str + ''; // `len` is the `pad`'s length now\n\n  len = len - str.length; // doesn't need to pad\n\n  if (len <= 0) return str; // `ch` defaults to `' '`\n\n  if (!ch && ch !== 0) ch = ' '; // convert `ch` to a `string` cuz it could be a number\n\n  ch = ch + ''; // cache common use cases\n\n  if (ch === ' ' && len < 10) return cache[len] + str; // `pad` starts with an empty string\n\n  var pad = ''; // loop\n\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch; // divide `len` by 2, ditch the remainder\n\n    len >>= 1; // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n\n    if (len) ch += ch; // `len` is 0, exit the loop\n    else break;\n  } // pad `str`!\n\n\n  return pad + str;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage =\n/** @class */\nfunction () {\n  function CharacterImage(character, image) {\n    this.character = character;\n    this.image = image;\n  }\n\n  return CharacterImage;\n}();\n\nexports.CharacterImage = CharacterImage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar InlineSvg =\n/** @class */\nfunction () {\n  function InlineSvg(inlineSvg, viewBoxWidth, viewBoxHeight) {\n    this.inlineSvg = inlineSvg;\n    this.viewBoxWidth = viewBoxWidth;\n    this.viewBoxHeight = viewBoxHeight;\n  }\n\n  InlineSvg.prototype.render = function () {\n    // tslint:disable-next-line:max-line-length\n    return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 \" + this.viewBoxWidth + \" \" + this.viewBoxHeight + \"\\\">\" + this.inlineSvg + \"</svg>\";\n  };\n\n  return InlineSvg;\n}();\n\nexports.InlineSvg = InlineSvg;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar CharacterAutoConvert =\n/** @class */\nfunction () {\n  function CharacterAutoConvert() {} // Forced encoding can be useful when converting an entire string\n  // or simply dealing with binary which has no leading zeros\n\n\n  CharacterAutoConvert.convertCharacter = function (input, forcedCharacterEncoding) {\n    var encoding = null;\n\n    if (!forcedCharacterEncoding) {\n      encoding = this.determineCharacterEncoding(input);\n    } else {\n      encoding = forcedCharacterEncoding;\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.None) {\n      return '';\n    } // Assume that Latin characters should remain\n\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Latin) {\n      return input;\n    }\n\n    var baseTen = Number.parseInt(input, 10);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ascii) {\n      return CharacterAutoConvert.asciiPrintable(baseTen);\n    }\n\n    var asciiOffset = 64;\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ordinal) {\n      return CharacterAutoConvert.asciiPrintable(baseTen + asciiOffset);\n    }\n\n    var binary = Number.parseInt(input, 2);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.FiveBitBinary && this.appearsBinary(input)) {\n      return CharacterAutoConvert.asciiPrintable(binary + asciiOffset);\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.EightBitBinary && this.appearsBinary(input)) {\n      return CharacterAutoConvert.asciiPrintable(binary);\n    }\n\n    return '';\n  };\n\n  CharacterAutoConvert.asciiPrintable = function (index) {\n    if (index < 32 || index > 126) {\n      return '';\n    }\n\n    return String.fromCharCode(index);\n  };\n\n  CharacterAutoConvert.determineCharacterEncoding = function (input) {\n    if (input.match(/[a-z]/i)) {\n      return CharacterEncoding_1.CharacterEncoding.Latin;\n    }\n\n    var numeric = Number.parseInt(input, 10);\n\n    if (this.appearsBinary(input)) {\n      if (input.length === 5) {\n        return CharacterEncoding_1.CharacterEncoding.FiveBitBinary;\n      } else if (input.length === 8 || input.length === 7) {\n        return CharacterEncoding_1.CharacterEncoding.EightBitBinary;\n      }\n    }\n\n    if (input.length < 3 && numeric > 0 && numeric < 27) {\n      return CharacterEncoding_1.CharacterEncoding.Ordinal;\n    }\n\n    if (numeric > 64 && numeric < 91) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    if (numeric > 97 && numeric < 123) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    return CharacterEncoding_1.CharacterEncoding.None;\n  };\n\n  CharacterAutoConvert.appearsBinary = function (character) {\n    for (var _i = 0, character_1 = character; _i < character_1.length; _i++) {\n      var letter = character_1[_i];\n\n      if (letter !== '0' && letter !== '1') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return CharacterAutoConvert;\n}();\n\nexports.CharacterAutoConvert = CharacterAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar Helpers_1 = require(\"../Common/Helpers\");\n\nvar MorseData_1 = require(\"./MorseData\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MORSE_BITMASK = MorseEncoding_1.MorseEncoding.Dot | MorseEncoding_1.MorseEncoding.Dash;\n\nvar MorseCharacter =\n/** @class */\nfunction (_super) {\n  __extends(MorseCharacter, _super);\n\n  function MorseCharacter(str, category) {\n    if (str === void 0) {\n      str = '';\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, MorseData_1.MorseData.instance, category) || this;\n\n    _this._morse = str;\n    return _this;\n  }\n\n  MorseCharacter.toMorseString = function (encoding) {\n    var morseChars = '';\n\n    while (encoding !== MorseEncoding_1.MorseEncoding.None) {\n      if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dot) {\n        morseChars += MorseCharacter.DOT;\n      } else if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dash) {\n        morseChars += MorseCharacter.DASH;\n      } else {\n        throw new Error('Invalid morse bits');\n      }\n\n      encoding >>>= 2;\n    }\n\n    return morseChars;\n  };\n\n  MorseCharacter.parseMorseString = function (morse) {\n    var bits = MorseEncoding_1.MorseEncoding.None;\n\n    for (var i = morse.length - 1; i >= 0; i--) {\n      var ch = morse[i];\n\n      if (ch === MorseCharacter.DOT) {\n        bits |= MorseEncoding_1.MorseEncoding.Dot;\n      } else if (ch === MorseCharacter.DASH) {\n        bits |= MorseEncoding_1.MorseEncoding.Dash;\n      } else {\n        throw new Error('Invalid morse character');\n      }\n\n      bits <<= 2;\n    }\n\n    bits >>>= 2;\n    return bits;\n  };\n\n  Object.defineProperty(MorseCharacter.prototype, \"morseString\", {\n    get: function get() {\n      return this._morse;\n    },\n    set: function set(value) {\n      this._morse = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MorseCharacter.prototype.backspace = function () {\n    if (this._morse.length > 0) {\n      this._morse = this._morse.substring(0, this._morse.length - 1);\n      this.invalidateLookup();\n    }\n  };\n\n  MorseCharacter.prototype.dot = function () {\n    this._morse += MorseCharacter.DOT;\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.dash = function () {\n    this._morse += MorseCharacter.DASH;\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.invertDotsAndDashes = function () {\n    // Replace dots with a placeholder, dashes with dots, then placeholders with dashes\n    Helpers_1.Helpers.assert(this._morse.indexOf(MorseCharacter.RESERVED_DIVIDER) < 0);\n    this._morse = this._morse.replace(/\\./g, 'A').replace(/-/g, MorseCharacter.DOT).replace(/A/g, MorseCharacter.DASH);\n  };\n\n  MorseCharacter.prototype.reverse = function () {\n    this._morse = this._morse.split('').reverse().join('');\n  };\n\n  MorseCharacter.prototype.onClear = function () {\n    this._morse = '';\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.onEmpty = function () {\n    return this._morse.length === 0;\n  };\n\n  MorseCharacter.prototype.getEncoding = function () {\n    return MorseCharacter.parseMorseString(this._morse);\n  };\n\n  MorseCharacter.DOT = '.';\n  MorseCharacter.DASH = '-'; // Character which may not appear in morse and is reserved for use by this class\n\n  MorseCharacter.RESERVED_DIVIDER = 'A';\n  return MorseCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.MorseCharacter = MorseCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Helpers =\n/** @class */\nfunction () {\n  function Helpers() {}\n\n  Helpers.assert = function (condition) {\n    if (!condition) {\n      throw new Error();\n    }\n  };\n\n  Helpers.assertMsg = function (condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  };\n\n  return Helpers;\n}();\n\nexports.Helpers = Helpers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter =\n/** @class */\nfunction () {\n  function NatoCharacter(character, word) {\n    this.character = character;\n    this.word = word;\n  }\n\n  return NatoCharacter;\n}();\n\nexports.NatoCharacter = NatoCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry =\n/** @class */\nfunction () {\n  function ResistorColorEntry(name, colorCode, multiplier, value, toleranceInPercent) {\n    this.name = name;\n    this.value = value;\n    this.colorCode = colorCode;\n    this.multiplier = multiplier;\n    this.toleranceInPercent = toleranceInPercent;\n  }\n\n  ResistorColorEntry.prototype.hasValue = function () {\n    return this.value !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayValue = function () {\n    if (this.value === undefined) {\n      return '';\n    }\n\n    return this.value.toString();\n  };\n\n  ResistorColorEntry.prototype.hasTolerance = function () {\n    return this.toleranceInPercent !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayTolerance = function () {\n    if (this.toleranceInPercent === undefined) {\n      return '';\n    }\n\n    return this.toleranceInPercent + \"%\";\n  };\n\n  return ResistorColorEntry;\n}();\n\nexports.ResistorColorEntry = ResistorColorEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreEncoding;\n\n(function (SemaphoreEncoding) {\n  SemaphoreEncoding[SemaphoreEncoding[\"None\"] = 0] = \"None\"; // Letters\n\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterA\"] = 96] = \"LetterA\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterB\"] = 160] = \"LetterB\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterC\"] = 288] = \"LetterC\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterD\"] = 34] = \"LetterD\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterE\"] = 36] = \"LetterE\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterF\"] = 40] = \"LetterF\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterG\"] = 48] = \"LetterG\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterH\"] = 192] = \"LetterH\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterI\"] = 320] = \"LetterI\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterJ\"] = 10] = \"LetterJ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterK\"] = 66] = \"LetterK\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterL\"] = 68] = \"LetterL\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterM\"] = 72] = \"LetterM\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterN\"] = 80] = \"LetterN\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterO\"] = 384] = \"LetterO\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterP\"] = 130] = \"LetterP\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterQ\"] = 132] = \"LetterQ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterR\"] = 136] = \"LetterR\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterS\"] = 144] = \"LetterS\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterT\"] = 258] = \"LetterT\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterU\"] = 260] = \"LetterU\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterV\"] = 18] = \"LetterV\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterW\"] = 12] = \"LetterW\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterX\"] = 20] = \"LetterX\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterY\"] = 264] = \"LetterY\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterZ\"] = 24] = \"LetterZ\"; // Numbers\n\n  SemaphoreEncoding[SemaphoreEncoding[\"Number1\"] = 96] = \"Number1\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number2\"] = 160] = \"Number2\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number3\"] = 288] = \"Number3\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number4\"] = 34] = \"Number4\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number5\"] = 36] = \"Number5\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number6\"] = 40] = \"Number6\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number7\"] = 48] = \"Number7\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number8\"] = 192] = \"Number8\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number9\"] = 320] = \"Number9\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number0\"] = 66] = \"Number0\"; // Formatting\n\n  SemaphoreEncoding[SemaphoreEncoding[\"FormattingNumber\"] = 6] = \"FormattingNumber\";\n})(SemaphoreEncoding = exports.SemaphoreEncoding || (exports.SemaphoreEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SemaphoreDirection_1 = require(\"./SemaphoreDirection\");\n\nvar SemaphoreDegrees =\n/** @class */\nfunction () {\n  function SemaphoreDegrees() {}\n\n  SemaphoreDegrees.FromDegrees = function (degrees) {\n    if (degrees >= 360) {\n      degrees = degrees % 360;\n    }\n\n    if (degrees % 45 !== 0 || degrees < 0) {\n      throw new Error('Invalid degrees');\n    }\n\n    var position = degrees / 45;\n    return SemaphoreDirection_1.SemaphoreDirection.North << position;\n  };\n\n  SemaphoreDegrees.ToDegrees = function (direction) {\n    var position = SemaphoreDirection_1.SemaphoreDirection.North;\n    var counter = 0;\n\n    while (counter < 9 && position !== direction) {\n      position = position << 1;\n      counter++;\n    }\n\n    return counter * 45;\n  };\n\n  return SemaphoreDegrees;\n}();\n\nexports.SemaphoreDegrees = SemaphoreDegrees;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreDirection;\n\n(function (SemaphoreDirection) {\n  SemaphoreDirection[SemaphoreDirection[\"None\"] = 0] = \"None\";\n  SemaphoreDirection[SemaphoreDirection[\"North\"] = 2] = \"North\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthEast\"] = 4] = \"NorthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"East\"] = 8] = \"East\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthEast\"] = 16] = \"SouthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"South\"] = 32] = \"South\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthWest\"] = 64] = \"SouthWest\";\n  SemaphoreDirection[SemaphoreDirection[\"West\"] = 128] = \"West\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthWest\"] = 256] = \"NorthWest\";\n})(SemaphoreDirection = exports.SemaphoreDirection || (exports.SemaphoreDirection = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Result =\n/** @class */\nfunction () {\n  function Result(word, wordPoints) {\n    this.word = word;\n    this.points = Array.from(wordPoints);\n  }\n\n  return Result;\n}();\n\nexports.Result = Result;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = append;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction append(trie, letter, index, array) {\n  var isEndWordLetter = letter === _config2.default.END_WORD;\n  var isLastLetter = index === array.length - 1;\n\n  if (isEndWordLetter && !isLastLetter) {\n    trie[_config2.default.END_WORD] = 1;\n    trie[_config2.default.END_WORD_REPLACER] = {};\n    trie = trie[_config2.default.END_WORD_REPLACER];\n  } else {\n    trie[letter] = trie[letter] || {};\n    trie = trie[letter];\n  }\n\n  if (isLastLetter) {\n    trie[_config2.default.END_WORD] = 1;\n  }\n\n  return trie;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  objectCopy: function objectCopy(obj) {\n    if (typeof obj === 'undefined') {\n      return {};\n    }\n\n    return JSON.parse(JSON.stringify(obj));\n  },\n  stringify: function stringify(obj) {\n    var spacer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    if (typeof obj === 'undefined') {\n      return '';\n    }\n\n    return JSON.stringify(obj, null, spacer);\n  }\n};\nmodule.exports = exports['default'];","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleCharacter =\n/** @class */\nfunction (_super) {\n  __extends(BrailleCharacter, _super);\n\n  function BrailleCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = BrailleEncoding_1.BrailleEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, BrailleData_1.BrailleData.instance, category) || this;\n\n    _this._encoding = encoding;\n    return _this;\n  }\n\n  Object.defineProperty(BrailleCharacter.prototype, \"encoding\", {\n    get: function get() {\n      return this._encoding;\n    },\n    set: function set(value) {\n      this._encoding = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleCharacter.prototype.get = function (mask) {\n    return (this._encoding & mask) === mask;\n  };\n\n  BrailleCharacter.prototype.toggle = function (mask) {\n    this._encoding ^= mask;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onClear = function () {\n    this._encoding = BrailleEncoding_1.BrailleEncoding.None;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onEmpty = function () {\n    return this._encoding === BrailleEncoding_1.BrailleEncoding.None;\n  };\n\n  BrailleCharacter.prototype.getEncoding = function () {\n    return this._encoding;\n  };\n\n  return BrailleCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.BrailleCharacter = BrailleCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingLookupResult =\n/** @class */\nfunction () {\n  function EncodingLookupResult() {\n    this.exact = [];\n    this.partial = [];\n  }\n\n  Object.defineProperty(EncodingLookupResult.prototype, \"exactString\", {\n    get: function get() {\n      return this.exact.map(function (value) {\n        return value.toString();\n      }).join('/');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return EncodingLookupResult;\n}();\n\nexports.EncodingLookupResult = EncodingLookupResult;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleDot;\n\n(function (BrailleDot) {\n  BrailleDot[BrailleDot[\"None\"] = 0] = \"None\";\n  BrailleDot[BrailleDot[\"UpperLeft\"] = 1] = \"UpperLeft\";\n  BrailleDot[BrailleDot[\"MiddleLeft\"] = 2] = \"MiddleLeft\";\n  BrailleDot[BrailleDot[\"LowerLeft\"] = 4] = \"LowerLeft\";\n  BrailleDot[BrailleDot[\"UpperRight\"] = 8] = \"UpperRight\";\n  BrailleDot[BrailleDot[\"MiddleRight\"] = 16] = \"MiddleRight\";\n  BrailleDot[BrailleDot[\"LowerRight\"] = 32] = \"LowerRight\";\n})(BrailleDot = exports.BrailleDot || (exports.BrailleDot = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleStream =\n/** @class */\nfunction () {\n  function BrailleStream() {\n    this._chars = [];\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n    this.invalidate();\n  }\n\n  Object.defineProperty(BrailleStream.prototype, \"chars\", {\n    get: function get() {\n      return this._chars;\n    },\n    set: function set(value) {\n      this.clear();\n\n      for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n        var ch = value_1[_i];\n\n        this._chars.push(ch);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleStream.prototype.append = function (ch) {\n    this._chars.push(ch.valueOf());\n  };\n\n  BrailleStream.prototype.clear = function () {\n    this._chars.length = 0;\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.backspace = function () {\n    this._chars.pop();\n\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.space = function () {\n    this._chars.push(BrailleEncoding_1.BrailleEncoding.None);\n  };\n\n  BrailleStream.prototype.toString = function () {\n    this.update();\n    return this._currentStr;\n  };\n\n  BrailleStream.prototype.invalidate = function () {\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n  };\n\n  BrailleStream.prototype.update = function () {\n    while (this._processPosition < this._chars.length) {\n      var ch = this._chars[this._processPosition];\n\n      switch (ch) {\n        case BrailleEncoding_1.BrailleEncoding.None:\n          this._numberMode = false;\n          this._currentStr += ' ';\n          break;\n\n        case BrailleEncoding_1.BrailleEncoding.FormattingNumber:\n          this._numberMode = true;\n          this._currentStr += '#';\n          break;\n\n        default:\n          var category = EncodingCategory_1.EncodingCategory.Punctuation | (this._numberMode ? EncodingCategory_1.EncodingCategory.Number : EncodingCategory_1.EncodingCategory.Letter);\n          var exact = BrailleData_1.BrailleData.instance.lookup(ch, category).exact;\n\n          if (exact.length > 0) {\n            this._currentStr += exact[0].toString();\n          }\n\n      }\n\n      this._processPosition++;\n    }\n  };\n\n  return BrailleStream;\n}();\n\nexports.BrailleStream = BrailleStream;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar AutoKeyString =\n/** @class */\nfunction (_super) {\n  __extends(AutoKeyString, _super);\n\n  function AutoKeyString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AutoKeyString.prototype.convert = function (decrypt) {\n    if (this._key.length < 1) {\n      return this._text;\n    } else {\n      var rotStr = [];\n      var keyIndex = 0;\n      var fullKey = this._key;\n\n      for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n        var ch = _a[_i];\n\n        if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n          var currentLetter = CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, fullKey, keyIndex++, decrypt);\n          rotStr.push(currentLetter);\n\n          if (decrypt) {\n            fullKey += currentLetter;\n          } else {\n            fullKey += ch;\n          }\n        } else {\n          rotStr.push(ch);\n        }\n      }\n\n      return rotStr.join('');\n    }\n  };\n\n  return AutoKeyString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.AutoKeyString = AutoKeyString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar CaesarString =\n/** @class */\nfunction () {\n  function CaesarString(text) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    this._text = text;\n  }\n\n  Object.defineProperty(CaesarString.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CaesarString.prototype.getRotation = function (rot) {\n    var rotStr = [];\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n      rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetter(ch, rot));\n    }\n\n    return rotStr.join('');\n  };\n\n  CaesarString.prototype.getRotations = function () {\n    var rotations = [];\n    rotations.push(this._text);\n\n    for (var i = 1; i < 26; i++) {\n      rotations.push(this.getRotation(i));\n    }\n\n    return rotations;\n  };\n\n  return CaesarString;\n}();\n\nexports.CaesarString = CaesarString;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar VigenereString =\n/** @class */\nfunction (_super) {\n  __extends(VigenereString, _super);\n\n  function VigenereString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  VigenereString.prototype.convert = function (decrypt) {\n    var rotStr = [];\n    var keyIndex = 0;\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n        rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, this._key, keyIndex++, decrypt));\n      } else {\n        rotStr.push(ch);\n      }\n    }\n\n    return rotStr.join('');\n  };\n\n  return VigenereString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.VigenereString = VigenereString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SignificantFigures =\n/** @class */\nfunction () {\n  function SignificantFigures() {}\n\n  SignificantFigures.ceil = function (num, sigFigs) {\n    return this.roundInternal(Math.ceil, num, sigFigs);\n  };\n\n  SignificantFigures.floor = function (num, sigFigs) {\n    return this.roundInternal(Math.floor, num, sigFigs);\n  };\n\n  SignificantFigures.round = function (num, sigFigs) {\n    return this.roundInternal(Math.round, num, sigFigs);\n  };\n\n  SignificantFigures.roundInternal = function (func, num, sigFigs) {\n    if (num === 0) {\n      return num;\n    }\n\n    if (sigFigs <= 0) {\n      throw new RangeError('sigFigs value must be positive');\n    }\n\n    var factor = this.getFactor(num, sigFigs);\n\n    if (factor > 0) {\n      return func(num / factor) * factor;\n    } else if (factor < 0) {\n      var absFactor = Math.abs(factor);\n      return func(num * absFactor) / absFactor;\n    } else {\n      return num;\n    }\n  };\n\n  SignificantFigures.getFactor = function (num, sigFigs) {\n    var absNum = Math.abs(num);\n    var digits = 0;\n\n    if (absNum < 1) {\n      digits = -sigFigs;\n    } else {\n      digits = Math.ceil(Math.log(absNum) / Math.log(10)) - sigFigs;\n    }\n\n    if (digits < 0) {\n      return -Math.pow(10, Math.abs(digits));\n    } else {\n      return Math.pow(10, digits);\n    }\n  };\n\n  return SignificantFigures;\n}();\n\nexports.SignificantFigures = SignificantFigures;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterAutoConvert_1 = require(\"./CharacterAutoConvert\");\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar StringAutoConvert =\n/** @class */\nfunction () {\n  function StringAutoConvert() {}\n\n  StringAutoConvert.convertString = function (input, homogeneous) {\n    var split = this.splitString(input);\n\n    if (homogeneous) {\n      var encoding_1 = this.determineStringEncoding(input);\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter, encoding_1);\n      }, '');\n    } else {\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter);\n      }, '');\n    }\n  };\n\n  StringAutoConvert.determineStringEncoding = function (input) {\n    var encodingCount = {};\n    var parsed = this.splitString(input);\n    var encodingKeys = [];\n\n    for (var _i = 0, parsed_1 = parsed; _i < parsed_1.length; _i++) {\n      var letter = parsed_1[_i];\n      var charEncoding = CharacterAutoConvert_1.CharacterAutoConvert.determineCharacterEncoding(letter);\n\n      if (!encodingCount[charEncoding]) {\n        encodingCount[charEncoding] = 1;\n        encodingKeys.push(charEncoding);\n      } else {\n        encodingCount[charEncoding] = encodingCount[charEncoding] + 1;\n      }\n    }\n\n    var maxCount = 0;\n    var maxEncoding;\n    maxEncoding = CharacterEncoding_1.CharacterEncoding.None;\n\n    for (var _a = 0, encodingKeys_1 = encodingKeys; _a < encodingKeys_1.length; _a++) {\n      var encoding = encodingKeys_1[_a];\n\n      if (encodingCount[encoding] > maxCount) {\n        maxCount = encodingCount[encoding];\n        maxEncoding = encoding;\n      }\n    }\n\n    return maxEncoding;\n  };\n\n  StringAutoConvert.splitString = function (input) {\n    return input.split(' ').filter(function (item) {\n      return item !== '';\n    });\n  };\n\n  return StringAutoConvert;\n}();\n\nexports.StringAutoConvert = StringAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MorseData =\n/** @class */\nfunction (_super) {\n  __extends(MorseData, _super);\n\n  function MorseData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9'); // Punctuation\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPeriod, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationForwardSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationOpenParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationCloseParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAmpersand, EncodingCategory_1.EncodingCategory.Punctuation, '&');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDoubleDash, EncodingCategory_1.EncodingCategory.Punctuation, '=');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPlusSign, EncodingCategory_1.EncodingCategory.Punctuation, '+');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationUnderscore, EncodingCategory_1.EncodingCategory.Punctuation, '_');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuotationMark, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDollarSign, EncodingCategory_1.EncodingCategory.Punctuation, '$');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAtSign, EncodingCategory_1.EncodingCategory.Punctuation, '@');\n\n    return _this;\n  }\n\n  MorseData.instance = new MorseData();\n  return MorseData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.MorseData = MorseData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Helpers_1 = require(\"../Common/Helpers\");\n\nvar MorseCharacter_1 = require(\"./MorseCharacter\"); // MorseString represents a string of multiple morse characters.  It allows for a longer representation\n// to be converted to a single string and allows for sentence-level transforms such as reversing\n// the order of tokens.\n\n\nvar MorseString =\n/** @class */\nfunction () {\n  function MorseString(morse, characterDivider, wordDivider) {\n    if (morse === void 0) {\n      morse = '';\n    }\n\n    if (characterDivider === void 0) {\n      characterDivider = MorseString.CHARACTER_DIVIDER;\n    }\n\n    if (wordDivider === void 0) {\n      wordDivider = MorseString.WORD_DIVIDER;\n    } // The dividers should be single characters which don't clash with the other string content\n\n\n    Helpers_1.Helpers.assertMsg(characterDivider.length === 1, 'Divider must be a single character');\n    Helpers_1.Helpers.assertMsg(wordDivider.length === 1, 'Divider must be a single character');\n    Helpers_1.Helpers.assertMsg(characterDivider !== wordDivider, 'Dividers must be different from each other');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Word divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Word divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Word divider must not be a reserved value');\n    var words = morse.split(wordDivider).filter(function (w) {\n      return w.length > 0;\n    }); // Discard any empty characters (caused by trailing separator)\n\n    var wordCharacters = words.map(function (w) {\n      return w.split(characterDivider).filter(function (wc) {\n        return wc.length > 0;\n      });\n    });\n    this._words = wordCharacters.map(function (subarray) {\n      return subarray.map(function (wc) {\n        return new MorseCharacter_1.MorseCharacter(wc);\n      });\n    });\n  } // reverse reverses the order of all tokens in the string (including separators), such as would be\n  // the case if you were reading the data for a puzzle backwards.\n\n\n  MorseString.prototype.reverse = function () {\n    for (var i = 0; i < this._words.length; i++) {\n      for (var _i = 0, _a = this._words[i]; _i < _a.length; _i++) {\n        var c = _a[_i]; // Reverse the dots/dashes in each letter\n\n        c.reverse();\n      } // Reverse the letters in each word\n\n\n      this._words[i] = this._words[i].reverse();\n    } // Reverse the order of the words\n\n\n    this._words = this._words.reverse();\n    return this;\n  }; // invertDotsAndDashes switches all dots and dashes in the input, such as would be the case if\n  // you had two ambiguous symbols for dot/dash and selected the wrong mapping.\n\n\n  MorseString.prototype.invertDotsAndDashes = function () {\n    for (var _i = 0, _a = this._words; _i < _a.length; _i++) {\n      var word = _a[_i];\n\n      for (var _b = 0, word_1 = word; _b < word_1.length; _b++) {\n        var c = word_1[_b];\n        c.invertDotsAndDashes();\n      }\n    }\n\n    return this;\n  };\n\n  MorseString.prototype.toString = function () {\n    var s = '';\n\n    for (var i = 0; i < this._words.length; i++) {\n      if (i > 0) {\n        s += ' '; // This is a new word\n      }\n\n      for (var _i = 0, _a = this._words[i]; _i < _a.length; _i++) {\n        var c = _a[_i];\n        s += c.toString() || '?';\n      }\n    }\n\n    return s;\n  };\n\n  MorseString.CHARACTER_DIVIDER = '/';\n  MorseString.WORD_DIVIDER = ' ';\n  return MorseString;\n}();\n\nexports.MorseString = MorseString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter_1 = require(\"./NatoCharacter\"); // There's no concept of a 'partial match' for a NATO letter, so there's no\n// reason to derive from EncodingDataBase.\n\n\nvar NatoData =\n/** @class */\nfunction () {\n  function NatoData() {\n    this._entries = [new NatoCharacter_1.NatoCharacter('A', 'Alfa'), new NatoCharacter_1.NatoCharacter('B', 'Bravo'), new NatoCharacter_1.NatoCharacter('C', 'Charlie'), new NatoCharacter_1.NatoCharacter('D', 'Delta'), new NatoCharacter_1.NatoCharacter('E', 'Echo'), new NatoCharacter_1.NatoCharacter('F', 'Foxtrot'), new NatoCharacter_1.NatoCharacter('G', 'Golf'), new NatoCharacter_1.NatoCharacter('H', 'Hotel'), new NatoCharacter_1.NatoCharacter('I', 'India'), new NatoCharacter_1.NatoCharacter('J', 'Juliet'), new NatoCharacter_1.NatoCharacter('K', 'Kilo'), new NatoCharacter_1.NatoCharacter('L', 'Lima'), new NatoCharacter_1.NatoCharacter('M', 'Mike'), new NatoCharacter_1.NatoCharacter('N', 'November'), new NatoCharacter_1.NatoCharacter('O', 'Oscar'), new NatoCharacter_1.NatoCharacter('P', 'Papa'), new NatoCharacter_1.NatoCharacter('Q', 'Quebec'), new NatoCharacter_1.NatoCharacter('R', 'Romeo'), new NatoCharacter_1.NatoCharacter('S', 'Sierra'), new NatoCharacter_1.NatoCharacter('T', 'Tango'), new NatoCharacter_1.NatoCharacter('U', 'Uniform'), new NatoCharacter_1.NatoCharacter('V', 'Victor'), new NatoCharacter_1.NatoCharacter('W', 'Whiskey'), new NatoCharacter_1.NatoCharacter('X', 'X-ray'), new NatoCharacter_1.NatoCharacter('Y', 'Yankee'), new NatoCharacter_1.NatoCharacter('Z', 'Zulu')];\n  }\n\n  Object.defineProperty(NatoData.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NatoData.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NatoData.instance = new NatoData();\n  return NatoData;\n}();\n\nexports.NatoData = NatoData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage_1 = require(\"../Common/CharacterImage\");\n\nvar InlineSvg_1 = require(\"../Common/InlineSvg\");\n\nvar NavalFlags =\n/** @class */\nfunction () {\n  function NavalFlags() {\n    this._entries = [// tslint:disable:max-line-length (SVG images are messy)\n    new CharacterImage_1.CharacterImage('A', new InlineSvg_1.InlineSvg(\"<path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('B', new InlineSvg_1.InlineSvg('<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#f00\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>', 180, 180)), new CharacterImage_1.CharacterImage('C', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"46.8\\\" width=\\\"144\\\" height=\\\"86.4\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"75.6\\\" width=\\\"144\\\" height=\\\"28.8\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('D', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"54\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('E', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"90\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('F', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 l 72,72 l -72,72 l -72,-72 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('G', new InlineSvg_1.InlineSvg(\"<path fill=\\\"#000094\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#FC0\\\" stroke-width=\\\"24\\\" d=\\\"m30,18v144m48,0V18m48,0v144\\\"/>\\n      <path d=\\\"M18,18H162V162H18z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('H', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('I', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <circle cx=\\\"90\\\" cy=\\\"90\\\" r=\\\"36\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('J', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"66\\\" width=\\\"144\\\" height=\\\"48\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('K', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('L', new InlineSvg_1.InlineSvg(\"<rect x=\\\"16\\\" y=\\\"16\\\" width=\\\"148\\\" height=\\\"148\\\" rx=\\\"2\\\"/>\\n      <path fill=\\\"#FC0\\\" d=\\\"m20,20h70v140h70V90H20\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('M', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#fff\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('N', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 54 V 162 H 90 V 18 H 126 V 162 H 162 V 126 H 18 V 90 H 162 V 54 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('O', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('P', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Q', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('R', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#fc0\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('S', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('T', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"96\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"48\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('U', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#ffffff\\\"/>\\n      <path d=\\\"M 18,18 H 90 V 90 H 18 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 162,91 H 91 V 162 H 162 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('V', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#f00\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('W', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"42\\\" y=\\\"42\\\" width=\\\"96\\\" height=\\\"96\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"66\\\" y=\\\"66\\\" width=\\\"48\\\" height=\\\"48\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('X', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#000094\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Y', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\"><path d=\\\"m18,18h144v144H18\\\"/></clipPath>\\n      <path fill=\\\"#FC0\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#F00\\\" stroke-dasharray=\\\"18.8\\\" stroke-width=\\\"250\\\" clip-path=\\\"url(#c)\\\" d=\\\"m4,4 160,160\\\"/>\\n      <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\" d=\\\"M18,18H162V162H18z\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Z', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 V 162 H 162 z\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 162,18 V 162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 90,90 L 162,162 H 18 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180))];\n  }\n\n  Object.defineProperty(NavalFlags.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NavalFlags.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NavalFlags.instance = new NavalFlags();\n  return NavalFlags;\n}();\n\nexports.NavalFlags = NavalFlags;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry_1 = require(\"./ResistorColorEntry\");\n\nvar Resistor =\n/** @class */\nfunction () {\n  function Resistor() {}\n  /**\n   * getValue assumes there is no tolerance band, as tolerance is not part of\n   * the value calculation\n   */\n\n\n  Resistor.getValue = function (colors) {\n    if (colors.length < 3 || colors.length > 4) {\n      throw new RangeError('Invalid resistor size');\n    } // Should we throw an error if the first color is black?  In resistors, it's\n    // technically not allowed, but in puzzle events who knows what they'll do.\n    // The math works out fine (it's just a leading zero), so for now it's\n    // allowed.\n    // Iterate through all but the final band (the multipler) and extract the\n    // values\n\n\n    var value = 0;\n\n    for (var i = 0; i < colors.length - 1; ++i) {\n      var currentColor = colors[i];\n\n      if (currentColor.value === undefined) {\n        return Resistor.INVALID_RESISTOR;\n      }\n\n      value *= 10;\n      value += currentColor.value;\n    }\n\n    return Resistor.applyMultiplier(value, colors[colors.length - 1].multiplier);\n  };\n\n  Resistor.getDisplayValue = function (value) {\n    if (value >= 1000000000) {\n      return value / 1000000000 + \"G\";\n    } else if (value >= 1000000) {\n      return value / 1000000 + \"M\";\n    } else if (value >= 1000) {\n      return value / 1000 + \"k\";\n    } else {\n      return value.toString();\n    }\n  };\n\n  Resistor.applyMultiplier = function (value, multipler) {\n    if (multipler >= 1) {\n      return value * multipler;\n    } else if (multipler > 0) {\n      // Avoid floating point multiplication issues\n      return value / (1 / multipler);\n    } else {\n      throw new RangeError('Invalid multiplier');\n    }\n  }; // Name, Color, Multiplier, Value, Tolerance\n\n\n  Resistor.BLACK = new ResistorColorEntry_1.ResistorColorEntry('Black', '#000000', 1, 0);\n  Resistor.BROWN = new ResistorColorEntry_1.ResistorColorEntry('Brown', '#8B4513', 10, 1, 1);\n  Resistor.RED = new ResistorColorEntry_1.ResistorColorEntry('Red', '#FF0000', 100, 2, 2);\n  Resistor.ORANGE = new ResistorColorEntry_1.ResistorColorEntry('Orange', '#EE7420', 1000, 3);\n  Resistor.YELLOW = new ResistorColorEntry_1.ResistorColorEntry('Yellow', '#FFFF00', 10000, 4);\n  Resistor.GREEN = new ResistorColorEntry_1.ResistorColorEntry('Green', '#008000', 100000, 5, 0.5);\n  Resistor.BLUE = new ResistorColorEntry_1.ResistorColorEntry('Blue', '#0000FF', 1000000, 6, 0.25);\n  Resistor.VIOLET = new ResistorColorEntry_1.ResistorColorEntry('Violet', '#800080', 10000000, 7, 0.1);\n  Resistor.GREY = new ResistorColorEntry_1.ResistorColorEntry('Grey', '#808080', 100000000, 8);\n  Resistor.WHITE = new ResistorColorEntry_1.ResistorColorEntry('White', '#FFFFFF', 1000000000, 9);\n  Resistor.GOLD = new ResistorColorEntry_1.ResistorColorEntry('Gold', '#AB8D3F', 0.1, undefined, 5);\n  Resistor.SILVER = new ResistorColorEntry_1.ResistorColorEntry('Silver', '#C0C0C0', 0.01, undefined, 10);\n  Resistor.colorTable = [Resistor.BLACK, Resistor.BROWN, Resistor.RED, Resistor.ORANGE, Resistor.YELLOW, Resistor.GREEN, Resistor.BLUE, Resistor.VIOLET, Resistor.GREY, Resistor.WHITE, Resistor.GOLD, Resistor.SILVER];\n  Resistor.INVALID_RESISTOR = -1;\n  return Resistor;\n}();\n\nexports.Resistor = Resistor;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar SemaphoreData_1 = require(\"./SemaphoreData\");\n\nvar SemaphoreDegrees_1 = require(\"./SemaphoreDegrees\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreCharacter =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreCharacter, _super);\n\n  function SemaphoreCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = SemaphoreEncoding_1.SemaphoreEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, SemaphoreData_1.SemaphoreData.instance, category) || this;\n\n    _this._directions = [];\n\n    _this.addDirection(encoding);\n\n    return _this;\n  }\n\n  SemaphoreCharacter.parseEncoding = function (encoding) {\n    var directions = [];\n\n    for (var i = 1; i <= 8; i++) {\n      var direction = 1 << i;\n\n      if ((encoding & direction) === direction) {\n        directions.push(direction);\n      }\n    }\n\n    return directions;\n  };\n\n  Object.defineProperty(SemaphoreCharacter.prototype, \"directions\", {\n    get: function get() {\n      return this._directions;\n    },\n    set: function set(value) {\n      this._directions = value.slice(0, 2);\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SemaphoreCharacter.prototype.addDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      this._directions.push(dir);\n    }\n\n    if (this._directions.length > 2) {\n      this._directions.splice(0, this._directions.length - 2);\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.removeDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      var index = this._directions.indexOf(dir);\n\n      if (index >= 0) {\n        this._directions.splice(index, 1);\n      }\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.hasDirection = function (direction) {\n    return this._directions.indexOf(direction) >= 0;\n  };\n\n  SemaphoreCharacter.prototype.getDegrees = function () {\n    return this._directions.map(function (value) {\n      return SemaphoreDegrees_1.SemaphoreDegrees.ToDegrees(value);\n    }).sort(function (a, b) {\n      return a - b;\n    });\n  };\n\n  SemaphoreCharacter.prototype.getPotentialMatch = function (other) {\n    if (this.directions.length !== 1 || this.directions[0] === other) {\n      return null;\n    }\n\n    var potentialMatch = this.getPotentialMatches().filter(function (value) {\n      return (value.encoding & other) === other;\n    })[0];\n    return potentialMatch || null;\n  };\n\n  SemaphoreCharacter.prototype.onClear = function () {\n    this._directions.length = 0;\n  };\n\n  SemaphoreCharacter.prototype.onEmpty = function () {\n    return this._directions.length === 0;\n  };\n\n  SemaphoreCharacter.prototype.getEncoding = function () {\n    return this._directions.reduce(function (previousValue, currentValue) {\n      return previousValue |= currentValue;\n    }, SemaphoreEncoding_1.SemaphoreEncoding.None);\n  };\n\n  return SemaphoreCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.SemaphoreCharacter = SemaphoreCharacter;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreData =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreData, _super);\n\n  function SemaphoreData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0'); // Formatting\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    return _this;\n  }\n\n  SemaphoreData.instance = new SemaphoreData();\n  return SemaphoreData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.SemaphoreData = SemaphoreData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar trie = require(\"trie-prefix-tree\");\n\nvar Result_1 = require(\"./Result\");\n\nvar WordSearchSolver =\n/** @class */\nfunction () {\n  function WordSearchSolver(matrix) {\n    this._matrix = matrix;\n    this._directions = [// Cardinal directions\n    [0, 1], [-1, 0], [1, 0], [0, -1], // Diagonal\n    [1, 1], [-1, -1], [1, -1], [-1, 1]];\n    this._targets = trie([]);\n  }\n\n  WordSearchSolver.prototype.findWords = function (words) {\n    for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n      var full = words_1[_i];\n\n      if (full === null || typeof full === 'undefined') {\n        throw new Error('Invalid input in WordSearchSolver.findWords()');\n      }\n\n      var word = full.trim();\n\n      if (word !== '') {\n        this._targets.addWord(word);\n      } else {\n        throw new Error('Cannot find an empty string in the wordsearch');\n      }\n    }\n\n    return this.search();\n  };\n\n  WordSearchSolver.prototype.search = function () {\n    var results = [];\n    var numRows = this._matrix.length;\n\n    for (var yIdx = 0; yIdx < numRows; yIdx++) {\n      var lineLength = this._matrix[yIdx].length;\n\n      for (var xIdx = 0; xIdx < lineLength; xIdx++) {\n        var p = {\n          x: xIdx,\n          y: yIdx\n        };\n        var pointResults = this.startSearch(p);\n        results.push.apply(results, pointResults);\n      }\n    }\n\n    return results;\n  };\n\n  WordSearchSolver.prototype.startSearch = function (start) {\n    var results = [];\n\n    for (var _i = 0, _a = this._directions; _i < _a.length; _i++) {\n      var translation = _a[_i];\n      var directionalResults = this.checkDirection(start, translation);\n      results.push.apply(results, directionalResults);\n    }\n\n    return results;\n  };\n\n  WordSearchSolver.prototype.checkDirection = function (start, direction) {\n    var results = []; // Working set\n\n    var currentPoint = start;\n    var currentString = '';\n    var pointHistory = [];\n\n    while (this.isInBounds(currentPoint)) {\n      currentString = currentString + this._matrix[currentPoint.y][currentPoint.x]; // Get the candidates with the current prefix string\n\n      var wordsWithPrefix = this._targets.getPrefix(currentString); // No point in going on, we've run out of possibilities\n\n\n      if (wordsWithPrefix.length === 0) {\n        break;\n      }\n\n      var p = {\n        x: currentPoint.x,\n        y: currentPoint.y\n      };\n      pointHistory.push(p); // Is a candidate an exact match for the current search string? Save it.\n\n      if (wordsWithPrefix.indexOf(currentString) !== -1) {\n        var foundWord = new Result_1.Result(currentString, pointHistory);\n        results.push(foundWord);\n      }\n\n      var next = {\n        x: currentPoint.x + direction[0],\n        y: currentPoint.y + direction[1]\n      };\n      currentPoint = next;\n    }\n\n    return results;\n  };\n\n  WordSearchSolver.prototype.isInBounds = function (point) {\n    if (point.y < 0 || point.y >= this._matrix.length) {\n      return false;\n    }\n\n    if (point.x < 0 || point.x >= this._matrix[point.y].length) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return WordSearchSolver;\n}();\n\nexports.WordSearchSolver = WordSearchSolver;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = function (input) {\n  if (!Array.isArray(input)) {\n    throw 'Expected parameter Array, received ' + (typeof input === 'undefined' ? 'undefined' : _typeof(input));\n  }\n\n  var trie = (0, _create2.default)([].concat(_toConsumableArray(input)));\n  return {\n    /**\n     * Get the generated raw trie object\n    */\n    tree: function tree() {\n      return trie;\n    },\n\n    /**\n     * Get a string representation of the trie\n    */\n    dump: function dump() {\n      var spacer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return _utils2.default.stringify(trie, spacer);\n    },\n\n    /**\n     * Add a new word to the trie\n     */\n    addWord: function addWord(word) {\n      if (typeof word !== 'string' || word === '') {\n        throw 'Expected parameter string, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var reducer = function reducer() {\n        return _append2.default.apply(undefined, arguments);\n      };\n\n      var input = word.toLowerCase().split('');\n      input.reduce(reducer, trie);\n      return this;\n    },\n\n    /**\n     * Remove an existing word from the trie\n     */\n    removeWord: function removeWord(word) {\n      if (typeof word !== 'string' || word === '') {\n        throw 'Expected parameter string, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var _checkPrefix = (0, _checkPrefix6.default)(trie, word),\n          prefixFound = _checkPrefix.prefixFound,\n          prefixNode = _checkPrefix.prefixNode;\n\n      if (prefixFound) {\n        delete prefixNode[_config2.default.END_WORD];\n      }\n\n      return this;\n    },\n\n    /**\n     * Check a prefix is valid\n     * @returns Boolean\n    */\n    isPrefix: function isPrefix(prefix) {\n      if (typeof prefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof prefix === 'undefined' ? 'undefined' : _typeof(prefix));\n      }\n\n      var _checkPrefix2 = (0, _checkPrefix6.default)(trie, prefix),\n          prefixFound = _checkPrefix2.prefixFound;\n\n      return prefixFound;\n    },\n\n    /**\n    * Get a list of all words in the trie with the given prefix\n    * @returns Array\n    */\n    getPrefix: function getPrefix(strPrefix) {\n      var sorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (typeof strPrefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof strPrefix === 'undefined' ? 'undefined' : _typeof(strPrefix));\n      }\n\n      if (typeof sorted !== 'boolean') {\n        throw 'Expected sort parameter as boolean, received ' + (typeof sorted === 'undefined' ? 'undefined' : _typeof(sorted));\n      }\n\n      if (!this.isPrefix(strPrefix)) {\n        return [];\n      }\n\n      var prefixNode = strPrefix.length ? (0, _checkPrefix6.default)(trie, strPrefix).prefixNode : trie;\n      return (0, _recursePrefix2.default)(prefixNode, strPrefix, sorted);\n    },\n\n    /**\n    * Get a random word in the trie with the given prefix\n    * @returns Array\n    */\n    getRandomWordWithPrefix: function getRandomWordWithPrefix(strPrefix) {\n      if (typeof strPrefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof strPrefix === 'undefined' ? 'undefined' : _typeof(strPrefix));\n      }\n\n      if (!this.isPrefix(strPrefix)) {\n        return '';\n      }\n\n      var _checkPrefix3 = (0, _checkPrefix6.default)(trie, strPrefix),\n          prefixNode = _checkPrefix3.prefixNode;\n\n      return (0, _recurseRandomWord2.default)(prefixNode, strPrefix);\n    },\n\n    /**\n    * Count the number of words with the given prefixSearch\n    * @returns Number\n    */\n    countPrefix: function countPrefix(strPrefix) {\n      var prefixes = this.getPrefix(strPrefix);\n      return prefixes.length;\n    },\n\n    /**\n    * Get all words in the trie\n    * @returns Array\n    */\n    getWords: function getWords() {\n      var sorted = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.getPrefix('', sorted);\n    },\n\n    /**\n    * Check the existence of a word in the trie\n    * @returns Boolean\n    */\n    hasWord: function hasWord(word) {\n      if (typeof word !== 'string') {\n        throw 'Expected string word, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var _checkPrefix4 = (0, _checkPrefix6.default)(trie, word),\n          prefixFound = _checkPrefix4.prefixFound,\n          prefixNode = _checkPrefix4.prefixNode;\n\n      if (prefixFound) {\n        return prefixNode[_config2.default.END_WORD] === 1;\n      }\n\n      return false;\n    },\n\n    /**\n    * Get a list of valid anagrams that can be made from the given letters\n    * @returns Array\n    */\n    getAnagrams: function getAnagrams(letters) {\n      if (typeof letters !== 'string') {\n        throw 'Anagrams expected string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n      }\n\n      if (letters.length < PERMS_MIN_LEN) {\n        throw 'getAnagrams expects at least ' + PERMS_MIN_LEN + ' letters';\n      }\n\n      return (0, _permutations2.default)(letters, trie, {\n        type: 'anagram'\n      });\n    },\n\n    /**\n    * Get a list of all sub-anagrams that can be made from the given letters\n    * @returns Array\n    */\n    getSubAnagrams: function getSubAnagrams(letters) {\n      if (typeof letters !== 'string') {\n        throw 'Expected string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n      }\n\n      if (letters.length < PERMS_MIN_LEN) {\n        throw 'getSubAnagrams expects at least ' + PERMS_MIN_LEN + ' letters';\n      }\n\n      return (0, _permutations2.default)(letters, trie, {\n        type: 'sub-anagram'\n      });\n    }\n  };\n};\n\nvar _create = require('./create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _append = require('./append');\n\nvar _append2 = _interopRequireDefault(_append);\n\nvar _checkPrefix5 = require('./checkPrefix');\n\nvar _checkPrefix6 = _interopRequireDefault(_checkPrefix5);\n\nvar _recursePrefix = require('./recursePrefix');\n\nvar _recursePrefix2 = _interopRequireDefault(_recursePrefix);\n\nvar _recurseRandomWord = require('./recurseRandomWord');\n\nvar _recurseRandomWord2 = _interopRequireDefault(_recurseRandomWord);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _permutations = require('./permutations');\n\nvar _permutations2 = _interopRequireDefault(_permutations);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar PERMS_MIN_LEN = _config2.default.PERMS_MIN_LEN;\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = create;\n\nvar _append = require('./append');\n\nvar _append2 = _interopRequireDefault(_append);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction create(input) {\n  if (!Array.isArray(input)) {\n    throw 'Expected parameter Array, received ' + (typeof input === 'undefined' ? 'undefined' : _typeof(input));\n  }\n\n  var trie = input.reduce(function (accumulator, item) {\n    item.toLowerCase().split('').reduce(_append2.default, accumulator);\n    return accumulator;\n  }, {});\n  return trie;\n}\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkPrefix;\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction checkPrefix(prefixNode, prefix) {\n  var input = prefix.toLowerCase().split('');\n  var prefixFound = input.every(function (letter, index) {\n    if (!prefixNode[letter]) {\n      return false;\n    }\n\n    return prefixNode = prefixNode[letter];\n  });\n  return {\n    prefixFound: prefixFound,\n    prefixNode: prefixNode\n  };\n}\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recursePrefix;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // sort items as they're being found\n// to prevent slow .sort() in NodeJs\n\n\nvar pushInOrder = function pushInOrder(word, prefixes) {\n  var i = 0;\n\n  while (i < prefixes.length) {\n    if (word < prefixes[i]) {\n      break;\n    }\n\n    i += 1;\n  }\n\n  prefixes.splice(i, 0, word);\n  return prefixes;\n};\n\nfunction recursePrefix(node, prefix, sorted) {\n  var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var word = prefix;\n\n  for (var branch in node) {\n    var currentLetter = branch;\n\n    if (branch === _config2.default.END_WORD && typeof node[branch] === 'number') {\n      if (sorted) {\n        pushInOrder(word, prefixes);\n      } else {\n        prefixes.push(word);\n      }\n\n      word = '';\n    } else if (branch === _config2.default.END_WORD_REPLACER) {\n      currentLetter = _config2.default.END_WORD;\n    }\n\n    recursePrefix(node[branch], prefix + currentLetter, sorted, prefixes);\n  }\n\n  return prefixes;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recurseRandomWord;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction recurseRandomWord(node, prefix) {\n  var word = prefix;\n  var branches = Object.keys(node);\n  var branch = branches[Math.floor(Math.random() * branches.length)];\n\n  if (branch === _config2.default.END_WORD) {\n    return word;\n  }\n\n  return recurseRandomWord(node[branch], prefix + branch);\n}\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = permutations;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction permutations(letters, trie) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    type: 'anagram'\n  };\n\n  if (typeof letters !== 'string') {\n    throw 'Permutations expects string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n  }\n\n  var words = [];\n\n  var permute = function permute(word, node) {\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var wordIsEmpty = word.length === 0;\n    var wordFound = words.indexOf(prefix) !== -1;\n    var endWordFound = node[_config2.default.END_WORD] === 1;\n\n    if (wordIsEmpty && endWordFound && !wordFound) {\n      words.push(prefix);\n    }\n\n    for (var i = 0, len = word.length; i < len; i++) {\n      var letter = word[i];\n\n      if (opts.type === 'sub-anagram') {\n        if (endWordFound && !(words.indexOf(prefix) !== -1)) {\n          words.push(prefix);\n        }\n      }\n\n      if (node[letter]) {\n        var remaining = word.substring(0, i) + word.substring(i + 1, len);\n        permute(remaining, node[letter], prefix + letter, words);\n      }\n    }\n\n    return words.sort();\n  };\n\n  return permute(letters, trie);\n}\n\n;\nmodule.exports = exports['default'];"],"sourceRoot":""}
{"version":3,"sources":["Views/Reference/NavalFlagTable.tsx","../node_modules/puzzle-lib/build/src/Common/EncodingCategory.js","../node_modules/puzzle-lib/build/src/Braille/BrailleEncoding.js","../node_modules/puzzle-lib/build/src/Common/EncodingCharacterBase.js","../node_modules/puzzle-lib/build/src/Common/EncodingDataBase.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarUtils.js","../node_modules/puzzle-lib/build/src/Cipher/KeyedCipherStringBase.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterEncoding.js","../node_modules/puzzle-lib/build/src/Morse/MorseEncoding.js","../node_modules/puzzle-lib/build/src/Braille/BrailleData.js","../node_modules/puzzle-lib/build/src/Common/EncodingEntry.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterConversion.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterTableEntry.js","../node_modules/puzzle-lib/build/src/Common/CharacterImage.js","../node_modules/puzzle-lib/build/src/Common/InlineSvg.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterAutoConvert.js","../node_modules/puzzle-lib/build/src/Nato/NatoCharacter.js","../node_modules/puzzle-lib/build/src/Resistor/ResistorColorEntry.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreEncoding.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDegrees.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDirection.js","../node_modules/puzzle-lib/build/src/index.js","../node_modules/left-pad/index.js","../node_modules/puzzle-lib/build/src/Braille/BrailleCharacter.js","../node_modules/puzzle-lib/build/src/Common/EncodingLookupResult.js","../node_modules/puzzle-lib/build/src/Braille/BrailleDot.js","../node_modules/puzzle-lib/build/src/Braille/BrailleStream.js","../node_modules/puzzle-lib/build/src/Cipher/AutoKeyString.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarString.js","../node_modules/puzzle-lib/build/src/Cipher/VigenereString.js","../node_modules/puzzle-lib/build/src/Conversion/SignificantFigures.js","../node_modules/puzzle-lib/build/src/Conversion/StringAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseCharacter.js","../node_modules/puzzle-lib/build/src/Morse/MorseData.js","../node_modules/puzzle-lib/build/src/Nato/NatoData.js","../node_modules/puzzle-lib/build/src/NavalFlags/NavalFlags.js","../node_modules/puzzle-lib/build/src/Resistor/Resistor.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreCharacter.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreData.js","webpack:///./src/Views/Reference/NavalFlagTable.css?33ec","Views/Reference/NavalFlagTable.css"],"names":["NavalFlagTable","_super","__extends","prototype","render","__WEBPACK_IMPORTED_MODULE_0_react__","className","__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__","striped","responsive","this","renderRows","__WEBPACK_IMPORTED_MODULE_1_puzzle_lib__","instance","entries","data","map","value","dataUri","encodeURIComponent","image","key","character","src","__webpack_exports__","Object","defineProperty","exports","EncodingCategory","BrailleEncoding","EncodingCharacterBase","category","_lookup","_data","_category","invalidateLookup","get","set","enumerable","configurable","clear","onClear","empty","onEmpty","getExactMatches","ensureLookup","exact","getPotentialMatches","partial","toString","exactString","valid","length","valueOf","getEncoding","lookup","EncodingCategory_1","__webpack_require__","EncodingEntry_1","EncodingLookupResult_1","EncodingDataBase","_entries","encoding","All","result","EncodingLookupResult","_i","_a","entry","push","addToList","display","EncodingEntry","CharacterConversion_1","CaesarUtils","rotateLetter","ch","rot","Error","alphaLength","code","charCodeAt","base","isLowerAlpha","lowerA","isUpperAlpha","upperA","String","fromCharCode","rotateLetterWithKey","keyIndex","decrypt","keyCh","getCharacterWithMod","CharacterConversion","toOrdinal","isAlpha","str","index","charAt","upperZ","lowerZ","KeyedCipherStringBase","text","_text","_key","encrypt","convert","CharacterEncoding","packMorse","args","arguments","MorseEncoding","None","shift","args_1","arg","Dot","Dash","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","EncodingDataBase_1","BrailleEncoding_1","BrailleData","_this","call","LetterA","Letter","LetterB","LetterC","LetterD","LetterE","LetterF","LetterG","LetterH","LetterI","LetterJ","LetterK","LetterL","LetterM","LetterN","LetterO","LetterP","LetterQ","LetterR","LetterS","LetterT","LetterU","LetterV","LetterW","LetterX","LetterY","LetterZ","Number0","Number","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","FormattingNumber","Formatting","FormattingCapital","PunctuationComma","Punctuation","PunctuationSemicolon","PunctuationApostrophe","PunctuationColon","PunctuationHyphen","PunctuationDecimalPoint","PunctuationFullStop","PunctuationExclamationPoint","PunctuationOpenQuote","PunctuationQuestionMark","PunctuationCloseQuote","PunctuationBracket","PunctuationSlash","CharacterTableEntry_1","getAsciiTable","retVal","addAsciiRange","toAscii","getOrdinalTable","ascii","chCode","ordinalCode","array","start","end","conversion","maxValue","i","letter","CharacterTableEntry","leftPad","binary","getValue","ternary","octal","decimal","hexadecimal","Math","ceil","log","CharacterImage","InlineSvg","inlineSvg","viewBoxWidth","viewBoxHeight","CharacterEncoding_1","CharacterAutoConvert","convertCharacter","input","forcedCharacterEncoding","determineCharacterEncoding","Latin","baseTen","parseInt","Ascii","Ordinal","FiveBitBinary","appearsBinary","EightBitBinary","match","numeric","character_1","NatoCharacter","word","ResistorColorEntry","name","colorCode","multiplier","toleranceInPercent","hasValue","undefined","getDisplayValue","hasTolerance","getDisplayTolerance","SemaphoreEncoding","SemaphoreDirection_1","SemaphoreDegrees","FromDegrees","degrees","position","SemaphoreDirection","North","ToDegrees","direction","counter","BrailleCharacter_1","BrailleCharacter","BrailleDot_1","BrailleDot","BrailleStream_1","BrailleStream","AutoKeyString_1","AutoKeyString","CaesarString_1","CaesarString","KeyedCipherStringBase_1","VigenereString_1","VigenereString","CharacterImage_1","InlineSvg_1","CharacterAutoConvert_1","SignificantFigures_1","SignificantFigures","StringAutoConvert_1","StringAutoConvert","MorseCharacter_1","MorseCharacter","MorseEncoding_1","NatoCharacter_1","NatoData_1","NatoData","NavalFlags_1","NavalFlags","Resistor_1","Resistor","ResistorColorEntry_1","SemaphoreCharacter_1","SemaphoreCharacter","SemaphoreDegrees_1","module","len","cache","pad","EncodingCharacterBase_1","BrailleData_1","_encoding","mask","toggle","join","_chars","_currentStr","_processPosition","_numberMode","invalidate","value_1","append","backspace","pop","space","update","CaesarUtils_1","apply","rotStr","fullKey","currentLetter","getRotation","getRotations","rotations","num","sigFigs","roundInternal","floor","round","func","RangeError","factor","getFactor","absFactor","abs","absNum","digits","pow","convertString","homogeneous","split","splitString","encoding_1","determineStringEncoding","reduce","encodingCount","encodingKeys","parsed_1","charEncoding","maxEncoding","maxCount","encodingKeys_1","filter","item","MorseData_1","MORSE_BITMASK","MorseData","_morse","toMorseString","morseChars","parseMorseString","morse","bits","substring","dot","dash","PunctuationPeriod","PunctuationForwardSlash","PunctuationOpenParenthesis","PunctuationCloseParenthesis","PunctuationAmpersand","PunctuationDoubleDash","PunctuationPlusSign","PunctuationUnderscore","PunctuationQuotationMark","PunctuationDollarSign","PunctuationAtSign","toUpperCase","colors","currentColor","INVALID_RESISTOR","applyMultiplier","multipler","BLACK","BROWN","RED","ORANGE","YELLOW","GREEN","BLUE","VIOLET","GREY","WHITE","GOLD","SILVER","colorTable","SemaphoreData_1","SemaphoreEncoding_1","SemaphoreData","_directions","addDirection","parseEncoding","directions","slice","dir","splice","removeDirection","indexOf","hasDirection","getDegrees","sort","a","getPotentialMatch","other","previousValue","currentValue","content","options","hmr","transform","locals","version","sources","names","mappings","file","sourcesContent","sourceRoot"],"mappings":"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","file":"static/js/10.033a2d1f.chunk.js","sourcesContent":["import * as React from 'react';\nimport { NavalFlags, CharacterImage } from 'puzzle-lib';\nimport { Table } from 'react-bootstrap';\nimport './NavalFlagTable.css';\n\nclass NavalFlagTable extends React.Component {\n  public render() {\n    return (\n      <div className=\"NavalFlagsTable\">\n        <div className=\"NavalFlagsTable-content\">\n          <Table striped={true} responsive={true}>\n            <thead>\n              <tr>\n                <th>Letter</th>\n                <th>Flag</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderRows(NavalFlags.instance.entries)}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n\n  private renderRows(data: CharacterImage[]) {\n    return data.map((value: CharacterImage) => {\n      const dataUri = `data:image/svg+xml,${encodeURIComponent(value.image.render())}`;\n      return (\n        <tr key={value.character}>\n          <td className=\"flagCharacter\">{value.character}</td>\n          <td>\n            <img className=\"flagImage\" src={dataUri} />\n          </td>\n        </tr>\n      );\n    });\n  }\n}\n\nexport default NavalFlagTable;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Views/Reference/NavalFlagTable.tsx","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory;\n(function (EncodingCategory) {\n    EncodingCategory[EncodingCategory[\"None\"] = 0] = \"None\";\n    EncodingCategory[EncodingCategory[\"Letter\"] = 2] = \"Letter\";\n    EncodingCategory[EncodingCategory[\"Number\"] = 4] = \"Number\";\n    EncodingCategory[EncodingCategory[\"Formatting\"] = 8] = \"Formatting\";\n    EncodingCategory[EncodingCategory[\"Punctuation\"] = 16] = \"Punctuation\";\n    EncodingCategory[EncodingCategory[\"All\"] = 255] = \"All\";\n})(EncodingCategory = exports.EncodingCategory || (exports.EncodingCategory = {}));\n//# sourceMappingURL=EncodingCategory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/EncodingCategory.js\n// module id = 352\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrailleEncoding;\n(function (BrailleEncoding) {\n    BrailleEncoding[BrailleEncoding[\"None\"] = 0] = \"None\";\n    // Letters (first decade)\n    BrailleEncoding[BrailleEncoding[\"LetterA\"] = 1] = \"LetterA\";\n    BrailleEncoding[BrailleEncoding[\"LetterB\"] = 3] = \"LetterB\";\n    BrailleEncoding[BrailleEncoding[\"LetterC\"] = 9] = \"LetterC\";\n    BrailleEncoding[BrailleEncoding[\"LetterD\"] = 25] = \"LetterD\";\n    BrailleEncoding[BrailleEncoding[\"LetterE\"] = 17] = \"LetterE\";\n    BrailleEncoding[BrailleEncoding[\"LetterF\"] = 11] = \"LetterF\";\n    BrailleEncoding[BrailleEncoding[\"LetterG\"] = 27] = \"LetterG\";\n    BrailleEncoding[BrailleEncoding[\"LetterH\"] = 19] = \"LetterH\";\n    BrailleEncoding[BrailleEncoding[\"LetterI\"] = 10] = \"LetterI\";\n    BrailleEncoding[BrailleEncoding[\"LetterJ\"] = 26] = \"LetterJ\";\n    // Letters (second decade)\n    BrailleEncoding[BrailleEncoding[\"LetterK\"] = 5] = \"LetterK\";\n    BrailleEncoding[BrailleEncoding[\"LetterL\"] = 7] = \"LetterL\";\n    BrailleEncoding[BrailleEncoding[\"LetterM\"] = 13] = \"LetterM\";\n    BrailleEncoding[BrailleEncoding[\"LetterN\"] = 29] = \"LetterN\";\n    BrailleEncoding[BrailleEncoding[\"LetterO\"] = 21] = \"LetterO\";\n    BrailleEncoding[BrailleEncoding[\"LetterP\"] = 15] = \"LetterP\";\n    BrailleEncoding[BrailleEncoding[\"LetterQ\"] = 31] = \"LetterQ\";\n    BrailleEncoding[BrailleEncoding[\"LetterR\"] = 23] = \"LetterR\";\n    BrailleEncoding[BrailleEncoding[\"LetterS\"] = 14] = \"LetterS\";\n    BrailleEncoding[BrailleEncoding[\"LetterT\"] = 30] = \"LetterT\";\n    // Letters (third decade)\n    BrailleEncoding[BrailleEncoding[\"LetterU\"] = 37] = \"LetterU\";\n    BrailleEncoding[BrailleEncoding[\"LetterV\"] = 39] = \"LetterV\";\n    BrailleEncoding[BrailleEncoding[\"LetterX\"] = 45] = \"LetterX\";\n    BrailleEncoding[BrailleEncoding[\"LetterY\"] = 61] = \"LetterY\";\n    BrailleEncoding[BrailleEncoding[\"LetterZ\"] = 53] = \"LetterZ\";\n    // Letters (fourth decade)\n    BrailleEncoding[BrailleEncoding[\"LetterW\"] = 58] = \"LetterW\";\n    // Numbers\n    BrailleEncoding[BrailleEncoding[\"Number1\"] = 1] = \"Number1\";\n    BrailleEncoding[BrailleEncoding[\"Number2\"] = 3] = \"Number2\";\n    BrailleEncoding[BrailleEncoding[\"Number3\"] = 9] = \"Number3\";\n    BrailleEncoding[BrailleEncoding[\"Number4\"] = 25] = \"Number4\";\n    BrailleEncoding[BrailleEncoding[\"Number5\"] = 17] = \"Number5\";\n    BrailleEncoding[BrailleEncoding[\"Number6\"] = 11] = \"Number6\";\n    BrailleEncoding[BrailleEncoding[\"Number7\"] = 27] = \"Number7\";\n    BrailleEncoding[BrailleEncoding[\"Number8\"] = 19] = \"Number8\";\n    BrailleEncoding[BrailleEncoding[\"Number9\"] = 10] = \"Number9\";\n    BrailleEncoding[BrailleEncoding[\"Number0\"] = 26] = \"Number0\";\n    // Formatting\n    BrailleEncoding[BrailleEncoding[\"FormattingNumber\"] = 60] = \"FormattingNumber\";\n    BrailleEncoding[BrailleEncoding[\"FormattingCapital\"] = 32] = \"FormattingCapital\";\n    // Punctuation\n    BrailleEncoding[BrailleEncoding[\"PunctuationComma\"] = 2] = \"PunctuationComma\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationSemicolon\"] = 6] = \"PunctuationSemicolon\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationApostrophe\"] = 4] = \"PunctuationApostrophe\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationColon\"] = 18] = \"PunctuationColon\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationHyphen\"] = 36] = \"PunctuationHyphen\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationDecimalPoint\"] = 40] = \"PunctuationDecimalPoint\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationFullStop\"] = 50] = \"PunctuationFullStop\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationExclamationPoint\"] = 22] = \"PunctuationExclamationPoint\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationOpenQuote\"] = 38] = \"PunctuationOpenQuote\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationQuestionMark\"] = 38] = \"PunctuationQuestionMark\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationCloseQuote\"] = 52] = \"PunctuationCloseQuote\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationBracket\"] = 54] = \"PunctuationBracket\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationSlash\"] = 12] = \"PunctuationSlash\";\n})(BrailleEncoding = exports.BrailleEncoding || (exports.BrailleEncoding = {}));\n//# sourceMappingURL=BrailleEncoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Braille/BrailleEncoding.js\n// module id = 353\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCharacterBase = /** @class */ (function () {\n    function EncodingCharacterBase(data, category) {\n        this._lookup = null;\n        this._data = data;\n        this._category = category;\n        this.invalidateLookup();\n    }\n    Object.defineProperty(EncodingCharacterBase.prototype, \"category\", {\n        get: function () {\n            return this._category;\n        },\n        set: function (value) {\n            if (this._category !== value) {\n                this._category = value;\n                this.invalidateLookup();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EncodingCharacterBase.prototype.clear = function () {\n        this.onClear();\n        this.invalidateLookup();\n    };\n    EncodingCharacterBase.prototype.empty = function () {\n        return this.onEmpty();\n    };\n    EncodingCharacterBase.prototype.getExactMatches = function () {\n        return this.ensureLookup().exact;\n    };\n    EncodingCharacterBase.prototype.getPotentialMatches = function () {\n        return this.ensureLookup().partial;\n    };\n    EncodingCharacterBase.prototype.toString = function () {\n        return this.ensureLookup().exactString;\n    };\n    EncodingCharacterBase.prototype.valid = function () {\n        return this.ensureLookup().exact.length > 0;\n    };\n    EncodingCharacterBase.prototype.valueOf = function () {\n        return this.getEncoding();\n    };\n    EncodingCharacterBase.prototype.invalidateLookup = function () {\n        this._lookup = null;\n    };\n    EncodingCharacterBase.prototype.ensureLookup = function () {\n        if (!this._lookup) {\n            this._lookup = this._data.lookup(this.getEncoding(), this._category);\n        }\n        return this._lookup;\n    };\n    return EncodingCharacterBase;\n}());\nexports.EncodingCharacterBase = EncodingCharacterBase;\n//# sourceMappingURL=EncodingCharacterBase.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/EncodingCharacterBase.js\n// module id = 354\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"./EncodingCategory\");\nvar EncodingEntry_1 = require(\"./EncodingEntry\");\nvar EncodingLookupResult_1 = require(\"./EncodingLookupResult\");\nvar EncodingDataBase = /** @class */ (function () {\n    function EncodingDataBase() {\n        this._entries = [];\n    }\n    EncodingDataBase.prototype.lookup = function (encoding, category) {\n        if (category === void 0) { category = EncodingCategory_1.EncodingCategory.All; }\n        var result = new EncodingLookupResult_1.EncodingLookupResult();\n        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if ((entry.category & category) !== 0) {\n                if (entry.encoding === encoding) {\n                    result.exact.push(entry);\n                }\n                else if ((entry.encoding & encoding) === encoding) {\n                    result.partial.push(entry);\n                }\n            }\n        }\n        return result;\n    };\n    EncodingDataBase.prototype.addToList = function (encoding, category, display) {\n        this._entries.push(new EncodingEntry_1.EncodingEntry(encoding, category, display));\n    };\n    return EncodingDataBase;\n}());\nexports.EncodingDataBase = EncodingDataBase;\n//# sourceMappingURL=EncodingDataBase.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/EncodingDataBase.js\n// module id = 355\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterConversion_1 = require(\"../Conversion/CharacterConversion\");\nvar CaesarUtils = /** @class */ (function () {\n    function CaesarUtils() {\n    }\n    CaesarUtils.rotateLetter = function (ch, rot) {\n        if (ch.length !== 1) {\n            throw new Error('Expected a single character');\n        }\n        rot %= this.alphaLength;\n        if (rot < 0) {\n            rot += this.alphaLength;\n        }\n        var code = ch.charCodeAt(0);\n        var base = 0;\n        if (this.isLowerAlpha(code)) {\n            base = this.lowerA;\n        }\n        else if (this.isUpperAlpha(code)) {\n            base = this.upperA;\n        }\n        else {\n            return ch;\n        }\n        return String.fromCharCode((((code - base) + rot) % this.alphaLength) + base);\n    };\n    CaesarUtils.rotateLetterWithKey = function (ch, key, keyIndex, decrypt) {\n        if (decrypt === void 0) { decrypt = false; }\n        if (key.length === 0) {\n            return ch;\n        }\n        var keyCh = this.getCharacterWithMod(key, keyIndex);\n        var rot = CharacterConversion_1.CharacterConversion.toOrdinal(keyCh) - 1;\n        if (decrypt) {\n            rot = -rot;\n        }\n        return this.rotateLetter(ch, rot);\n    };\n    CaesarUtils.isAlpha = function (ch) {\n        var code = ch.charCodeAt(0);\n        return this.isUpperAlpha(code) || this.isLowerAlpha(code);\n    };\n    CaesarUtils.getCharacterWithMod = function (str, index) {\n        return str.charAt(index % str.length);\n    };\n    CaesarUtils.isUpperAlpha = function (code) {\n        return code >= this.upperA && code <= this.upperZ;\n    };\n    CaesarUtils.isLowerAlpha = function (code) {\n        return code >= this.lowerA && code <= this.lowerZ;\n    };\n    CaesarUtils.upperA = 'A'.charCodeAt(0);\n    CaesarUtils.upperZ = 'Z'.charCodeAt(0);\n    CaesarUtils.lowerA = 'a'.charCodeAt(0);\n    CaesarUtils.lowerZ = 'z'.charCodeAt(0);\n    CaesarUtils.alphaLength = 26;\n    return CaesarUtils;\n}());\nexports.CaesarUtils = CaesarUtils;\n//# sourceMappingURL=CaesarUtils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Cipher/CaesarUtils.js\n// module id = 356\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar KeyedCipherStringBase = /** @class */ (function () {\n    function KeyedCipherStringBase(text, key) {\n        if (text === void 0) { text = ''; }\n        if (key === void 0) { key = ''; }\n        this._text = text;\n        this._key = key;\n    }\n    Object.defineProperty(KeyedCipherStringBase.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            this._text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KeyedCipherStringBase.prototype, \"key\", {\n        get: function () {\n            return this._key;\n        },\n        set: function (value) {\n            this._key = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyedCipherStringBase.prototype.encrypt = function () {\n        return this.convert(false);\n    };\n    KeyedCipherStringBase.prototype.decrypt = function () {\n        return this.convert(true);\n    };\n    return KeyedCipherStringBase;\n}());\nexports.KeyedCipherStringBase = KeyedCipherStringBase;\n//# sourceMappingURL=KeyedCipherStringBase.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Cipher/KeyedCipherStringBase.js\n// module id = 357\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterEncoding;\n(function (CharacterEncoding) {\n    CharacterEncoding[CharacterEncoding[\"None\"] = 0] = \"None\";\n    CharacterEncoding[CharacterEncoding[\"Latin\"] = 1] = \"Latin\";\n    CharacterEncoding[CharacterEncoding[\"Ordinal\"] = 2] = \"Ordinal\";\n    CharacterEncoding[CharacterEncoding[\"FiveBitBinary\"] = 3] = \"FiveBitBinary\";\n    CharacterEncoding[CharacterEncoding[\"EightBitBinary\"] = 4] = \"EightBitBinary\";\n    CharacterEncoding[CharacterEncoding[\"Ascii\"] = 5] = \"Ascii\";\n})(CharacterEncoding = exports.CharacterEncoding || (exports.CharacterEncoding = {}));\n//# sourceMappingURL=CharacterEncoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Conversion/CharacterEncoding.js\n// module id = 358\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\n// The encoding for morse is much less straightforward than the others. The dots\n// and dashes each use two bits of the integer starting with the least-\n// significant bit.\n//\n// Example:\n//\n// 'F' -> ..-.\n//\n// Which encodes as:\n//\n// 01 01 10 01\n//  .  .  -  .\n//\n// Since it's packed starting with the LSB, the resulting number is reversed:\n//\n// 01100101 -> 0x65\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction packMorse() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var value = MorseEncoding.None;\n    var shift = 0;\n    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n        var arg = args_1[_a];\n        arg <<= shift;\n        value |= arg;\n        shift += 2;\n    }\n    return value;\n}\nvar MorseEncoding;\n(function (MorseEncoding) {\n    MorseEncoding[MorseEncoding[\"None\"] = 0] = \"None\";\n    // Primitives\n    MorseEncoding[MorseEncoding[\"Dot\"] = 1] = \"Dot\";\n    MorseEncoding[MorseEncoding[\"Dash\"] = 2] = \"Dash\";\n    // Letters\n    MorseEncoding[MorseEncoding[\"LetterA\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterA\";\n    MorseEncoding[MorseEncoding[\"LetterB\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterB\";\n    MorseEncoding[MorseEncoding[\"LetterC\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterC\";\n    MorseEncoding[MorseEncoding[\"LetterD\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterD\";\n    MorseEncoding[MorseEncoding[\"LetterE\"] = packMorse(MorseEncoding.Dot)] = \"LetterE\";\n    MorseEncoding[MorseEncoding[\"LetterF\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterF\";\n    MorseEncoding[MorseEncoding[\"LetterG\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterG\";\n    MorseEncoding[MorseEncoding[\"LetterH\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterH\";\n    MorseEncoding[MorseEncoding[\"LetterI\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterI\";\n    MorseEncoding[MorseEncoding[\"LetterJ\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterJ\";\n    MorseEncoding[MorseEncoding[\"LetterK\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterK\";\n    MorseEncoding[MorseEncoding[\"LetterL\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterL\";\n    MorseEncoding[MorseEncoding[\"LetterM\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterM\";\n    MorseEncoding[MorseEncoding[\"LetterN\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterN\";\n    MorseEncoding[MorseEncoding[\"LetterO\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterO\";\n    MorseEncoding[MorseEncoding[\"LetterP\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterP\";\n    MorseEncoding[MorseEncoding[\"LetterQ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterQ\";\n    MorseEncoding[MorseEncoding[\"LetterR\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterR\";\n    MorseEncoding[MorseEncoding[\"LetterS\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterS\";\n    MorseEncoding[MorseEncoding[\"LetterT\"] = packMorse(MorseEncoding.Dash)] = \"LetterT\";\n    MorseEncoding[MorseEncoding[\"LetterU\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterU\";\n    MorseEncoding[MorseEncoding[\"LetterV\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterV\";\n    MorseEncoding[MorseEncoding[\"LetterW\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterW\";\n    MorseEncoding[MorseEncoding[\"LetterX\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterX\";\n    MorseEncoding[MorseEncoding[\"LetterY\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterY\";\n    MorseEncoding[MorseEncoding[\"LetterZ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterZ\";\n    // Numbers\n    MorseEncoding[MorseEncoding[\"Number0\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number0\";\n    MorseEncoding[MorseEncoding[\"Number1\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number1\";\n    MorseEncoding[MorseEncoding[\"Number2\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number2\";\n    MorseEncoding[MorseEncoding[\"Number3\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number3\";\n    MorseEncoding[MorseEncoding[\"Number4\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"Number4\";\n    MorseEncoding[MorseEncoding[\"Number5\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number5\";\n    MorseEncoding[MorseEncoding[\"Number6\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number6\";\n    MorseEncoding[MorseEncoding[\"Number7\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number7\";\n    MorseEncoding[MorseEncoding[\"Number8\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number8\";\n    MorseEncoding[MorseEncoding[\"Number9\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"Number9\";\n    // Punctuation\n    MorseEncoding[MorseEncoding[\"PunctuationPeriod\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationPeriod\";\n    MorseEncoding[MorseEncoding[\"PunctuationComma\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationComma\";\n    MorseEncoding[MorseEncoding[\"PunctuationQuestionMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationQuestionMark\";\n    MorseEncoding[MorseEncoding[\"PunctuationApostrophe\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationApostrophe\";\n    MorseEncoding[MorseEncoding[\"PunctuationExclamationPoint\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationExclamationPoint\";\n    MorseEncoding[MorseEncoding[\"PunctuationForwardSlash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationForwardSlash\";\n    MorseEncoding[MorseEncoding[\"PunctuationOpenParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationOpenParenthesis\";\n    MorseEncoding[MorseEncoding[\"PunctuationCloseParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationCloseParenthesis\";\n    MorseEncoding[MorseEncoding[\"PunctuationAmpersand\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationAmpersand\";\n    MorseEncoding[MorseEncoding[\"PunctuationColon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationColon\";\n    MorseEncoding[MorseEncoding[\"PunctuationSemicolon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationSemicolon\";\n    MorseEncoding[MorseEncoding[\"PunctuationDoubleDash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDoubleDash\";\n    MorseEncoding[MorseEncoding[\"PunctuationPlusSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationPlusSign\";\n    MorseEncoding[MorseEncoding[\"PunctuationHyphen\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationHyphen\";\n    MorseEncoding[MorseEncoding[\"PunctuationUnderscore\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationUnderscore\";\n    MorseEncoding[MorseEncoding[\"PunctuationQuotationMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationQuotationMark\";\n    MorseEncoding[MorseEncoding[\"PunctuationDollarSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDollarSign\";\n    MorseEncoding[MorseEncoding[\"PunctuationAtSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationAtSign\";\n})(MorseEncoding = exports.MorseEncoding || (exports.MorseEncoding = {}));\n//# sourceMappingURL=MorseEncoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Morse/MorseEncoding.js\n// module id = 359\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\nvar BrailleData = /** @class */ (function (_super) {\n    __extends(BrailleData, _super);\n    function BrailleData() {\n        var _this = _super.call(this) || this;\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingCapital, EncodingCategory_1.EncodingCategory.Formatting, '^');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationDecimalPoint, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationFullStop, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationOpenQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationCloseQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n        _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n        return _this;\n    }\n    BrailleData.instance = new BrailleData();\n    return BrailleData;\n}(EncodingDataBase_1.EncodingDataBase));\nexports.BrailleData = BrailleData;\n//# sourceMappingURL=BrailleData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Braille/BrailleData.js\n// module id = 360\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingEntry = /** @class */ (function () {\n    function EncodingEntry(encoding, category, display) {\n        this.encoding = encoding;\n        this.category = category;\n        this.display = display;\n    }\n    EncodingEntry.prototype.toString = function () {\n        return this.display;\n    };\n    return EncodingEntry;\n}());\nexports.EncodingEntry = EncodingEntry;\n//# sourceMappingURL=EncodingEntry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/EncodingEntry.js\n// module id = 361\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterTableEntry_1 = require(\"./CharacterTableEntry\");\nvar CharacterConversion = /** @class */ (function () {\n    function CharacterConversion() {\n    }\n    CharacterConversion.getAsciiTable = function () {\n        var retVal = [];\n        CharacterConversion.addAsciiRange(retVal, 48, 57, CharacterConversion.toAscii, 127);\n        CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toAscii, 127);\n        CharacterConversion.addAsciiRange(retVal, 97, 122, CharacterConversion.toAscii, 127);\n        return retVal;\n    };\n    CharacterConversion.getOrdinalTable = function () {\n        var retVal = [];\n        CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toOrdinal, 26);\n        return retVal;\n    };\n    CharacterConversion.toAscii = function (ch) {\n        if (typeof ch !== 'string' || ch.length !== 1) {\n            throw new Error('A single character is required');\n        }\n        var ascii = ch.charCodeAt(0);\n        if (ascii >= 0 && ascii <= 127) {\n            return ascii;\n        }\n        return -1;\n    };\n    CharacterConversion.toOrdinal = function (ch) {\n        if (typeof ch !== 'string' || ch.length !== 1) {\n            throw new Error('A single character is required');\n        }\n        var chCode = ch.charCodeAt(0);\n        var ordinalCode = chCode - 'a'.charCodeAt(0);\n        if (ordinalCode >= 0 && ordinalCode < 26) {\n            return ordinalCode + 1;\n        }\n        ordinalCode = chCode - 'A'.charCodeAt(0);\n        if (ordinalCode >= 0 && ordinalCode < 26) {\n            return ordinalCode + 1;\n        }\n        return -1;\n    };\n    CharacterConversion.addAsciiRange = function (array, start, end, conversion, maxValue) {\n        for (var i = start; i <= end; i++) {\n            var letter = String.fromCharCode(i);\n            array.push(new CharacterTableEntry_1.CharacterTableEntry(letter, conversion(letter), maxValue));\n        }\n    };\n    return CharacterConversion;\n}());\nexports.CharacterConversion = CharacterConversion;\n//# sourceMappingURL=CharacterConversion.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Conversion/CharacterConversion.js\n// module id = 362\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leftPad = require(\"left-pad\");\nvar CharacterTableEntry = /** @class */ (function () {\n    function CharacterTableEntry(character, value, maxValue) {\n        this.character = character;\n        this.binary = CharacterTableEntry.getValue(value, 2, maxValue);\n        this.ternary = CharacterTableEntry.getValue(value, 3, maxValue);\n        this.octal = CharacterTableEntry.getValue(value, 8, maxValue);\n        this.decimal = CharacterTableEntry.getValue(value, 10, maxValue);\n        this.hexadecimal = CharacterTableEntry.getValue(value, 16, maxValue);\n    }\n    CharacterTableEntry.getValue = function (value, base, maxValue) {\n        return leftPad(value.toString(base), Math.ceil(Math.log(maxValue) / Math.log(base)), '0');\n    };\n    return CharacterTableEntry;\n}());\nexports.CharacterTableEntry = CharacterTableEntry;\n//# sourceMappingURL=CharacterTableEntry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Conversion/CharacterTableEntry.js\n// module id = 363\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterImage = /** @class */ (function () {\n    function CharacterImage(character, image) {\n        this.character = character;\n        this.image = image;\n    }\n    return CharacterImage;\n}());\nexports.CharacterImage = CharacterImage;\n//# sourceMappingURL=CharacterImage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/CharacterImage.js\n// module id = 364\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar InlineSvg = /** @class */ (function () {\n    function InlineSvg(inlineSvg, viewBoxWidth, viewBoxHeight) {\n        this.inlineSvg = inlineSvg;\n        this.viewBoxWidth = viewBoxWidth;\n        this.viewBoxHeight = viewBoxHeight;\n    }\n    InlineSvg.prototype.render = function () {\n        // tslint:disable-next-line:max-line-length\n        return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 \" + this.viewBoxWidth + \" \" + this.viewBoxHeight + \"\\\">\" + this.inlineSvg + \"</svg>\";\n    };\n    return InlineSvg;\n}());\nexports.InlineSvg = InlineSvg;\n//# sourceMappingURL=InlineSvg.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/InlineSvg.js\n// module id = 365\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\nvar CharacterAutoConvert = /** @class */ (function () {\n    function CharacterAutoConvert() {\n    }\n    // Forced encoding can be useful when converting an entire string\n    // or simply dealing with binary which has no leading zeros\n    CharacterAutoConvert.convertCharacter = function (input, forcedCharacterEncoding) {\n        var encoding = null;\n        if (!forcedCharacterEncoding) {\n            encoding = this.determineCharacterEncoding(input);\n        }\n        else {\n            encoding = forcedCharacterEncoding;\n        }\n        if (encoding === CharacterEncoding_1.CharacterEncoding.None) {\n            return '';\n        }\n        // Assume that Latin characters should remain\n        if (encoding === CharacterEncoding_1.CharacterEncoding.Latin) {\n            return input;\n        }\n        var baseTen = Number.parseInt(input, 10);\n        if (encoding === CharacterEncoding_1.CharacterEncoding.Ascii) {\n            return String.fromCharCode(baseTen);\n        }\n        var asciiOffset = 64;\n        if (encoding === CharacterEncoding_1.CharacterEncoding.Ordinal) {\n            return String.fromCharCode(baseTen + asciiOffset);\n        }\n        var binary = Number.parseInt(input, 2);\n        if (encoding === CharacterEncoding_1.CharacterEncoding.FiveBitBinary && this.appearsBinary(input)) {\n            return String.fromCharCode(binary + asciiOffset);\n        }\n        if (encoding === CharacterEncoding_1.CharacterEncoding.EightBitBinary && this.appearsBinary(input)) {\n            return String.fromCharCode(binary);\n        }\n        return '';\n    };\n    CharacterAutoConvert.determineCharacterEncoding = function (input) {\n        if (input.match(/[a-z]/i)) {\n            return CharacterEncoding_1.CharacterEncoding.Latin;\n        }\n        var numeric = Number.parseInt(input, 10);\n        if (this.appearsBinary(input)) {\n            if (input.length === 5) {\n                return CharacterEncoding_1.CharacterEncoding.FiveBitBinary;\n            }\n            else if (input.length === 8) {\n                return CharacterEncoding_1.CharacterEncoding.EightBitBinary;\n            }\n        }\n        if (input.length < 3 && numeric > 0 && numeric < 27) {\n            return CharacterEncoding_1.CharacterEncoding.Ordinal;\n        }\n        if (numeric > 64 && numeric < 91) {\n            return CharacterEncoding_1.CharacterEncoding.Ascii;\n        }\n        if (numeric > 97 && numeric < 123) {\n            return CharacterEncoding_1.CharacterEncoding.Ascii;\n        }\n        return CharacterEncoding_1.CharacterEncoding.None;\n    };\n    CharacterAutoConvert.appearsBinary = function (character) {\n        for (var _i = 0, character_1 = character; _i < character_1.length; _i++) {\n            var letter = character_1[_i];\n            if (letter !== '0' && letter !== '1') {\n                return false;\n            }\n        }\n        return true;\n    };\n    return CharacterAutoConvert;\n}());\nexports.CharacterAutoConvert = CharacterAutoConvert;\n//# sourceMappingURL=CharacterAutoConvert.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Conversion/CharacterAutoConvert.js\n// module id = 366\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NatoCharacter = /** @class */ (function () {\n    function NatoCharacter(character, word) {\n        this.character = character;\n        this.word = word;\n    }\n    return NatoCharacter;\n}());\nexports.NatoCharacter = NatoCharacter;\n//# sourceMappingURL=NatoCharacter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Nato/NatoCharacter.js\n// module id = 367\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResistorColorEntry = /** @class */ (function () {\n    function ResistorColorEntry(name, colorCode, multiplier, value, toleranceInPercent) {\n        this.name = name;\n        this.value = value;\n        this.colorCode = colorCode;\n        this.multiplier = multiplier;\n        this.toleranceInPercent = toleranceInPercent;\n    }\n    ResistorColorEntry.prototype.hasValue = function () {\n        return (this.value !== undefined);\n    };\n    ResistorColorEntry.prototype.getDisplayValue = function () {\n        if (this.value === undefined) {\n            return '';\n        }\n        return this.value.toString();\n    };\n    ResistorColorEntry.prototype.hasTolerance = function () {\n        return (this.toleranceInPercent !== undefined);\n    };\n    ResistorColorEntry.prototype.getDisplayTolerance = function () {\n        if (this.toleranceInPercent === undefined) {\n            return '';\n        }\n        return this.toleranceInPercent + \"%\";\n    };\n    return ResistorColorEntry;\n}());\nexports.ResistorColorEntry = ResistorColorEntry;\n//# sourceMappingURL=ResistorColorEntry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Resistor/ResistorColorEntry.js\n// module id = 368\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SemaphoreEncoding;\n(function (SemaphoreEncoding) {\n    SemaphoreEncoding[SemaphoreEncoding[\"None\"] = 0] = \"None\";\n    // Letters\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterA\"] = 96] = \"LetterA\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterB\"] = 160] = \"LetterB\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterC\"] = 288] = \"LetterC\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterD\"] = 34] = \"LetterD\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterE\"] = 36] = \"LetterE\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterF\"] = 40] = \"LetterF\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterG\"] = 48] = \"LetterG\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterH\"] = 192] = \"LetterH\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterI\"] = 320] = \"LetterI\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterJ\"] = 10] = \"LetterJ\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterK\"] = 66] = \"LetterK\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterL\"] = 68] = \"LetterL\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterM\"] = 72] = \"LetterM\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterN\"] = 80] = \"LetterN\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterO\"] = 384] = \"LetterO\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterP\"] = 130] = \"LetterP\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterQ\"] = 132] = \"LetterQ\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterR\"] = 136] = \"LetterR\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterS\"] = 144] = \"LetterS\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterT\"] = 258] = \"LetterT\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterU\"] = 260] = \"LetterU\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterV\"] = 18] = \"LetterV\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterW\"] = 12] = \"LetterW\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterX\"] = 20] = \"LetterX\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterY\"] = 264] = \"LetterY\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterZ\"] = 24] = \"LetterZ\";\n    // Numbers\n    SemaphoreEncoding[SemaphoreEncoding[\"Number1\"] = 96] = \"Number1\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number2\"] = 160] = \"Number2\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number3\"] = 288] = \"Number3\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number4\"] = 34] = \"Number4\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number5\"] = 36] = \"Number5\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number6\"] = 40] = \"Number6\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number7\"] = 48] = \"Number7\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number8\"] = 192] = \"Number8\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number9\"] = 320] = \"Number9\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number0\"] = 66] = \"Number0\";\n    // Formatting\n    SemaphoreEncoding[SemaphoreEncoding[\"FormattingNumber\"] = 6] = \"FormattingNumber\";\n})(SemaphoreEncoding = exports.SemaphoreEncoding || (exports.SemaphoreEncoding = {}));\n//# sourceMappingURL=SemaphoreEncoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Semaphore/SemaphoreEncoding.js\n// module id = 369\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SemaphoreDirection_1 = require(\"./SemaphoreDirection\");\nvar SemaphoreDegrees = /** @class */ (function () {\n    function SemaphoreDegrees() {\n    }\n    SemaphoreDegrees.FromDegrees = function (degrees) {\n        if (degrees >= 360) {\n            degrees = degrees % 360;\n        }\n        if (degrees % 45 !== 0 || degrees < 0) {\n            throw new Error('Invalid degrees');\n        }\n        var position = degrees / 45;\n        return SemaphoreDirection_1.SemaphoreDirection.North << position;\n    };\n    SemaphoreDegrees.ToDegrees = function (direction) {\n        var position = SemaphoreDirection_1.SemaphoreDirection.North;\n        var counter = 0;\n        while (counter < 9 && position !== direction) {\n            position = position << 1;\n            counter++;\n        }\n        return (counter * 45);\n    };\n    return SemaphoreDegrees;\n}());\nexports.SemaphoreDegrees = SemaphoreDegrees;\n//# sourceMappingURL=SemaphoreDegrees.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDegrees.js\n// module id = 370\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SemaphoreDirection;\n(function (SemaphoreDirection) {\n    SemaphoreDirection[SemaphoreDirection[\"None\"] = 0] = \"None\";\n    SemaphoreDirection[SemaphoreDirection[\"North\"] = 2] = \"North\";\n    SemaphoreDirection[SemaphoreDirection[\"NorthEast\"] = 4] = \"NorthEast\";\n    SemaphoreDirection[SemaphoreDirection[\"East\"] = 8] = \"East\";\n    SemaphoreDirection[SemaphoreDirection[\"SouthEast\"] = 16] = \"SouthEast\";\n    SemaphoreDirection[SemaphoreDirection[\"South\"] = 32] = \"South\";\n    SemaphoreDirection[SemaphoreDirection[\"SouthWest\"] = 64] = \"SouthWest\";\n    SemaphoreDirection[SemaphoreDirection[\"West\"] = 128] = \"West\";\n    SemaphoreDirection[SemaphoreDirection[\"NorthWest\"] = 256] = \"NorthWest\";\n})(SemaphoreDirection = exports.SemaphoreDirection || (exports.SemaphoreDirection = {}));\n//# sourceMappingURL=SemaphoreDirection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDirection.js\n// module id = 371\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrailleCharacter_1 = require(\"./Braille/BrailleCharacter\");\nexports.BrailleCharacter = BrailleCharacter_1.BrailleCharacter;\nvar BrailleDot_1 = require(\"./Braille/BrailleDot\");\nexports.BrailleDot = BrailleDot_1.BrailleDot;\nvar BrailleEncoding_1 = require(\"./Braille/BrailleEncoding\");\nexports.BrailleEncoding = BrailleEncoding_1.BrailleEncoding;\nvar BrailleStream_1 = require(\"./Braille/BrailleStream\");\nexports.BrailleStream = BrailleStream_1.BrailleStream;\nvar AutoKeyString_1 = require(\"./Cipher/AutoKeyString\");\nexports.AutoKeyString = AutoKeyString_1.AutoKeyString;\nvar CaesarString_1 = require(\"./Cipher/CaesarString\");\nexports.CaesarString = CaesarString_1.CaesarString;\nvar KeyedCipherStringBase_1 = require(\"./Cipher/KeyedCipherStringBase\");\nexports.KeyedCipherStringBase = KeyedCipherStringBase_1.KeyedCipherStringBase;\nvar VigenereString_1 = require(\"./Cipher/VigenereString\");\nexports.VigenereString = VigenereString_1.VigenereString;\nvar CharacterImage_1 = require(\"./Common/CharacterImage\");\nexports.CharacterImage = CharacterImage_1.CharacterImage;\nvar EncodingCategory_1 = require(\"./Common/EncodingCategory\");\nexports.EncodingCategory = EncodingCategory_1.EncodingCategory;\nvar EncodingEntry_1 = require(\"./Common/EncodingEntry\");\nexports.EncodingEntry = EncodingEntry_1.EncodingEntry;\nvar InlineSvg_1 = require(\"./Common/InlineSvg\");\nexports.InlineSvg = InlineSvg_1.InlineSvg;\nvar CharacterAutoConvert_1 = require(\"./Conversion/CharacterAutoConvert\");\nexports.CharacterAutoConvert = CharacterAutoConvert_1.CharacterAutoConvert;\nvar CharacterConversion_1 = require(\"./Conversion/CharacterConversion\");\nexports.CharacterConversion = CharacterConversion_1.CharacterConversion;\nvar CharacterEncoding_1 = require(\"./Conversion/CharacterEncoding\");\nexports.CharacterEncoding = CharacterEncoding_1.CharacterEncoding;\nvar CharacterTableEntry_1 = require(\"./Conversion/CharacterTableEntry\");\nexports.CharacterTableEntry = CharacterTableEntry_1.CharacterTableEntry;\nvar SignificantFigures_1 = require(\"./Conversion/SignificantFigures\");\nexports.SignificantFigures = SignificantFigures_1.SignificantFigures;\nvar StringAutoConvert_1 = require(\"./Conversion/StringAutoConvert\");\nexports.StringAutoConvert = StringAutoConvert_1.StringAutoConvert;\nvar MorseCharacter_1 = require(\"./Morse/MorseCharacter\");\nexports.MorseCharacter = MorseCharacter_1.MorseCharacter;\nvar MorseEncoding_1 = require(\"./Morse/MorseEncoding\");\nexports.MorseEncoding = MorseEncoding_1.MorseEncoding;\nvar NatoCharacter_1 = require(\"./Nato/NatoCharacter\");\nexports.NatoCharacter = NatoCharacter_1.NatoCharacter;\nvar NatoData_1 = require(\"./Nato/NatoData\");\nexports.NatoData = NatoData_1.NatoData;\nvar NavalFlags_1 = require(\"./NavalFlags/NavalFlags\");\nexports.NavalFlags = NavalFlags_1.NavalFlags;\nvar Resistor_1 = require(\"./Resistor/Resistor\");\nexports.Resistor = Resistor_1.Resistor;\nvar ResistorColorEntry_1 = require(\"./Resistor/ResistorColorEntry\");\nexports.ResistorColorEntry = ResistorColorEntry_1.ResistorColorEntry;\nvar SemaphoreCharacter_1 = require(\"./Semaphore/SemaphoreCharacter\");\nexports.SemaphoreCharacter = SemaphoreCharacter_1.SemaphoreCharacter;\nvar SemaphoreDegrees_1 = require(\"./Semaphore/SemaphoreDegrees\");\nexports.SemaphoreDegrees = SemaphoreDegrees_1.SemaphoreDegrees;\nvar SemaphoreDirection_1 = require(\"./Semaphore/SemaphoreDirection\");\nexports.SemaphoreDirection = SemaphoreDirection_1.SemaphoreDirection;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/index.js\n// module id = 372\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\nmodule.exports = leftPad;\n\nvar cache = [\n  '',\n  ' ',\n  '  ',\n  '   ',\n  '    ',\n  '     ',\n  '      ',\n  '       ',\n  '        ',\n  '         '\n];\n\nfunction leftPad (str, len, ch) {\n  // convert `str` to a `string`\n  str = str + '';\n  // `len` is the `pad`'s length now\n  len = len - str.length;\n  // doesn't need to pad\n  if (len <= 0) return str;\n  // `ch` defaults to `' '`\n  if (!ch && ch !== 0) ch = ' ';\n  // convert `ch` to a `string` cuz it could be a number\n  ch = ch + '';\n  // cache common use cases\n  if (ch === ' ' && len < 10) return cache[len] + str;\n  // `pad` starts with an empty string\n  var pad = '';\n  // loop\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch;\n    // divide `len` by 2, ditch the remainder\n    len >>= 1;\n    // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n    if (len) ch += ch;\n    // `len` is 0, exit the loop\n    else break;\n  }\n  // pad `str`!\n  return pad + str;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/left-pad/index.js\n// module id = 373\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\nvar BrailleData_1 = require(\"./BrailleData\");\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\nvar BrailleCharacter = /** @class */ (function (_super) {\n    __extends(BrailleCharacter, _super);\n    function BrailleCharacter(encoding, category) {\n        if (encoding === void 0) { encoding = BrailleEncoding_1.BrailleEncoding.None; }\n        if (category === void 0) { category = EncodingCategory_1.EncodingCategory.All; }\n        var _this = _super.call(this, BrailleData_1.BrailleData.instance, category) || this;\n        _this._encoding = encoding;\n        return _this;\n    }\n    Object.defineProperty(BrailleCharacter.prototype, \"encoding\", {\n        get: function () {\n            return this._encoding;\n        },\n        set: function (value) {\n            this._encoding = value;\n            this.invalidateLookup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrailleCharacter.prototype.get = function (mask) {\n        return (this._encoding & mask) === mask;\n    };\n    BrailleCharacter.prototype.toggle = function (mask) {\n        this._encoding ^= mask;\n        this.invalidateLookup();\n    };\n    BrailleCharacter.prototype.onClear = function () {\n        this._encoding = BrailleEncoding_1.BrailleEncoding.None;\n        this.invalidateLookup();\n    };\n    BrailleCharacter.prototype.onEmpty = function () {\n        return this._encoding === BrailleEncoding_1.BrailleEncoding.None;\n    };\n    BrailleCharacter.prototype.getEncoding = function () {\n        return this._encoding;\n    };\n    return BrailleCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase));\nexports.BrailleCharacter = BrailleCharacter;\n//# sourceMappingURL=BrailleCharacter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Braille/BrailleCharacter.js\n// module id = 374\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingLookupResult = /** @class */ (function () {\n    function EncodingLookupResult() {\n        this.exact = [];\n        this.partial = [];\n    }\n    Object.defineProperty(EncodingLookupResult.prototype, \"exactString\", {\n        get: function () {\n            return this.exact.map(function (value) { return value.toString(); }).join('/');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EncodingLookupResult;\n}());\nexports.EncodingLookupResult = EncodingLookupResult;\n//# sourceMappingURL=EncodingLookupResult.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Common/EncodingLookupResult.js\n// module id = 375\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrailleDot;\n(function (BrailleDot) {\n    BrailleDot[BrailleDot[\"None\"] = 0] = \"None\";\n    BrailleDot[BrailleDot[\"UpperLeft\"] = 1] = \"UpperLeft\";\n    BrailleDot[BrailleDot[\"MiddleLeft\"] = 2] = \"MiddleLeft\";\n    BrailleDot[BrailleDot[\"LowerLeft\"] = 4] = \"LowerLeft\";\n    BrailleDot[BrailleDot[\"UpperRight\"] = 8] = \"UpperRight\";\n    BrailleDot[BrailleDot[\"MiddleRight\"] = 16] = \"MiddleRight\";\n    BrailleDot[BrailleDot[\"LowerRight\"] = 32] = \"LowerRight\";\n})(BrailleDot = exports.BrailleDot || (exports.BrailleDot = {}));\n//# sourceMappingURL=BrailleDot.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Braille/BrailleDot.js\n// module id = 376\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar BrailleData_1 = require(\"./BrailleData\");\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\nvar BrailleStream = /** @class */ (function () {\n    function BrailleStream() {\n        this._chars = [];\n        this._currentStr = '';\n        this._processPosition = 0;\n        this._numberMode = false;\n        this.invalidate();\n    }\n    Object.defineProperty(BrailleStream.prototype, \"chars\", {\n        get: function () {\n            return this._chars;\n        },\n        set: function (value) {\n            this.clear();\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var ch = value_1[_i];\n                this._chars.push(ch);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrailleStream.prototype.append = function (ch) {\n        this._chars.push(ch.valueOf());\n    };\n    BrailleStream.prototype.clear = function () {\n        this._chars.length = 0;\n        this.invalidate();\n    };\n    BrailleStream.prototype.backspace = function () {\n        this._chars.pop();\n        this.invalidate();\n    };\n    BrailleStream.prototype.space = function () {\n        this._chars.push(BrailleEncoding_1.BrailleEncoding.None);\n    };\n    BrailleStream.prototype.toString = function () {\n        this.update();\n        return this._currentStr;\n    };\n    BrailleStream.prototype.invalidate = function () {\n        this._currentStr = '';\n        this._processPosition = 0;\n        this._numberMode = false;\n    };\n    BrailleStream.prototype.update = function () {\n        while (this._processPosition < this._chars.length) {\n            var ch = this._chars[this._processPosition];\n            switch (ch) {\n                case BrailleEncoding_1.BrailleEncoding.None:\n                    this._numberMode = false;\n                    this._currentStr += ' ';\n                    break;\n                case BrailleEncoding_1.BrailleEncoding.FormattingNumber:\n                    this._numberMode = true;\n                    this._currentStr += '#';\n                    break;\n                default:\n                    var category = EncodingCategory_1.EncodingCategory.Punctuation | (this._numberMode ? EncodingCategory_1.EncodingCategory.Number : EncodingCategory_1.EncodingCategory.Letter);\n                    var exact = BrailleData_1.BrailleData.instance.lookup(ch, category).exact;\n                    if (exact.length > 0) {\n                        this._currentStr += exact[0].toString();\n                    }\n            }\n            this._processPosition++;\n        }\n    };\n    return BrailleStream;\n}());\nexports.BrailleStream = BrailleStream;\n//# sourceMappingURL=BrailleStream.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Braille/BrailleStream.js\n// module id = 377\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\nvar AutoKeyString = /** @class */ (function (_super) {\n    __extends(AutoKeyString, _super);\n    function AutoKeyString() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AutoKeyString.prototype.convert = function (decrypt) {\n        if (this._key.length < 1) {\n            return this._text;\n        }\n        else {\n            var rotStr = [];\n            var keyIndex = 0;\n            var fullKey = this._key;\n            for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n                var ch = _a[_i];\n                if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n                    var currentLetter = CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, fullKey, keyIndex++, decrypt);\n                    rotStr.push(currentLetter);\n                    if (decrypt) {\n                        fullKey += currentLetter;\n                    }\n                    else {\n                        fullKey += ch;\n                    }\n                }\n                else {\n                    rotStr.push(ch);\n                }\n            }\n            return rotStr.join('');\n        }\n    };\n    return AutoKeyString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase));\nexports.AutoKeyString = AutoKeyString;\n//# sourceMappingURL=AutoKeyString.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Cipher/AutoKeyString.js\n// module id = 378\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\nvar CaesarString = /** @class */ (function () {\n    function CaesarString(text) {\n        if (text === void 0) { text = ''; }\n        this._text = text;\n    }\n    Object.defineProperty(CaesarString.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            this._text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CaesarString.prototype.getRotation = function (rot) {\n        var rotStr = [];\n        for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n            var ch = _a[_i];\n            rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetter(ch, rot));\n        }\n        return rotStr.join('');\n    };\n    CaesarString.prototype.getRotations = function () {\n        var rotations = [];\n        rotations.push(this._text);\n        for (var i = 1; i < 26; i++) {\n            rotations.push(this.getRotation(i));\n        }\n        return rotations;\n    };\n    return CaesarString;\n}());\nexports.CaesarString = CaesarString;\n//# sourceMappingURL=CaesarString.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Cipher/CaesarString.js\n// module id = 379\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\nvar VigenereString = /** @class */ (function (_super) {\n    __extends(VigenereString, _super);\n    function VigenereString() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    VigenereString.prototype.convert = function (decrypt) {\n        var rotStr = [];\n        var keyIndex = 0;\n        for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n            var ch = _a[_i];\n            if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n                rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, this._key, keyIndex++, decrypt));\n            }\n            else {\n                rotStr.push(ch);\n            }\n        }\n        return rotStr.join('');\n    };\n    return VigenereString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase));\nexports.VigenereString = VigenereString;\n//# sourceMappingURL=VigenereString.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Cipher/VigenereString.js\n// module id = 380\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SignificantFigures = /** @class */ (function () {\n    function SignificantFigures() {\n    }\n    SignificantFigures.ceil = function (num, sigFigs) {\n        return this.roundInternal(Math.ceil, num, sigFigs);\n    };\n    SignificantFigures.floor = function (num, sigFigs) {\n        return this.roundInternal(Math.floor, num, sigFigs);\n    };\n    SignificantFigures.round = function (num, sigFigs) {\n        return this.roundInternal(Math.round, num, sigFigs);\n    };\n    SignificantFigures.roundInternal = function (func, num, sigFigs) {\n        if (num === 0) {\n            return num;\n        }\n        if (sigFigs <= 0) {\n            throw new RangeError('sigFigs value must be positive');\n        }\n        var factor = this.getFactor(num, sigFigs);\n        if (factor > 0) {\n            return func(num / factor) * factor;\n        }\n        else if (factor < 0) {\n            var absFactor = Math.abs(factor);\n            return func(num * absFactor) / absFactor;\n        }\n        else {\n            return num;\n        }\n    };\n    SignificantFigures.getFactor = function (num, sigFigs) {\n        var absNum = Math.abs(num);\n        var digits = 0;\n        if (absNum < 1) {\n            digits = -sigFigs;\n        }\n        else {\n            digits = Math.ceil(Math.log(absNum) / Math.log(10)) - sigFigs;\n        }\n        if (digits < 0) {\n            return -Math.pow(10, Math.abs(digits));\n        }\n        else {\n            return Math.pow(10, digits);\n        }\n    };\n    return SignificantFigures;\n}());\nexports.SignificantFigures = SignificantFigures;\n//# sourceMappingURL=SignificantFigures.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Conversion/SignificantFigures.js\n// module id = 381\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterAutoConvert_1 = require(\"./CharacterAutoConvert\");\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\nvar StringAutoConvert = /** @class */ (function () {\n    function StringAutoConvert() {\n    }\n    StringAutoConvert.convertString = function (input, homogeneous) {\n        var split = this.splitString(input);\n        if (homogeneous) {\n            var encoding_1 = this.determineStringEncoding(input);\n            return split.reduce(function (result, letter) { return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter, encoding_1); }, '');\n        }\n        else {\n            return split.reduce(function (result, letter) { return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter); }, '');\n        }\n    };\n    StringAutoConvert.determineStringEncoding = function (input) {\n        var encodingCount = {};\n        var parsed = this.splitString(input);\n        var encodingKeys = [];\n        for (var _i = 0, parsed_1 = parsed; _i < parsed_1.length; _i++) {\n            var letter = parsed_1[_i];\n            var charEncoding = CharacterAutoConvert_1.CharacterAutoConvert.determineCharacterEncoding(letter);\n            if (!encodingCount[charEncoding]) {\n                encodingCount[charEncoding] = 1;\n                encodingKeys.push(charEncoding);\n            }\n            else {\n                encodingCount[charEncoding] = encodingCount[charEncoding] + 1;\n            }\n        }\n        var maxCount = 0;\n        var maxEncoding;\n        maxEncoding = CharacterEncoding_1.CharacterEncoding.None;\n        for (var _a = 0, encodingKeys_1 = encodingKeys; _a < encodingKeys_1.length; _a++) {\n            var encoding = encodingKeys_1[_a];\n            if (encodingCount[encoding] > maxCount) {\n                maxCount = encodingCount[encoding];\n                maxEncoding = encoding;\n            }\n        }\n        return maxEncoding;\n    };\n    StringAutoConvert.splitString = function (input) {\n        return input.split(' ').filter(function (item) { return item !== ''; });\n    };\n    return StringAutoConvert;\n}());\nexports.StringAutoConvert = StringAutoConvert;\n//# sourceMappingURL=StringAutoConvert.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Conversion/StringAutoConvert.js\n// module id = 382\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\nvar MorseData_1 = require(\"./MorseData\");\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\nvar MORSE_BITMASK = MorseEncoding_1.MorseEncoding.Dot | MorseEncoding_1.MorseEncoding.Dash;\nvar MorseCharacter = /** @class */ (function (_super) {\n    __extends(MorseCharacter, _super);\n    function MorseCharacter(str, category) {\n        if (str === void 0) { str = ''; }\n        if (category === void 0) { category = EncodingCategory_1.EncodingCategory.All; }\n        var _this = _super.call(this, MorseData_1.MorseData.instance, category) || this;\n        _this._morse = str;\n        return _this;\n    }\n    MorseCharacter.toMorseString = function (encoding) {\n        var morseChars = '';\n        while (encoding !== MorseEncoding_1.MorseEncoding.None) {\n            if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dot) {\n                morseChars += '.';\n            }\n            else if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dash) {\n                morseChars += '-';\n            }\n            else {\n                throw new Error('Invalid morse bits');\n            }\n            encoding >>>= 2;\n        }\n        return morseChars;\n    };\n    MorseCharacter.parseMorseString = function (morse) {\n        var bits = MorseEncoding_1.MorseEncoding.None;\n        for (var i = morse.length - 1; i >= 0; i--) {\n            var ch = morse[i];\n            if (ch === '.') {\n                bits |= MorseEncoding_1.MorseEncoding.Dot;\n            }\n            else if (ch === '-') {\n                bits |= MorseEncoding_1.MorseEncoding.Dash;\n            }\n            else {\n                throw new Error('Invalid morse character');\n            }\n            bits <<= 2;\n        }\n        bits >>>= 2;\n        return bits;\n    };\n    Object.defineProperty(MorseCharacter.prototype, \"morseString\", {\n        get: function () {\n            return this._morse;\n        },\n        set: function (value) {\n            this._morse = value;\n            this.invalidateLookup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MorseCharacter.prototype.backspace = function () {\n        if (this._morse.length > 0) {\n            this._morse = this._morse.substring(0, this._morse.length - 1);\n            this.invalidateLookup();\n        }\n    };\n    MorseCharacter.prototype.dot = function () {\n        this._morse += '.';\n        this.invalidateLookup();\n    };\n    MorseCharacter.prototype.dash = function () {\n        this._morse += '-';\n        this.invalidateLookup();\n    };\n    MorseCharacter.prototype.onClear = function () {\n        this._morse = '';\n        this.invalidateLookup();\n    };\n    MorseCharacter.prototype.onEmpty = function () {\n        return this._morse.length === 0;\n    };\n    MorseCharacter.prototype.getEncoding = function () {\n        return MorseCharacter.parseMorseString(this._morse);\n    };\n    return MorseCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase));\nexports.MorseCharacter = MorseCharacter;\n//# sourceMappingURL=MorseCharacter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Morse/MorseCharacter.js\n// module id = 383\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\nvar MorseData = /** @class */ (function (_super) {\n    __extends(MorseData, _super);\n    function MorseData() {\n        var _this = _super.call(this) || this;\n        // Letters\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n        _this.addToList(MorseEncoding_1.MorseEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n        // Numbers\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n        _this.addToList(MorseEncoding_1.MorseEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n        // Punctuation\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPeriod, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationForwardSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationOpenParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationCloseParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAmpersand, EncodingCategory_1.EncodingCategory.Punctuation, '&');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDoubleDash, EncodingCategory_1.EncodingCategory.Punctuation, '=');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPlusSign, EncodingCategory_1.EncodingCategory.Punctuation, '+');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationUnderscore, EncodingCategory_1.EncodingCategory.Punctuation, '_');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuotationMark, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDollarSign, EncodingCategory_1.EncodingCategory.Punctuation, '$');\n        _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAtSign, EncodingCategory_1.EncodingCategory.Punctuation, '@');\n        return _this;\n    }\n    MorseData.instance = new MorseData();\n    return MorseData;\n}(EncodingDataBase_1.EncodingDataBase));\nexports.MorseData = MorseData;\n//# sourceMappingURL=MorseData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Morse/MorseData.js\n// module id = 384\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NatoCharacter_1 = require(\"./NatoCharacter\");\n// There's no concept of a 'partial match' for a NATO letter, so there's no\n// reason to derive from EncodingDataBase.\nvar NatoData = /** @class */ (function () {\n    function NatoData() {\n        this._entries = [\n            new NatoCharacter_1.NatoCharacter('A', 'Alfa'), new NatoCharacter_1.NatoCharacter('B', 'Bravo'), new NatoCharacter_1.NatoCharacter('C', 'Charlie'),\n            new NatoCharacter_1.NatoCharacter('D', 'Delta'), new NatoCharacter_1.NatoCharacter('E', 'Echo'), new NatoCharacter_1.NatoCharacter('F', 'Foxtrot'),\n            new NatoCharacter_1.NatoCharacter('G', 'Golf'), new NatoCharacter_1.NatoCharacter('H', 'Hotel'), new NatoCharacter_1.NatoCharacter('I', 'India'),\n            new NatoCharacter_1.NatoCharacter('J', 'Juliet'), new NatoCharacter_1.NatoCharacter('K', 'Kilo'), new NatoCharacter_1.NatoCharacter('L', 'Lima'),\n            new NatoCharacter_1.NatoCharacter('M', 'Mike'), new NatoCharacter_1.NatoCharacter('N', 'November'), new NatoCharacter_1.NatoCharacter('O', 'Oscar'),\n            new NatoCharacter_1.NatoCharacter('P', 'Papa'), new NatoCharacter_1.NatoCharacter('Q', 'Quebec'), new NatoCharacter_1.NatoCharacter('R', 'Romeo'),\n            new NatoCharacter_1.NatoCharacter('S', 'Sierra'), new NatoCharacter_1.NatoCharacter('T', 'Tango'), new NatoCharacter_1.NatoCharacter('U', 'Uniform'),\n            new NatoCharacter_1.NatoCharacter('V', 'Victor'), new NatoCharacter_1.NatoCharacter('W', 'Whiskey'), new NatoCharacter_1.NatoCharacter('X', 'X-ray'),\n            new NatoCharacter_1.NatoCharacter('Y', 'Yankee'), new NatoCharacter_1.NatoCharacter('Z', 'Zulu'),\n        ];\n    }\n    Object.defineProperty(NatoData.prototype, \"entries\", {\n        get: function () {\n            return this._entries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NatoData.prototype.lookup = function (letter) {\n        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n            var ch = _a[_i];\n            if (ch.character.toUpperCase() === letter.toUpperCase()) {\n                return ch;\n            }\n        }\n        return null;\n    };\n    NatoData.instance = new NatoData();\n    return NatoData;\n}());\nexports.NatoData = NatoData;\n//# sourceMappingURL=NatoData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Nato/NatoData.js\n// module id = 385\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterImage_1 = require(\"../Common/CharacterImage\");\nvar InlineSvg_1 = require(\"../Common/InlineSvg\");\nvar NavalFlags = /** @class */ (function () {\n    function NavalFlags() {\n        this._entries = [\n            // tslint:disable:max-line-length (SVG images are messy)\n            new CharacterImage_1.CharacterImage('A', new InlineSvg_1.InlineSvg(\"<path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('B', new InlineSvg_1.InlineSvg('<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#f00\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>', 180, 180)),\n            new CharacterImage_1.CharacterImage('C', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"46.8\\\" width=\\\"144\\\" height=\\\"86.4\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"75.6\\\" width=\\\"144\\\" height=\\\"28.8\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('D', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"54\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('E', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"90\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('F', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 l 72,72 l -72,72 l -72,-72 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('G', new InlineSvg_1.InlineSvg(\"<path fill=\\\"#000094\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#FC0\\\" stroke-width=\\\"24\\\" d=\\\"m30,18v144m48,0V18m48,0v144\\\"/>\\n      <path d=\\\"M18,18H162V162H18z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('H', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('I', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <circle cx=\\\"90\\\" cy=\\\"90\\\" r=\\\"36\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('J', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"66\\\" width=\\\"144\\\" height=\\\"48\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('K', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('L', new InlineSvg_1.InlineSvg(\"<rect x=\\\"16\\\" y=\\\"16\\\" width=\\\"148\\\" height=\\\"148\\\" rx=\\\"2\\\"/>\\n      <path fill=\\\"#FC0\\\" d=\\\"m20,20h70v140h70V90H20\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('M', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#fff\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('N', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 54 V 162 H 90 V 18 H 126 V 162 H 162 V 126 H 18 V 90 H 162 V 54 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('O', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('P', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('Q', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('R', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#fc0\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('S', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('T', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"96\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"48\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('U', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#ffffff\\\"/>\\n      <path d=\\\"M 18,18 H 90 V 90 H 18 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 162,91 H 91 V 162 H 162 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('V', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#f00\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('W', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"42\\\" y=\\\"42\\\" width=\\\"96\\\" height=\\\"96\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"66\\\" y=\\\"66\\\" width=\\\"48\\\" height=\\\"48\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('X', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#000094\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('Y', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\"><path d=\\\"m18,18h144v144H18\\\"/></clipPath>\\n      <path fill=\\\"#FC0\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#F00\\\" stroke-dasharray=\\\"18.8\\\" stroke-width=\\\"250\\\" clip-path=\\\"url(#c)\\\" d=\\\"m4,4 160,160\\\"/>\\n      <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\" d=\\\"M18,18H162V162H18z\\\"/>\", 180, 180)),\n            new CharacterImage_1.CharacterImage('Z', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 V 162 H 162 z\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 162,18 V 162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 90,90 L 162,162 H 18 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)),\n        ];\n    }\n    Object.defineProperty(NavalFlags.prototype, \"entries\", {\n        get: function () {\n            return this._entries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NavalFlags.prototype.lookup = function (letter) {\n        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n            var ch = _a[_i];\n            if (ch.character.toUpperCase() === letter.toUpperCase()) {\n                return ch;\n            }\n        }\n        return null;\n    };\n    NavalFlags.instance = new NavalFlags();\n    return NavalFlags;\n}());\nexports.NavalFlags = NavalFlags;\n//# sourceMappingURL=NavalFlags.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/NavalFlags/NavalFlags.js\n// module id = 386\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResistorColorEntry_1 = require(\"./ResistorColorEntry\");\nvar Resistor = /** @class */ (function () {\n    function Resistor() {\n    }\n    /**\n     * getValue assumes there is no tolerance band, as tolerance is not part of\n     * the value calculation\n     */\n    Resistor.getValue = function (colors) {\n        if (colors.length < 3 || colors.length > 4) {\n            throw new RangeError('Invalid resistor size');\n        }\n        // Should we throw an error if the first color is black?  In resistors, it's\n        // technically not allowed, but in puzzle events who knows what they'll do.\n        // The math works out fine (it's just a leading zero), so for now it's\n        // allowed.\n        // Iterate through all but the final band (the multipler) and extract the\n        // values\n        var value = 0;\n        for (var i = 0; i < (colors.length - 1); ++i) {\n            var currentColor = colors[i];\n            if (currentColor.value === undefined) {\n                return Resistor.INVALID_RESISTOR;\n            }\n            value *= 10;\n            value += currentColor.value;\n        }\n        return Resistor.applyMultiplier(value, colors[colors.length - 1].multiplier);\n    };\n    Resistor.getDisplayValue = function (value) {\n        if (value >= 1000000000) {\n            return value / 1000000000 + \"G\";\n        }\n        else if (value >= 1000000) {\n            return value / 1000000 + \"M\";\n        }\n        else if (value >= 1000) {\n            return value / 1000 + \"k\";\n        }\n        else {\n            return value.toString();\n        }\n    };\n    Resistor.applyMultiplier = function (value, multipler) {\n        if (multipler >= 1) {\n            return value * multipler;\n        }\n        else if (multipler > 0) {\n            // Avoid floating point multiplication issues\n            return value / (1 / multipler);\n        }\n        else {\n            throw new RangeError('Invalid multiplier');\n        }\n    };\n    // Name, Color, Multiplier, Value, Tolerance\n    Resistor.BLACK = new ResistorColorEntry_1.ResistorColorEntry('Black', '#000000', 1, 0);\n    Resistor.BROWN = new ResistorColorEntry_1.ResistorColorEntry('Brown', '#8B4513', 10, 1, 1);\n    Resistor.RED = new ResistorColorEntry_1.ResistorColorEntry('Red', '#FF0000', 100, 2, 2);\n    Resistor.ORANGE = new ResistorColorEntry_1.ResistorColorEntry('Orange', '#EE7420', 1000, 3);\n    Resistor.YELLOW = new ResistorColorEntry_1.ResistorColorEntry('Yellow', '#FFFF00', 10000, 4);\n    Resistor.GREEN = new ResistorColorEntry_1.ResistorColorEntry('Green', '#008000', 100000, 5, 0.5);\n    Resistor.BLUE = new ResistorColorEntry_1.ResistorColorEntry('Blue', '#0000FF', 1000000, 6, 0.25);\n    Resistor.VIOLET = new ResistorColorEntry_1.ResistorColorEntry('Violet', '#800080', 10000000, 7, 0.1);\n    Resistor.GREY = new ResistorColorEntry_1.ResistorColorEntry('Grey', '#808080', 100000000, 8);\n    Resistor.WHITE = new ResistorColorEntry_1.ResistorColorEntry('White', '#FFFFFF', 1000000000, 9);\n    Resistor.GOLD = new ResistorColorEntry_1.ResistorColorEntry('Gold', '#AB8D3F', 0.1, undefined, 5);\n    Resistor.SILVER = new ResistorColorEntry_1.ResistorColorEntry('Silver', '#C0C0C0', 0.01, undefined, 10);\n    Resistor.colorTable = [\n        Resistor.BLACK, Resistor.BROWN, Resistor.RED, Resistor.ORANGE, Resistor.YELLOW, Resistor.GREEN, Resistor.BLUE,\n        Resistor.VIOLET, Resistor.GREY, Resistor.WHITE, Resistor.GOLD, Resistor.SILVER\n    ];\n    Resistor.INVALID_RESISTOR = -1;\n    return Resistor;\n}());\nexports.Resistor = Resistor;\n//# sourceMappingURL=Resistor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Resistor/Resistor.js\n// module id = 387\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\nvar SemaphoreData_1 = require(\"./SemaphoreData\");\nvar SemaphoreDegrees_1 = require(\"./SemaphoreDegrees\");\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\nvar SemaphoreCharacter = /** @class */ (function (_super) {\n    __extends(SemaphoreCharacter, _super);\n    function SemaphoreCharacter(encoding, category) {\n        if (encoding === void 0) { encoding = SemaphoreEncoding_1.SemaphoreEncoding.None; }\n        if (category === void 0) { category = EncodingCategory_1.EncodingCategory.All; }\n        var _this = _super.call(this, SemaphoreData_1.SemaphoreData.instance, category) || this;\n        _this._directions = [];\n        _this.addDirection(encoding);\n        return _this;\n    }\n    SemaphoreCharacter.parseEncoding = function (encoding) {\n        var directions = [];\n        for (var i = 1; i <= 8; i++) {\n            var direction = (1 << i);\n            if ((encoding & direction) === direction) {\n                directions.push(direction);\n            }\n        }\n        return directions;\n    };\n    Object.defineProperty(SemaphoreCharacter.prototype, \"directions\", {\n        get: function () {\n            return this._directions;\n        },\n        set: function (value) {\n            this._directions = value.slice(0, 2);\n            this.invalidateLookup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SemaphoreCharacter.prototype.addDirection = function (direction) {\n        for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n            var dir = _a[_i];\n            this._directions.push(dir);\n        }\n        if (this._directions.length > 2) {\n            this._directions.splice(0, this._directions.length - 2);\n        }\n        this.invalidateLookup();\n    };\n    SemaphoreCharacter.prototype.removeDirection = function (direction) {\n        for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n            var dir = _a[_i];\n            var index = this._directions.indexOf(dir);\n            if (index >= 0) {\n                this._directions.splice(index, 1);\n            }\n        }\n        this.invalidateLookup();\n    };\n    SemaphoreCharacter.prototype.hasDirection = function (direction) {\n        return this._directions.indexOf(direction) >= 0;\n    };\n    SemaphoreCharacter.prototype.getDegrees = function () {\n        return this._directions.map(function (value) { return SemaphoreDegrees_1.SemaphoreDegrees.ToDegrees(value); }).sort(function (a, b) { return a - b; });\n    };\n    SemaphoreCharacter.prototype.getPotentialMatch = function (other) {\n        if (this.directions.length !== 1 || this.directions[0] === other) {\n            return null;\n        }\n        var potentialMatch = this.getPotentialMatches().filter(function (value) { return (value.encoding & other) === other; })[0];\n        return potentialMatch || null;\n    };\n    SemaphoreCharacter.prototype.onClear = function () {\n        this._directions.length = 0;\n    };\n    SemaphoreCharacter.prototype.onEmpty = function () {\n        return this._directions.length === 0;\n    };\n    SemaphoreCharacter.prototype.getEncoding = function () {\n        return this._directions.reduce(function (previousValue, currentValue) { return previousValue |= currentValue; }, SemaphoreEncoding_1.SemaphoreEncoding.None);\n    };\n    return SemaphoreCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase));\nexports.SemaphoreCharacter = SemaphoreCharacter;\n//# sourceMappingURL=SemaphoreCharacter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Semaphore/SemaphoreCharacter.js\n// module id = 388\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\nvar SemaphoreData = /** @class */ (function (_super) {\n    __extends(SemaphoreData, _super);\n    function SemaphoreData() {\n        var _this = _super.call(this) || this;\n        // Letters\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n        // Numbers\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n        // Formatting\n        _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n        return _this;\n    }\n    SemaphoreData.instance = new SemaphoreData();\n    return SemaphoreData;\n}(EncodingDataBase_1.EncodingDataBase));\nexports.SemaphoreData = SemaphoreData;\n//# sourceMappingURL=SemaphoreData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/puzzle-lib/build/src/Semaphore/SemaphoreData.js\n// module id = 389\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--1-oneOf-3-2!../../../node_modules/postcss-loader/lib/index.js??postcss!./NavalFlagTable.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Views/Reference/NavalFlagTable.css\n// module id = 451\n// module chunks = 10","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".flagCharacter{font-size:72px;font-weight:700}.flagImage{width:100px}\", \"\", {\"version\":3,\"sources\":[\"/home/travis/build/kfarnung/puzztool/src/Views/Reference/NavalFlagTable.css\"],\"names\":[],\"mappings\":\"AAAA,eACI,eAAgB,AAChB,eAAkB,CACrB,AAED,WACI,WAAa,CAChB\",\"file\":\"NavalFlagTable.css\",\"sourcesContent\":[\".flagCharacter {\\n    font-size: 72px;\\n    font-weight: bold;\\n}\\n\\n.flagImage {\\n    width: 100px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/Views/Reference/NavalFlagTable.css\n// module id = 452\n// module chunks = 10"],"sourceRoot":""}
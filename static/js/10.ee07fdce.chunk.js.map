{"version":3,"sources":["Features/Cipher/Caesar/CaesarList.tsx","Features/Cipher/Caesar/CaesarStream.tsx","Features/Cipher/Caesar/index.tsx"],"names":["CaesarList","props","className","list","map","value","index","key","toString","padStart","mapDispatchToProps","clear","setText","connector","connect","state","text","cipher","caesar","inputRef","useFocusInput","Card","Header","prompt","Body","FormControl","onChange","event","currentTarget","placeholder","ref","ButtonToolbar","ButtonGroup","Button","onClick","variant","CaesarString","getRotations","Caesar","PuzzToolPage","description","title"],"mappings":"qQA2BeA,MApBf,SAAoBC,GAalB,OACE,yBAAKC,UAAU,cAZRD,EAAME,KAAKC,IAAI,CAACC,EAAeC,IACtB,IAAVA,EACK,KAIP,yBAAKC,IAAKD,GAAQA,EAAME,WAAWC,SAAS,GAA5C,KAAkDJ,M,OCD1D,MAGMK,EAAqB,CACzBC,UACAC,aAqDaC,MAlDGC,YAROC,IAAD,CACtBC,KAAMD,EAAME,OAAOC,OAAOF,OAOeN,EAkD5BG,EA5Cf,SAAsBZ,GACpB,MAAMkB,EAAWC,cAUjB,OACE,yBAAKlB,UAAU,gBACb,kBAACmB,EAAA,EAAD,CAAMnB,UAAU,sBACd,kBAACmB,EAAA,EAAKC,OAAN,KAAcrB,EAAMsB,QACpB,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACC,EAAA,EAAD,CACEC,SAVV,SAAuBC,GACrB1B,EAAMW,QAAQe,EAAMC,cAAcvB,QAU1BwB,YAAY,OACZC,IAAKX,EACLd,MAAOJ,EAAMe,OAEf,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QAtBd,WACEjC,EAAMU,SAsBMwB,QAAQ,UAFV,aAUR,kBAACd,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,eACA,kBAACD,EAAA,EAAKG,KAAN,KACE,kBAAC,EAAD,CAAYrB,KAAM,IAAIiC,eAAanC,EAAMe,MAAMqB,uBC9C1CC,UAVf,WACE,OACE,kBAACC,EAAA,EAAD,CAAcC,YANO,kJAMwBC,MAP9B,iBAQb,kBAAC,EAAD,CACElB,OAAO","file":"static/js/10.ee07fdce.chunk.js","sourcesContent":["import React from 'react';\nimport './CaesarList.scss';\n\ninterface Props {\n  list: string[];\n}\n\nfunction CaesarList(props: Props) {\n  function renderListItems() {\n    return props.list.map((value: string, index: number) => {\n      if (index === 0) {\n        return null;\n      }\n\n      return (\n        <div key={index}>{index.toString().padStart(2)}: {value}</div>\n      );\n    });\n  }\n\n  return (\n    <pre className=\"CaesarList\">\n      {renderListItems()}\n    </pre>\n  );\n}\n\nexport default CaesarList;\n","import { CaesarString } from 'puzzle-lib';\nimport React, { ChangeEvent } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useFocusInput } from '../../../Hooks/FocusInput';\nimport { RootState } from '../../../Store/rootReducer';\nimport { clear, setText } from './caesarCipherSlice';\nimport CaesarList from './CaesarList';\nimport './CaesarStream.scss';\n\nconst mapStateToProps = (state: RootState) => ({\n  text: state.cipher.caesar.text,\n});\nconst mapDispatchToProps = {\n  clear,\n  setText,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {\n  prompt: JSX.Element | string;\n}\n\nfunction CaesarStream(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onClearClick() {\n    props.clear();\n  }\n\n  function onTextChanged(event: ChangeEvent<HTMLInputElement>) {\n    props.setText(event.currentTarget.value);\n  }\n\n  return (\n    <div className=\"CaesarStream\">\n      <Card className=\"CaesarStream-input\">\n        <Card.Header>{props.prompt}</Card.Header>\n        <Card.Body>\n          <FormControl\n            onChange={onTextChanged}\n            placeholder=\"Text\"\n            ref={inputRef}\n            value={props.text}\n          />\n          <ButtonToolbar>\n            <ButtonGroup>\n              <Button\n                onClick={onClearClick}\n                variant=\"danger\"\n              >\n                Clear\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <CaesarList list={new CaesarString(props.text).getRotations()} />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default connector(CaesarStream);\n","import React from 'react';\nimport PuzzToolPage from '../../../Common/PuzzToolPage';\nimport CaesarStream from './CaesarStream';\n\nconst PAGE_TITLE = \"Caesar Cipher\";\nconst PAGE_DESCRIPTION = \"A Caesar cipher works by shifting every letter by \" +\n  \"a fixed amount. This is a simple cipher - there are only 25 different \" +\n  \"shifts for each letter.\";\n\nfunction Caesar() {\n  return (\n    <PuzzToolPage description={PAGE_DESCRIPTION} title={PAGE_TITLE}>\n      <CaesarStream\n        prompt=\"Type in your text, and all possible shifts will be displayed.\"\n      />\n    </PuzzToolPage>\n  );\n}\n\nexport default Caesar;\n"],"sourceRoot":""}
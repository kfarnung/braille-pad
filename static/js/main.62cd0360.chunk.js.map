{"version":3,"sources":["Features/Cipher/Autokey/autokeyCipherSlice.ts","Features/Cipher/Caesar/caesarCipherSlice.ts","Features/Cipher/Vigenere/vigenereCipherSlice.ts","Features/Encoding/AutoConvert/autoConvertSlice.ts","Features/Encoding/Character/characterEncodingSlice.ts","Features/WordSearch/wordSearchSlice.ts","Images/puzztool_banner_white.svg","Features/AppNav/AppNavCategory.tsx","Features/AppNav/index.tsx","Features/Error/NotFound.tsx","Features/Loading/index.tsx","App.tsx","serviceWorker.ts","Features/Cipher/cipherReducer.ts","Features/Encoding/encodingReducer.ts","Store/rootReducer.ts","Store/configureStore.ts","index.tsx","Features/Cipher/KeyedCipherStream/index.tsx","Common/PuzzToolDocumentTitle.tsx","Common/PuzzToolPage/index.tsx","Hooks/FocusInput.ts","Features/Encoding/Braille/brailleEncodingSlice.ts","Features/Encoding/Morse/morseEncodingSlice.ts","Features/Encoding/Semaphore/semaphoreEncodingSlice.ts","Features/Resistor/resistorSlice.ts","Data/RouteData.ts"],"names":["initialState","conversion","Conversion","decrypt","secret","text","autokeyCipherSlice","createSlice","name","reducers","clear","state","Object","assign","setConversion","action","payload","setSecret","setText","actions","caesarCipherSlice","vigenereCipherSlice","homogeneous","autoConvertSlice","setHomogeneous","characterEncodingSlice","selectTab","selectedTab","undefined","wordSearchSlice","canBend","grid","useCardinals","useDiagonals","wordList","setCanBend","setGrid","setUseCardinals","setUseDiagonals","setWordList","NavbarCategory","props","categoryName","category","rootUrl","onClick","e","preventDefault","to","NavDropdown","id","toLowerCase","replace","concat","title","children","map","child","url","Item","eventKey","AppNav","Navbar","bg","className","collapseOnSelect","expand","onSelect","document","activeElement","blur","sticky","variant","Brand","src","PuzztoolBannerWhite","alt","Toggle","Collapse","Nav","getCategories","AppNavCategory","Link","href","target","NotFound","PuzzToolPage","Loading","error","timedOut","pastDelay","defaultTimeout","WordSearch","Loadable","loader","loading","timeout","AutoConvert","Autokey","Braille","Caesar","Character","Home","Morse","Nato","NavalFlag","Pigpen","Resistor","Semaphore","Settings","Vigenere","App","PuzzToolDocumentTitle","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","combineReducers","autokey","autokeyCipherReducer","caesar","caesarCipherReducer","vigenere","vigenereCipherReducer","autoConvert","autoConvertReducer","braille","brailleEncodingReducer","character","characterEncodingReducer","morse","morseEncodingReducer","semaphore","semaphoreEncodingReducer","cipherPersistConfig","key","storage","encodingPersistConfig","createRootReducer","cipher","persistReducer","cipherReducer","encoding","encodingReducer","resistor","resistorReducer","wordSearch","wordSearchReducer","persistConfig","configurePuzzToolStore","rootReducer","persistedReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","baseUrl","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","KeyedCipherStream","inputRef","useFocusInput","Header","prompt","Body","onChange","event","onTextChange","currentTarget","value","placeholder","ref","onSecretChange","onConversionChange","type","encrypt","onClear","Error","calculateOutput","PUZZTOOL_TITLE","description","renderDescription","useCallback","node","focus","BrailleEncoding","None","stream","brailleEncodingSlice","append","push","backspace","pop","setEncoding","space","morseEncodingSlice","slice","directions","semaphoreEncodingSlice","length","setDirections","resistorSlice","bands","setBand","bandIndex","colorIndex"],"mappings":"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","file":"static/js/main.62cd0360.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Conversion } from '../KeyedCipherStream';\n\ninterface State {\n  conversion: Conversion;\n  secret: string;\n  text: string;\n}\n\nconst initialState: State = {\n  conversion: Conversion.decrypt,\n  secret: '',\n  text: '',\n};\n\nconst autokeyCipherSlice = createSlice({\n  name: 'autokeyCipher',\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setConversion(state, action: PayloadAction<Conversion>) {\n      state.conversion = action.payload;\n    },\n    setSecret(state, action: PayloadAction<string>) {\n      state.secret = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setConversion,\n  setSecret,\n  setText,\n} = autokeyCipherSlice.actions;\n\nexport default autokeyCipherSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  text: string;\n}\n\nconst initialState: State = {\n  text: '',\n};\n\nconst caesarCipherSlice = createSlice({\n  name: 'caesarCipher',\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setText,\n} = caesarCipherSlice.actions;\n\nexport default caesarCipherSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Conversion } from '../KeyedCipherStream';\n\ninterface State {\n  conversion: Conversion;\n  secret: string;\n  text: string;\n}\n\nconst initialState: State = {\n  conversion: Conversion.decrypt,\n  secret: '',\n  text: '',\n};\n\nconst vigenereCipherSlice = createSlice({\n  name: 'vigenereCipher',\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setConversion(state, action: PayloadAction<Conversion>) {\n      state.conversion = action.payload;\n    },\n    setSecret(state, action: PayloadAction<string>) {\n      state.secret = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setConversion,\n  setSecret,\n  setText,\n} = vigenereCipherSlice.actions;\n\nexport default vigenereCipherSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  homogeneous: boolean;\n  text: string;\n}\n\nconst initialState: State = {\n  homogeneous: true,\n  text: '',\n};\n\nconst autoConvertSlice = createSlice({\n  name: 'autoConvert',\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setHomogeneous(state, action: PayloadAction<boolean>) {\n      state.homogeneous = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setHomogeneous,\n  setText,\n} = autoConvertSlice.actions;\n\nexport default autoConvertSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  selectedTab?: string;\n}\n\nconst initialState: State = {\n};\n\nconst characterEncodingSlice = createSlice({\n  name: 'characterEncoding',\n  initialState,\n  reducers: {\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n  }\n});\n\nexport const {\n  selectTab,\n} = characterEncodingSlice.actions;\n\nexport default characterEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  canBend: boolean;\n  grid: string;\n  useCardinals: boolean;\n  useDiagonals: boolean;\n  wordList: string;\n}\n\nconst initialState: State = {\n  canBend: false,\n  grid: '',\n  useCardinals: true,\n  useDiagonals: true,\n  wordList: '',\n};\n\nconst wordSearchSlice = createSlice({\n  name: 'wordSearch',\n  initialState,\n  reducers: {\n    setCanBend(state, action: PayloadAction<boolean>) {\n      state.canBend = action.payload;\n    },\n    setGrid(state, action: PayloadAction<string>) {\n      state.grid = action.payload;\n    },\n    setUseCardinals(state, action: PayloadAction<boolean>) {\n      state.useCardinals = action.payload;\n    },\n    setUseDiagonals(state, action: PayloadAction<boolean>) {\n      state.useDiagonals = action.payload;\n    },\n    setWordList(state, action: PayloadAction<string>) {\n      state.wordList = action.payload;\n    },\n  }\n});\n\nexport const {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n} = wordSearchSlice.actions;\n\nexport default wordSearchSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/puzztool_banner_white.0b7fbfa4.svg\";","import NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { RouteCategory } from '../../Data/RouteData';\n\ninterface Props {\n  category: RouteCategory;\n}\n\nfunction getCategoryDropdownId(categoryName: string) {\n  return categoryName.toLowerCase().replace(/[^a-z]/, '').concat('-dropdown');\n}\n\nfunction NavbarCategory(props: Props) {\n  const name = props.category.name;\n  const rootUrl = props.category.rootUrl;\n\n  return (\n    <LinkContainer\n      key={name}\n      onClick={(e) => e.preventDefault()}\n      to={rootUrl}\n    >\n      <NavDropdown\n        id={getCategoryDropdownId(name)}\n        title={name}\n      >\n        {props.category.children.map((child) => (\n          <LinkContainer\n            key={`${name}-${child.name}`}\n            to={rootUrl + child.url}\n          >\n            <NavDropdown.Item eventKey={name + child.name}>\n              {child.name}\n            </NavDropdown.Item>\n          </LinkContainer>\n        ))}\n      </NavDropdown>\n    </LinkContainer>\n  );\n}\n\nexport default NavbarCategory;\n","import Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { getCategories } from '../../Data/RouteData';\nimport PuzztoolBannerWhite from '../../Images/puzztool_banner_white.svg';\nimport AppNavCategory from './AppNavCategory';\nimport './index.scss';\n\nfunction AppNav() {\n  return (\n    <Navbar\n      bg=\"dark\"\n      className=\"AppNav\"\n      collapseOnSelect={true}\n      expand=\"md\"\n      // Remove focus from the selected element to prevent it from taking\n      // further keyboard input.\n      onSelect={() => (document.activeElement as HTMLElement).blur()}\n      sticky=\"top\"\n      variant=\"dark\"\n    >\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>\n          <img\n            className=\"NavbarLogo\"\n            src={PuzztoolBannerWhite}\n            alt=\"PuzzTool logo\"\n          />\n        </Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav>\n          {getCategories().map(\n            category => <AppNavCategory key={category.name} category={category} />)}\n        </Nav>\n        <Nav>\n          <LinkContainer to=\"/help\" onClick={(e) => e.preventDefault()}>\n            <NavDropdown title=\"Help\" id=\"help-dropdown\">\n              <LinkContainer to=\"/help/settings\">\n                <NavDropdown.Item eventKey=\"Help.Settings\">Settings</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          </LinkContainer>\n          <Nav.Link\n            eventKey=\"Help.Feedback\"\n            href=\"https://github.com/puzztool/puzztool/issues/new\"\n            target=\"_blank\"\n          >\n            Feedback\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppNav;\n","import { Link } from 'react-router-dom';\nimport PuzzToolPage from '../../Common/PuzzToolPage';\nimport './NotFound.scss';\n\nfunction NotFound() {\n  return (\n    <PuzzToolPage title=\"Not Found\">\n      <div className=\"NotFound\">\n        <h1>Not Found</h1>\n        <p>If this was reached in error, use the navigation options or go <Link to=\"/\">home</Link>.</p>\n      </div>\n    </PuzzToolPage>\n  );\n}\n\nexport default NotFound;\n","import { LoadingComponentProps } from 'react-loadable';\nimport './index.scss';\n\nfunction Loading(props: LoadingComponentProps) {\n  function getContent() {\n    if (props.error) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Failed to load content</div>\n        </div>\n      );\n    } else if (props.timedOut) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Timed out while loading content</div>\n        </div>\n      );\n    } else if (props.pastDelay) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-spinner\" />\n          <div>Loading</div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"Loading\">\n      {getContent()}\n    </div>\n  );\n}\n\nexport default Loading;\n","import { Route, Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport PuzzToolDocumentTitle from './Common/PuzzToolDocumentTitle';\nimport AppNav from './Features/AppNav';\nimport NotFound from './Features/Error/NotFound';\nimport Loading from './Features/Loading';\nimport './App.scss';\n\nconst defaultTimeout = 10000;\n\nconst WordSearch = Loadable({\n  loader: () => import('./Features/WordSearch'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst AutoConvert = Loadable({\n  loader: () => import('./Features/Encoding/AutoConvert'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Autokey = Loadable({\n  loader: () => import('./Features/Cipher/Autokey'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Braille = Loadable({\n  loader: () => import('./Features/Encoding/Braille'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Caesar = Loadable({\n  loader: () => import('./Features/Cipher/Caesar'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Character = Loadable({\n  loader: () => import('./Features/Encoding/Character'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Home = Loadable({\n  loader: () => import('./Features/Home'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Morse = Loadable({\n  loader: () => import('./Features/Encoding/Morse'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Nato = Loadable({\n  loader: () => import('./Features/Encoding/Nato'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst NavalFlag = Loadable({\n  loader: () => import('./Features/Encoding/NavalFlag'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Pigpen = Loadable({\n  loader: () => import('./Features/Pigpen'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Resistor = Loadable({\n  loader: () => import('./Features/Resistor'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Semaphore = Loadable({\n  loader: () => import('./Features/Encoding/Semaphore'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Settings = Loadable({\n  loader: () => import('./Features/Settings'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Vigenere = Loadable({\n  loader: () => import('./Features/Cipher/Vigenere'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nfunction App() {\n  return (\n    <PuzzToolDocumentTitle>\n      <div className=\"App\">\n        <AppNav />\n        <div className=\"App-content\">\n          <Switch>\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route exact={true} path=\"/cipher/autokey\" component={Autokey} />\n            <Route exact={true} path=\"/cipher/caesar\" component={Caesar} />\n            <Route exact={true} path=\"/cipher/vigenere\" component={Vigenere} />\n            <Route exact={true} path=\"/encoding/autoconvert\" component={AutoConvert} />\n            <Route exact={true} path=\"/encoding/braille\" component={Braille} />\n            <Route exact={true} path=\"/encoding/morse\" component={Morse} />\n            <Route exact={true} path=\"/encoding/pigpen\" component={Pigpen} />\n            <Route exact={true} path=\"/encoding/semaphore\" component={Semaphore} />\n            <Route exact={true} path=\"/help/settings\" component={Settings} />\n            <Route exact={true} path=\"/reference/characterencodings\" component={Character} />\n            <Route exact={true} path=\"/reference/nato\" component={Nato} />\n            <Route exact={true} path=\"/reference/navalflags\" component={NavalFlag} />\n            <Route exact={true} path=\"/reference/resistors\" component={Resistor} />\n            <Route exact={true} path=\"/solvers/wordsearch\" component={WordSearch} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </PuzzToolDocumentTitle>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line:no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line:no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line:no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // tslint:disable-next-line:no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line:no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport autokeyCipherReducer from './Autokey/autokeyCipherSlice';\nimport caesarCipherReducer from './Caesar/caesarCipherSlice';\nimport vigenereCipherReducer from './Vigenere/vigenereCipherSlice';\n\nexport default combineReducers({\n  autokey: autokeyCipherReducer,\n  caesar: caesarCipherReducer,\n  vigenere: vigenereCipherReducer,\n});\n","import { combineReducers } from 'redux';\nimport autoConvertReducer from './AutoConvert/autoConvertSlice';\nimport brailleEncodingReducer from './Braille/brailleEncodingSlice';\nimport characterEncodingReducer from './Character/characterEncodingSlice';\nimport morseEncodingReducer from './Morse/morseEncodingSlice';\nimport semaphoreEncodingReducer from './Semaphore/semaphoreEncodingSlice';\n\nexport default combineReducers({\n  autoConvert: autoConvertReducer,\n  braille: brailleEncodingReducer,\n  character: characterEncodingReducer,\n  morse: morseEncodingReducer,\n  semaphore: semaphoreEncodingReducer,\n});\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\nimport cipherReducer from '../Features/Cipher/cipherReducer';\nimport encodingReducer from '../Features/Encoding/encodingReducer';\nimport resistorReducer from '../Features/Resistor/resistorSlice';\nimport wordSearchReducer from '../Features/WordSearch/wordSearchSlice';\n\nconst cipherPersistConfig = {\n  key: 'cipher',\n  storage,\n}\n\nconst encodingPersistConfig = {\n  key: 'encoding',\n  storage,\n}\n\nconst createRootReducer = () => combineReducers({\n  cipher: persistReducer(cipherPersistConfig, cipherReducer),\n  encoding: persistReducer(encodingPersistConfig, encodingReducer),\n  resistor: resistorReducer,\n  wordSearch: wordSearchReducer,\n});\n\nexport type RootState = ReturnType<ReturnType<typeof createRootReducer>>\nexport default createRootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport createRootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst configurePuzzToolStore = () => {\n  const rootReducer = createRootReducer();\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore actions for \"redux-persist\"\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    }),\n  });\n\n  let persistor = persistStore(store);\n\n  return { store, persistor };\n}\n\nexport default configurePuzzToolStore;\n","import { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './Store/configureStore';\nimport './index.scss';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') || '';\nconst history = createBrowserHistory({ basename: baseUrl });\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.register();\n","import { KeyedCipherStringBase } from 'puzzle-lib';\nimport React, { ChangeEvent } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { useFocusInput } from '../../../Hooks/FocusInput';\nimport './index.scss';\n\nexport enum Conversion {\n  encrypt,\n  decrypt,\n}\n\ninterface Props {\n  cipher: KeyedCipherStringBase;\n  conversion: Conversion;\n  id: string;\n  secret: string;\n  onClear: () => void;\n  onConversionChange: (value: Conversion) => void;\n  onSecretChange: (value: string) => void;\n  onTextChange: (value: string) => void;\n  prompt: JSX.Element | string;\n  text: string;\n}\n\nfunction KeyedCipherStream(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onClearClick() {\n    props.onClear();\n  }\n\n  function onKeyChange(event: ChangeEvent<HTMLInputElement>) {\n    props.onSecretChange(event.currentTarget.value);\n  }\n\n  function onTextChange(event: ChangeEvent<HTMLInputElement>) {\n    props.onTextChange(event.currentTarget.value);\n  }\n\n  function calculateOutput() {\n    const cipher = props.cipher;\n    cipher.key = props.secret;\n    cipher.text = props.text;\n\n    switch (props.conversion) {\n      case Conversion.encrypt:\n        return cipher.encrypt();\n\n      case Conversion.decrypt:\n        return cipher.decrypt();\n\n      default:\n        throw new Error('Invalid conversion type');\n    }\n  }\n\n  return (\n    <div className=\"KeyedCipherStream\">\n      <Card className=\"KeyedCipherStream-input\">\n        <Card.Header>{props.prompt}</Card.Header>\n        <Card.Body>\n          <FormControl\n            onChange={onTextChange}\n            placeholder=\"Text\"\n            ref={inputRef}\n            value={props.text}\n          />\n          <FormControl\n            onChange={onKeyChange}\n            placeholder=\"Key\"\n            value={props.secret}\n          />\n          <ButtonToolbar>\n            <ToggleButtonGroup\n              name=\"KeyedCipherStream-conversion\"\n              onChange={props.onConversionChange}\n              type=\"radio\"\n              value={props.conversion}\n            >\n              <ToggleButton value={Conversion.encrypt}>Encrypt</ToggleButton>\n              <ToggleButton value={Conversion.decrypt}>Decrypt</ToggleButton>\n            </ToggleButtonGroup>\n            <ButtonGroup>\n              <Button\n                onClick={onClearClick}\n                variant=\"danger\"\n              >\n                Clear\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n      <Card className=\"KeyedCipherStream-output\">\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <pre>\n            {calculateOutput() || ' '}\n          </pre>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default KeyedCipherStream;\n","import React, { ReactChild } from 'react';\nimport DocumentTitle from 'react-document-title';\n\nconst PUZZTOOL_TITLE = \"PuzzTool\";\n\ninterface Props {\n  children?: ReactChild;\n  title?: string;\n}\n\nfunction PuzzToolDocumentTitle({children, title}: Props) {\n  function getDocumentTitle() {\n    if (title) {\n      return `${title} - ${PUZZTOOL_TITLE}`;\n    }\n  \n    return PUZZTOOL_TITLE;\n  }\n\n  return (\n    <DocumentTitle title={getDocumentTitle()}>\n      {children}\n    </DocumentTitle>\n  );\n}\n\nexport default PuzzToolDocumentTitle;\n","import React, { ReactChild } from 'react';\nimport PuzzToolDocumentTitle from '../PuzzToolDocumentTitle';\nimport './index.scss';\n\ninterface Props {\n  children: ReactChild;\n  description?: ReactChild;\n  title: string;\n}\n\nfunction PuzzToolPage({children, description, title}: Props) {\n  function renderDescription() {\n    if (description) {\n      return (\n        <div className=\"PuzzToolPage-description\">\n          {description}\n        </div>\n      )\n    }\n\n    return undefined;\n  }\n\n  return (\n    <PuzzToolDocumentTitle title={title}>\n      <>\n        <div className=\"PuzzToolPage-header\">\n          <h2 className=\"PuzzToolPage-title\">{title}</h2>\n          {renderDescription()}\n        </div>\n        {children}\n      </>\n    </PuzzToolDocumentTitle>\n  );\n}\n\nexport default PuzzToolPage;\n","import { useCallback } from 'react';\n\nexport function useFocusInput() {\n  // This callback is only executed once per change of the returned variable.\n  return useCallback(\n    (node) => {\n      if (node) {\n        node.focus();\n      }\n    },\n    []);\n}\n","import { BrailleEncoding } from 'puzzle-lib';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  encoding: BrailleEncoding,\n  selectedTab?: string;\n  stream: BrailleEncoding[];\n}\n\nconst initialState: State = {\n  encoding: BrailleEncoding.None,\n  stream: [],\n};\n\nconst brailleEncodingSlice = createSlice({\n  name: 'brailleEncoding',\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<BrailleEncoding>) {\n      state.encoding = BrailleEncoding.None;\n      state.stream.push(action.payload);\n    },\n    backspace(state) {\n      state.stream.pop();\n    },\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n    setEncoding(state, action: PayloadAction<BrailleEncoding>) {\n      state.encoding = action.payload;\n    },\n    space(state) {\n      state.stream.push(BrailleEncoding.None);\n    },\n  }\n});\n\nexport const {\n  append,\n  backspace,\n  clear,\n  selectTab,\n  setEncoding,\n  space,\n} = brailleEncodingSlice.actions;\n\nexport default brailleEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  selectedTab?: string;\n  stream: string;\n}\n\nconst initialState: State = {\n  stream: '',\n};\n\nconst morseEncodingSlice = createSlice({\n  name: 'morseEncoding',\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<string>) {\n      state.stream += action.payload;\n    },\n    backspace(state) {\n      state.stream = state.stream.slice(0, -1);\n    },\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n  }\n});\n\nexport const {\n  append,\n  backspace,\n  clear,\n  selectTab,\n} = morseEncodingSlice.actions;\n\nexport default morseEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SemaphoreDirection } from 'puzzle-lib';\n\ninterface State {\n  directions: SemaphoreDirection[];\n  selectedTab?: string;\n  stream: string;\n}\n\nconst initialState: State = {\n  directions: [],\n  stream: '',\n};\n\nconst semaphoreEncodingSlice = createSlice({\n  name: 'semaphoreEncoding',\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<string>) {\n      state.directions.length = 0;\n      state.stream += action.payload;\n    },\n    backspace(state) {\n      state.stream = state.stream.slice(0, -1);\n    },\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n    setDirections(state, action: PayloadAction<SemaphoreDirection[]>) {\n      state.directions = action.payload;\n    },\n    space(state) {\n      state.stream += ' ';\n    },\n  }\n});\n\nexport const {\n  append,\n  backspace,\n  clear,\n  selectTab,\n  setDirections,\n  space,\n} = semaphoreEncodingSlice.actions;\n\nexport default semaphoreEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface State {\n  bands: number[];\n  selectedTab?: string;\n}\n\ninterface SetBandPayload {\n  bandIndex: number;\n  colorIndex: number;\n}\n\nconst initialState: State = {\n  // BLACK, BLACK, BLACK, <blank>, BROWN\n  bands: [0, 0, 0, -1, 1],\n};\n\nconst resistorSlice = createSlice({\n  name: 'resistor',\n  initialState,\n  reducers: {\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n    setBand(state, action: PayloadAction<SetBandPayload>) {\n      const { bandIndex, colorIndex } = action.payload;\n      state.bands[bandIndex] = colorIndex;\n    },\n  }\n});\n\nexport const {\n  selectTab,\n  setBand,\n} = resistorSlice.actions;\n\nexport default resistorSlice.reducer;\n","export interface RouteChild {\r\n  description: string;\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nexport interface RouteCategory {\r\n  children: RouteChild[];\r\n  description: string;\r\n  name: string;\r\n  rootUrl: string;\r\n}\r\n\r\nexport function getCategories(): RouteCategory[] {\r\n  return [\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Word Search Solver',\r\n          name: 'Word Search',\r\n          url: '/wordsearch',\r\n        },\r\n      ],\r\n      description: 'Automated puzzle solvers',\r\n      name: 'Solvers',\r\n      rootUrl: '/solvers',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: ' A Vignere cipher which uses plaintext as the key',\r\n          name: 'Autokey',\r\n          url: '/autokey',\r\n        },\r\n        {\r\n          description: 'Letters are shifted by a fixed value',\r\n          name: 'Caesar',\r\n          url: '/caesar',\r\n        },\r\n        {\r\n          description: 'Letters are mapped based on a key word',\r\n          name: 'Vignere',\r\n          url: '/vigenere',\r\n        },\r\n      ],\r\n      description: 'Scrambled letters',\r\n      name: 'Ciphers',\r\n      rootUrl: '/cipher',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Mapping numbers to letters (ASCII, Binary, Ordinal)',\r\n          name: 'AutoConvert',\r\n          url: '/autoconvert',\r\n        },\r\n        {\r\n          description: 'Six dots in a two-by-three grid',\r\n          name: 'Braille',\r\n          url: '/braille',\r\n        },\r\n        {\r\n          description: 'Dots and dashes with separations',\r\n          name: 'Morse Code',\r\n          url: '/morse',\r\n        },\r\n        {\r\n          description: 'Parts of a tic-tac-toe grid or X, some with dot',\r\n          name: 'Pigpen',\r\n          url: '/pigpen',\r\n        },\r\n        {\r\n          description: ' Positions of two different flags',\r\n          name: 'Semaphore',\r\n          url: '/semaphore',\r\n        },\r\n      ],\r\n      description: 'Different ways to represent letters',\r\n      name: 'Encodings',\r\n      rootUrl: '/encoding',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Static display of number to letter mapping',\r\n          name: 'Character Encodings',\r\n          url: '/characterencodings',\r\n        },\r\n        {\r\n          description: 'Words used to clearly identify a letter',\r\n          name: 'NATO Alphabet',\r\n          url: '/nato',\r\n        },\r\n        {\r\n          description: 'Different simple flags which convey a letter',\r\n          name: 'Naval Flags',\r\n          url: '/navalflags',\r\n        },\r\n        {\r\n          description: 'Find a resistor value using different colored bands',\r\n          name: 'Resistors',\r\n          url: '/resistors',\r\n        }\r\n      ],\r\n      description: 'Miscellaneous information',\r\n      name: 'Reference',\r\n      rootUrl: '/reference',\r\n    }\r\n  ];\r\n}\r\n"],"sourceRoot":""}
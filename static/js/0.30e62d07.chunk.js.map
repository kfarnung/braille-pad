{"version":3,"sources":["../node_modules/puzzle-lib/build/src/index.js","../node_modules/puzzle-lib/build/src/Common/EncodingCategory.js","../node_modules/puzzle-lib/build/src/Braille/BrailleEncoding.js","../node_modules/puzzle-lib/build/src/Common/EncodingCharacterBase.js","../node_modules/puzzle-lib/build/src/Common/EncodingDataBase.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarUtils.js","../node_modules/puzzle-lib/build/src/Cipher/KeyedCipherStringBase.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterEncoding.js","../node_modules/puzzle-lib/build/src/Morse/MorseEncoding.js","../node_modules/puzzle-lib/build/src/Braille/BrailleData.js","../node_modules/puzzle-lib/build/src/Common/EncodingEntry.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterConversion.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterTableEntry.js","../node_modules/left-pad/index.js","../node_modules/puzzle-lib/build/src/Common/CharacterImage.js","../node_modules/puzzle-lib/build/src/Common/InlineSvg.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseCharacter.js","../node_modules/puzzle-lib/build/src/Common/Helpers.js","../node_modules/puzzle-lib/build/src/Nato/NatoCharacter.js","../node_modules/puzzle-lib/build/src/Resistor/ResistorColorEntry.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreEncoding.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDegrees.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDirection.js","../node_modules/puzzle-lib/build/src/Braille/BrailleCharacter.js","../node_modules/puzzle-lib/build/src/Common/EncodingLookupResult.js","../node_modules/puzzle-lib/build/src/Braille/BrailleDot.js","../node_modules/puzzle-lib/build/src/Braille/BrailleStream.js","../node_modules/puzzle-lib/build/src/Cipher/AutoKeyString.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarString.js","../node_modules/puzzle-lib/build/src/Cipher/VigenereString.js","../node_modules/puzzle-lib/build/src/Conversion/SignificantFigures.js","../node_modules/puzzle-lib/build/src/Conversion/StringAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseData.js","../node_modules/puzzle-lib/build/src/Morse/MorseString.js","../node_modules/puzzle-lib/build/src/Nato/NatoData.js","../node_modules/puzzle-lib/build/src/NavalFlags/NavalFlags.js","../node_modules/puzzle-lib/build/src/Resistor/Resistor.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreCharacter.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreData.js"],"names":["Object","defineProperty","exports","value","BrailleCharacter_1","__webpack_require__","BrailleCharacter","BrailleDot_1","BrailleDot","BrailleEncoding_1","BrailleEncoding","BrailleStream_1","BrailleStream","AutoKeyString_1","AutoKeyString","CaesarString_1","CaesarString","KeyedCipherStringBase_1","KeyedCipherStringBase","VigenereString_1","VigenereString","CharacterImage_1","CharacterImage","EncodingCategory_1","EncodingCategory","EncodingEntry_1","EncodingEntry","InlineSvg_1","InlineSvg","CharacterAutoConvert_1","CharacterAutoConvert","CharacterConversion_1","CharacterConversion","CharacterEncoding_1","CharacterEncoding","CharacterTableEntry_1","CharacterTableEntry","SignificantFigures_1","SignificantFigures","StringAutoConvert_1","StringAutoConvert","MorseCharacter_1","MorseCharacter","MorseEncoding_1","MorseEncoding","MorseString_1","MorseString","NatoCharacter_1","NatoCharacter","NatoData_1","NatoData","NavalFlags_1","NavalFlags","Resistor_1","Resistor","ResistorColorEntry_1","ResistorColorEntry","SemaphoreCharacter_1","SemaphoreCharacter","SemaphoreDegrees_1","SemaphoreDegrees","SemaphoreDirection_1","SemaphoreDirection","EncodingCharacterBase","data","category","this","_lookup","_data","_category","invalidateLookup","prototype","get","set","enumerable","configurable","clear","onClear","empty","onEmpty","getExactMatches","ensureLookup","exact","getPotentialMatches","partial","toString","exactString","valid","length","valueOf","getEncoding","lookup","EncodingLookupResult_1","EncodingDataBase","_entries","encoding","All","result","EncodingLookupResult","_i","_a","entry","push","addToList","display","CaesarUtils","rotateLetter","ch","rot","Error","alphaLength","code","charCodeAt","base","isLowerAlpha","lowerA","isUpperAlpha","upperA","String","fromCharCode","rotateLetterWithKey","key","keyIndex","decrypt","keyCh","getCharacterWithMod","toOrdinal","isAlpha","str","index","charAt","upperZ","lowerZ","text","_text","_key","encrypt","convert","packMorse","args","arguments","None","shift","args_1","arg","Dot","Dash","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","EncodingDataBase_1","BrailleData","_super","_this","call","LetterA","Letter","LetterB","LetterC","LetterD","LetterE","LetterF","LetterG","LetterH","LetterI","LetterJ","LetterK","LetterL","LetterM","LetterN","LetterO","LetterP","LetterQ","LetterR","LetterS","LetterT","LetterU","LetterV","LetterW","LetterX","LetterY","LetterZ","Number0","Number","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","FormattingNumber","Formatting","FormattingCapital","PunctuationComma","Punctuation","PunctuationSemicolon","PunctuationApostrophe","PunctuationColon","PunctuationHyphen","PunctuationDecimalPoint","PunctuationFullStop","PunctuationExclamationPoint","PunctuationOpenQuote","PunctuationQuestionMark","PunctuationCloseQuote","PunctuationBracket","PunctuationSlash","instance","getAsciiTable","retVal","addAsciiRange","toAscii","getOrdinalTable","ascii","chCode","ordinalCode","array","start","end","conversion","maxValue","i","letter","leftPad","character","binary","getValue","ternary","octal","decimal","hexadecimal","Math","ceil","log","module","len","cache","pad","image","inlineSvg","viewBoxWidth","viewBoxHeight","render","convertCharacter","input","forcedCharacterEncoding","determineCharacterEncoding","Latin","baseTen","parseInt","Ascii","asciiPrintable","Ordinal","FiveBitBinary","appearsBinary","EightBitBinary","match","numeric","character_1","EncodingCharacterBase_1","Helpers_1","MorseData_1","MORSE_BITMASK","MorseData","_morse","toMorseString","morseChars","DOT","DASH","parseMorseString","morse","bits","backspace","substring","dot","dash","invertDotsAndDashes","Helpers","assert","indexOf","RESERVED_DIVIDER","replace","reverse","split","join","condition","assertMsg","message","word","name","colorCode","multiplier","toleranceInPercent","hasValue","undefined","getDisplayValue","hasTolerance","getDisplayTolerance","SemaphoreEncoding","FromDegrees","degrees","position","North","ToDegrees","direction","counter","BrailleData_1","_encoding","mask","toggle","map","_chars","_currentStr","_processPosition","_numberMode","invalidate","value_1","append","pop","space","update","CaesarUtils_1","apply","rotStr","fullKey","currentLetter","getRotation","getRotations","rotations","num","sigFigs","roundInternal","floor","round","func","RangeError","factor","getFactor","absFactor","abs","absNum","digits","pow","convertString","homogeneous","splitString","encoding_1","determineStringEncoding","reduce","encodingCount","encodingKeys","parsed_1","charEncoding","maxEncoding","maxCount","encodingKeys_1","filter","item","PunctuationPeriod","PunctuationForwardSlash","PunctuationOpenParenthesis","PunctuationCloseParenthesis","PunctuationAmpersand","PunctuationDoubleDash","PunctuationPlusSign","PunctuationUnderscore","PunctuationQuotationMark","PunctuationDollarSign","PunctuationAtSign","characterDivider","wordDivider","CHARACTER_DIVIDER","WORD_DIVIDER","wordCharacters","w","wc","_words","subarray","_b","word_1","s","toUpperCase","colors","currentColor","INVALID_RESISTOR","applyMultiplier","multipler","BLACK","BROWN","RED","ORANGE","YELLOW","GREEN","BLUE","VIOLET","GREY","WHITE","GOLD","SILVER","colorTable","SemaphoreData_1","SemaphoreEncoding_1","SemaphoreData","_directions","addDirection","parseEncoding","directions","slice","dir","splice","removeDirection","hasDirection","getDegrees","sort","a","getPotentialMatch","other","previousValue","currentValue"],"mappings":"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","file":"static/js/0.30e62d07.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrailleCharacter_1 = require(\"./Braille/BrailleCharacter\");\n\nexports.BrailleCharacter = BrailleCharacter_1.BrailleCharacter;\n\nvar BrailleDot_1 = require(\"./Braille/BrailleDot\");\n\nexports.BrailleDot = BrailleDot_1.BrailleDot;\n\nvar BrailleEncoding_1 = require(\"./Braille/BrailleEncoding\");\n\nexports.BrailleEncoding = BrailleEncoding_1.BrailleEncoding;\n\nvar BrailleStream_1 = require(\"./Braille/BrailleStream\");\n\nexports.BrailleStream = BrailleStream_1.BrailleStream;\n\nvar AutoKeyString_1 = require(\"./Cipher/AutoKeyString\");\n\nexports.AutoKeyString = AutoKeyString_1.AutoKeyString;\n\nvar CaesarString_1 = require(\"./Cipher/CaesarString\");\n\nexports.CaesarString = CaesarString_1.CaesarString;\n\nvar KeyedCipherStringBase_1 = require(\"./Cipher/KeyedCipherStringBase\");\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase_1.KeyedCipherStringBase;\n\nvar VigenereString_1 = require(\"./Cipher/VigenereString\");\n\nexports.VigenereString = VigenereString_1.VigenereString;\n\nvar CharacterImage_1 = require(\"./Common/CharacterImage\");\n\nexports.CharacterImage = CharacterImage_1.CharacterImage;\n\nvar EncodingCategory_1 = require(\"./Common/EncodingCategory\");\n\nexports.EncodingCategory = EncodingCategory_1.EncodingCategory;\n\nvar EncodingEntry_1 = require(\"./Common/EncodingEntry\");\n\nexports.EncodingEntry = EncodingEntry_1.EncodingEntry;\n\nvar InlineSvg_1 = require(\"./Common/InlineSvg\");\n\nexports.InlineSvg = InlineSvg_1.InlineSvg;\n\nvar CharacterAutoConvert_1 = require(\"./Conversion/CharacterAutoConvert\");\n\nexports.CharacterAutoConvert = CharacterAutoConvert_1.CharacterAutoConvert;\n\nvar CharacterConversion_1 = require(\"./Conversion/CharacterConversion\");\n\nexports.CharacterConversion = CharacterConversion_1.CharacterConversion;\n\nvar CharacterEncoding_1 = require(\"./Conversion/CharacterEncoding\");\n\nexports.CharacterEncoding = CharacterEncoding_1.CharacterEncoding;\n\nvar CharacterTableEntry_1 = require(\"./Conversion/CharacterTableEntry\");\n\nexports.CharacterTableEntry = CharacterTableEntry_1.CharacterTableEntry;\n\nvar SignificantFigures_1 = require(\"./Conversion/SignificantFigures\");\n\nexports.SignificantFigures = SignificantFigures_1.SignificantFigures;\n\nvar StringAutoConvert_1 = require(\"./Conversion/StringAutoConvert\");\n\nexports.StringAutoConvert = StringAutoConvert_1.StringAutoConvert;\n\nvar MorseCharacter_1 = require(\"./Morse/MorseCharacter\");\n\nexports.MorseCharacter = MorseCharacter_1.MorseCharacter;\n\nvar MorseEncoding_1 = require(\"./Morse/MorseEncoding\");\n\nexports.MorseEncoding = MorseEncoding_1.MorseEncoding;\n\nvar MorseString_1 = require(\"./Morse/MorseString\");\n\nexports.MorseString = MorseString_1.MorseString;\n\nvar NatoCharacter_1 = require(\"./Nato/NatoCharacter\");\n\nexports.NatoCharacter = NatoCharacter_1.NatoCharacter;\n\nvar NatoData_1 = require(\"./Nato/NatoData\");\n\nexports.NatoData = NatoData_1.NatoData;\n\nvar NavalFlags_1 = require(\"./NavalFlags/NavalFlags\");\n\nexports.NavalFlags = NavalFlags_1.NavalFlags;\n\nvar Resistor_1 = require(\"./Resistor/Resistor\");\n\nexports.Resistor = Resistor_1.Resistor;\n\nvar ResistorColorEntry_1 = require(\"./Resistor/ResistorColorEntry\");\n\nexports.ResistorColorEntry = ResistorColorEntry_1.ResistorColorEntry;\n\nvar SemaphoreCharacter_1 = require(\"./Semaphore/SemaphoreCharacter\");\n\nexports.SemaphoreCharacter = SemaphoreCharacter_1.SemaphoreCharacter;\n\nvar SemaphoreDegrees_1 = require(\"./Semaphore/SemaphoreDegrees\");\n\nexports.SemaphoreDegrees = SemaphoreDegrees_1.SemaphoreDegrees;\n\nvar SemaphoreDirection_1 = require(\"./Semaphore/SemaphoreDirection\");\n\nexports.SemaphoreDirection = SemaphoreDirection_1.SemaphoreDirection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EncodingCategory;\n\n(function (EncodingCategory) {\n  EncodingCategory[EncodingCategory[\"None\"] = 0] = \"None\";\n  EncodingCategory[EncodingCategory[\"Letter\"] = 2] = \"Letter\";\n  EncodingCategory[EncodingCategory[\"Number\"] = 4] = \"Number\";\n  EncodingCategory[EncodingCategory[\"Formatting\"] = 8] = \"Formatting\";\n  EncodingCategory[EncodingCategory[\"Punctuation\"] = 16] = \"Punctuation\";\n  EncodingCategory[EncodingCategory[\"All\"] = 255] = \"All\";\n})(EncodingCategory = exports.EncodingCategory || (exports.EncodingCategory = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleEncoding;\n\n(function (BrailleEncoding) {\n  BrailleEncoding[BrailleEncoding[\"None\"] = 0] = \"None\"; // Letters (first decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterA\"] = 1] = \"LetterA\";\n  BrailleEncoding[BrailleEncoding[\"LetterB\"] = 3] = \"LetterB\";\n  BrailleEncoding[BrailleEncoding[\"LetterC\"] = 9] = \"LetterC\";\n  BrailleEncoding[BrailleEncoding[\"LetterD\"] = 25] = \"LetterD\";\n  BrailleEncoding[BrailleEncoding[\"LetterE\"] = 17] = \"LetterE\";\n  BrailleEncoding[BrailleEncoding[\"LetterF\"] = 11] = \"LetterF\";\n  BrailleEncoding[BrailleEncoding[\"LetterG\"] = 27] = \"LetterG\";\n  BrailleEncoding[BrailleEncoding[\"LetterH\"] = 19] = \"LetterH\";\n  BrailleEncoding[BrailleEncoding[\"LetterI\"] = 10] = \"LetterI\";\n  BrailleEncoding[BrailleEncoding[\"LetterJ\"] = 26] = \"LetterJ\"; // Letters (second decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterK\"] = 5] = \"LetterK\";\n  BrailleEncoding[BrailleEncoding[\"LetterL\"] = 7] = \"LetterL\";\n  BrailleEncoding[BrailleEncoding[\"LetterM\"] = 13] = \"LetterM\";\n  BrailleEncoding[BrailleEncoding[\"LetterN\"] = 29] = \"LetterN\";\n  BrailleEncoding[BrailleEncoding[\"LetterO\"] = 21] = \"LetterO\";\n  BrailleEncoding[BrailleEncoding[\"LetterP\"] = 15] = \"LetterP\";\n  BrailleEncoding[BrailleEncoding[\"LetterQ\"] = 31] = \"LetterQ\";\n  BrailleEncoding[BrailleEncoding[\"LetterR\"] = 23] = \"LetterR\";\n  BrailleEncoding[BrailleEncoding[\"LetterS\"] = 14] = \"LetterS\";\n  BrailleEncoding[BrailleEncoding[\"LetterT\"] = 30] = \"LetterT\"; // Letters (third decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterU\"] = 37] = \"LetterU\";\n  BrailleEncoding[BrailleEncoding[\"LetterV\"] = 39] = \"LetterV\";\n  BrailleEncoding[BrailleEncoding[\"LetterX\"] = 45] = \"LetterX\";\n  BrailleEncoding[BrailleEncoding[\"LetterY\"] = 61] = \"LetterY\";\n  BrailleEncoding[BrailleEncoding[\"LetterZ\"] = 53] = \"LetterZ\"; // Letters (fourth decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterW\"] = 58] = \"LetterW\"; // Numbers\n\n  BrailleEncoding[BrailleEncoding[\"Number1\"] = 1] = \"Number1\";\n  BrailleEncoding[BrailleEncoding[\"Number2\"] = 3] = \"Number2\";\n  BrailleEncoding[BrailleEncoding[\"Number3\"] = 9] = \"Number3\";\n  BrailleEncoding[BrailleEncoding[\"Number4\"] = 25] = \"Number4\";\n  BrailleEncoding[BrailleEncoding[\"Number5\"] = 17] = \"Number5\";\n  BrailleEncoding[BrailleEncoding[\"Number6\"] = 11] = \"Number6\";\n  BrailleEncoding[BrailleEncoding[\"Number7\"] = 27] = \"Number7\";\n  BrailleEncoding[BrailleEncoding[\"Number8\"] = 19] = \"Number8\";\n  BrailleEncoding[BrailleEncoding[\"Number9\"] = 10] = \"Number9\";\n  BrailleEncoding[BrailleEncoding[\"Number0\"] = 26] = \"Number0\"; // Formatting\n\n  BrailleEncoding[BrailleEncoding[\"FormattingNumber\"] = 60] = \"FormattingNumber\";\n  BrailleEncoding[BrailleEncoding[\"FormattingCapital\"] = 32] = \"FormattingCapital\"; // Punctuation\n\n  BrailleEncoding[BrailleEncoding[\"PunctuationComma\"] = 2] = \"PunctuationComma\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSemicolon\"] = 6] = \"PunctuationSemicolon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationApostrophe\"] = 4] = \"PunctuationApostrophe\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationColon\"] = 18] = \"PunctuationColon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationHyphen\"] = 36] = \"PunctuationHyphen\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationDecimalPoint\"] = 40] = \"PunctuationDecimalPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationFullStop\"] = 50] = \"PunctuationFullStop\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationExclamationPoint\"] = 22] = \"PunctuationExclamationPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationOpenQuote\"] = 38] = \"PunctuationOpenQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationQuestionMark\"] = 38] = \"PunctuationQuestionMark\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationCloseQuote\"] = 52] = \"PunctuationCloseQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationBracket\"] = 54] = \"PunctuationBracket\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSlash\"] = 12] = \"PunctuationSlash\";\n})(BrailleEncoding = exports.BrailleEncoding || (exports.BrailleEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCharacterBase =\n/** @class */\nfunction () {\n  function EncodingCharacterBase(data, category) {\n    this._lookup = null;\n    this._data = data;\n    this._category = category;\n    this.invalidateLookup();\n  }\n\n  Object.defineProperty(EncodingCharacterBase.prototype, \"category\", {\n    get: function get() {\n      return this._category;\n    },\n    set: function set(value) {\n      if (this._category !== value) {\n        this._category = value;\n        this.invalidateLookup();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  EncodingCharacterBase.prototype.clear = function () {\n    this.onClear();\n    this.invalidateLookup();\n  };\n\n  EncodingCharacterBase.prototype.empty = function () {\n    return this.onEmpty();\n  };\n\n  EncodingCharacterBase.prototype.getExactMatches = function () {\n    return this.ensureLookup().exact;\n  };\n\n  EncodingCharacterBase.prototype.getPotentialMatches = function () {\n    return this.ensureLookup().partial;\n  };\n\n  EncodingCharacterBase.prototype.toString = function () {\n    return this.ensureLookup().exactString;\n  };\n\n  EncodingCharacterBase.prototype.valid = function () {\n    return this.ensureLookup().exact.length > 0;\n  };\n\n  EncodingCharacterBase.prototype.valueOf = function () {\n    return this.getEncoding();\n  };\n\n  EncodingCharacterBase.prototype.invalidateLookup = function () {\n    this._lookup = null;\n  };\n\n  EncodingCharacterBase.prototype.ensureLookup = function () {\n    if (!this._lookup) {\n      this._lookup = this._data.lookup(this.getEncoding(), this._category);\n    }\n\n    return this._lookup;\n  };\n\n  return EncodingCharacterBase;\n}();\n\nexports.EncodingCharacterBase = EncodingCharacterBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"./EncodingCategory\");\n\nvar EncodingEntry_1 = require(\"./EncodingEntry\");\n\nvar EncodingLookupResult_1 = require(\"./EncodingLookupResult\");\n\nvar EncodingDataBase =\n/** @class */\nfunction () {\n  function EncodingDataBase() {\n    this._entries = [];\n  }\n\n  EncodingDataBase.prototype.lookup = function (encoding, category) {\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var result = new EncodingLookupResult_1.EncodingLookupResult();\n\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var entry = _a[_i];\n\n      if ((entry.category & category) !== 0) {\n        if (entry.encoding === encoding) {\n          result.exact.push(entry);\n        } else if ((entry.encoding & encoding) === encoding) {\n          result.partial.push(entry);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  EncodingDataBase.prototype.addToList = function (encoding, category, display) {\n    this._entries.push(new EncodingEntry_1.EncodingEntry(encoding, category, display));\n  };\n\n  return EncodingDataBase;\n}();\n\nexports.EncodingDataBase = EncodingDataBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterConversion_1 = require(\"../Conversion/CharacterConversion\");\n\nvar CaesarUtils =\n/** @class */\nfunction () {\n  function CaesarUtils() {}\n\n  CaesarUtils.rotateLetter = function (ch, rot) {\n    if (ch.length !== 1) {\n      throw new Error('Expected a single character');\n    }\n\n    rot %= this.alphaLength;\n\n    if (rot < 0) {\n      rot += this.alphaLength;\n    }\n\n    var code = ch.charCodeAt(0);\n    var base = 0;\n\n    if (this.isLowerAlpha(code)) {\n      base = this.lowerA;\n    } else if (this.isUpperAlpha(code)) {\n      base = this.upperA;\n    } else {\n      return ch;\n    }\n\n    return String.fromCharCode((code - base + rot) % this.alphaLength + base);\n  };\n\n  CaesarUtils.rotateLetterWithKey = function (ch, key, keyIndex, decrypt) {\n    if (decrypt === void 0) {\n      decrypt = false;\n    }\n\n    if (key.length === 0) {\n      return ch;\n    }\n\n    var keyCh = this.getCharacterWithMod(key, keyIndex);\n    var rot = CharacterConversion_1.CharacterConversion.toOrdinal(keyCh) - 1;\n\n    if (decrypt) {\n      rot = -rot;\n    }\n\n    return this.rotateLetter(ch, rot);\n  };\n\n  CaesarUtils.isAlpha = function (ch) {\n    var code = ch.charCodeAt(0);\n    return this.isUpperAlpha(code) || this.isLowerAlpha(code);\n  };\n\n  CaesarUtils.getCharacterWithMod = function (str, index) {\n    return str.charAt(index % str.length);\n  };\n\n  CaesarUtils.isUpperAlpha = function (code) {\n    return code >= this.upperA && code <= this.upperZ;\n  };\n\n  CaesarUtils.isLowerAlpha = function (code) {\n    return code >= this.lowerA && code <= this.lowerZ;\n  };\n\n  CaesarUtils.upperA = 'A'.charCodeAt(0);\n  CaesarUtils.upperZ = 'Z'.charCodeAt(0);\n  CaesarUtils.lowerA = 'a'.charCodeAt(0);\n  CaesarUtils.lowerZ = 'z'.charCodeAt(0);\n  CaesarUtils.alphaLength = 26;\n  return CaesarUtils;\n}();\n\nexports.CaesarUtils = CaesarUtils;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar KeyedCipherStringBase =\n/** @class */\nfunction () {\n  function KeyedCipherStringBase(text, key) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    if (key === void 0) {\n      key = '';\n    }\n\n    this._text = text;\n    this._key = key;\n  }\n\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"key\", {\n    get: function get() {\n      return this._key;\n    },\n    set: function set(value) {\n      this._key = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  KeyedCipherStringBase.prototype.encrypt = function () {\n    return this.convert(false);\n  };\n\n  KeyedCipherStringBase.prototype.decrypt = function () {\n    return this.convert(true);\n  };\n\n  return KeyedCipherStringBase;\n}();\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CharacterEncoding;\n\n(function (CharacterEncoding) {\n  CharacterEncoding[CharacterEncoding[\"None\"] = 0] = \"None\";\n  CharacterEncoding[CharacterEncoding[\"Latin\"] = 1] = \"Latin\";\n  CharacterEncoding[CharacterEncoding[\"Ordinal\"] = 2] = \"Ordinal\";\n  CharacterEncoding[CharacterEncoding[\"FiveBitBinary\"] = 3] = \"FiveBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"EightBitBinary\"] = 4] = \"EightBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"Ascii\"] = 5] = \"Ascii\";\n})(CharacterEncoding = exports.CharacterEncoding || (exports.CharacterEncoding = {}));","\"use strict\"; // The encoding for morse is much less straightforward than the others. The dots\n// and dashes each use two bits of the integer starting with the least-\n// significant bit.\n//\n// Example:\n//\n// 'F' -> ..-.\n//\n// Which encodes as:\n//\n// 01 01 10 01\n//  .  .  -  .\n//\n// Since it's packed starting with the LSB, the resulting number is reversed:\n//\n// 01100101 -> 0x65\n//\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction packMorse() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var value = MorseEncoding.None;\n  var shift = 0;\n\n  for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n    var arg = args_1[_a];\n    arg <<= shift;\n    value |= arg;\n    shift += 2;\n  }\n\n  return value;\n}\n\nvar MorseEncoding;\n\n(function (MorseEncoding) {\n  MorseEncoding[MorseEncoding[\"None\"] = 0] = \"None\"; // Primitives\n\n  MorseEncoding[MorseEncoding[\"Dot\"] = 1] = \"Dot\";\n  MorseEncoding[MorseEncoding[\"Dash\"] = 2] = \"Dash\"; // Letters\n\n  MorseEncoding[MorseEncoding[\"LetterA\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterA\";\n  MorseEncoding[MorseEncoding[\"LetterB\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterB\";\n  MorseEncoding[MorseEncoding[\"LetterC\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterC\";\n  MorseEncoding[MorseEncoding[\"LetterD\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterD\";\n  MorseEncoding[MorseEncoding[\"LetterE\"] = packMorse(MorseEncoding.Dot)] = \"LetterE\";\n  MorseEncoding[MorseEncoding[\"LetterF\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterF\";\n  MorseEncoding[MorseEncoding[\"LetterG\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterG\";\n  MorseEncoding[MorseEncoding[\"LetterH\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterH\";\n  MorseEncoding[MorseEncoding[\"LetterI\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterI\";\n  MorseEncoding[MorseEncoding[\"LetterJ\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterJ\";\n  MorseEncoding[MorseEncoding[\"LetterK\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterK\";\n  MorseEncoding[MorseEncoding[\"LetterL\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterL\";\n  MorseEncoding[MorseEncoding[\"LetterM\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterM\";\n  MorseEncoding[MorseEncoding[\"LetterN\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterN\";\n  MorseEncoding[MorseEncoding[\"LetterO\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterO\";\n  MorseEncoding[MorseEncoding[\"LetterP\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterP\";\n  MorseEncoding[MorseEncoding[\"LetterQ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterQ\";\n  MorseEncoding[MorseEncoding[\"LetterR\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterR\";\n  MorseEncoding[MorseEncoding[\"LetterS\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterS\";\n  MorseEncoding[MorseEncoding[\"LetterT\"] = packMorse(MorseEncoding.Dash)] = \"LetterT\";\n  MorseEncoding[MorseEncoding[\"LetterU\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterU\";\n  MorseEncoding[MorseEncoding[\"LetterV\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterV\";\n  MorseEncoding[MorseEncoding[\"LetterW\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterW\";\n  MorseEncoding[MorseEncoding[\"LetterX\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterX\";\n  MorseEncoding[MorseEncoding[\"LetterY\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterY\";\n  MorseEncoding[MorseEncoding[\"LetterZ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterZ\"; // Numbers\n\n  MorseEncoding[MorseEncoding[\"Number0\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number0\";\n  MorseEncoding[MorseEncoding[\"Number1\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number1\";\n  MorseEncoding[MorseEncoding[\"Number2\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number2\";\n  MorseEncoding[MorseEncoding[\"Number3\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number3\";\n  MorseEncoding[MorseEncoding[\"Number4\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"Number4\";\n  MorseEncoding[MorseEncoding[\"Number5\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number5\";\n  MorseEncoding[MorseEncoding[\"Number6\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number6\";\n  MorseEncoding[MorseEncoding[\"Number7\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number7\";\n  MorseEncoding[MorseEncoding[\"Number8\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number8\";\n  MorseEncoding[MorseEncoding[\"Number9\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"Number9\"; // Punctuation\n\n  MorseEncoding[MorseEncoding[\"PunctuationPeriod\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationPeriod\";\n  MorseEncoding[MorseEncoding[\"PunctuationComma\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationComma\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuestionMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationQuestionMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationApostrophe\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationApostrophe\";\n  MorseEncoding[MorseEncoding[\"PunctuationExclamationPoint\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationExclamationPoint\";\n  MorseEncoding[MorseEncoding[\"PunctuationForwardSlash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationForwardSlash\";\n  MorseEncoding[MorseEncoding[\"PunctuationOpenParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationOpenParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationCloseParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationCloseParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationAmpersand\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationAmpersand\";\n  MorseEncoding[MorseEncoding[\"PunctuationColon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationColon\";\n  MorseEncoding[MorseEncoding[\"PunctuationSemicolon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationSemicolon\";\n  MorseEncoding[MorseEncoding[\"PunctuationDoubleDash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDoubleDash\";\n  MorseEncoding[MorseEncoding[\"PunctuationPlusSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationPlusSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationHyphen\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationHyphen\";\n  MorseEncoding[MorseEncoding[\"PunctuationUnderscore\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationUnderscore\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuotationMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationQuotationMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationDollarSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDollarSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationAtSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationAtSign\";\n})(MorseEncoding = exports.MorseEncoding || (exports.MorseEncoding = {}));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleData =\n/** @class */\nfunction (_super) {\n  __extends(BrailleData, _super);\n\n  function BrailleData() {\n    var _this = _super.call(this) || this;\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingCapital, EncodingCategory_1.EncodingCategory.Formatting, '^');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationDecimalPoint, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationFullStop, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationOpenQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationCloseQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    return _this;\n  }\n\n  BrailleData.instance = new BrailleData();\n  return BrailleData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.BrailleData = BrailleData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingEntry =\n/** @class */\nfunction () {\n  function EncodingEntry(encoding, category, display) {\n    this.encoding = encoding;\n    this.category = category;\n    this.display = display;\n  }\n\n  EncodingEntry.prototype.toString = function () {\n    return this.display;\n  };\n\n  return EncodingEntry;\n}();\n\nexports.EncodingEntry = EncodingEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterTableEntry_1 = require(\"./CharacterTableEntry\");\n\nvar CharacterConversion =\n/** @class */\nfunction () {\n  function CharacterConversion() {}\n\n  CharacterConversion.getAsciiTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 48, 57, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 97, 122, CharacterConversion.toAscii, 127);\n    return retVal;\n  };\n\n  CharacterConversion.getOrdinalTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toOrdinal, 26);\n    return retVal;\n  };\n\n  CharacterConversion.toAscii = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var ascii = ch.charCodeAt(0);\n\n    if (ascii >= 0 && ascii <= 127) {\n      return ascii;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.toOrdinal = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var chCode = ch.charCodeAt(0);\n    var ordinalCode = chCode - 'a'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    ordinalCode = chCode - 'A'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.addAsciiRange = function (array, start, end, conversion, maxValue) {\n    for (var i = start; i <= end; i++) {\n      var letter = String.fromCharCode(i);\n      array.push(new CharacterTableEntry_1.CharacterTableEntry(letter, conversion(letter), maxValue));\n    }\n  };\n\n  return CharacterConversion;\n}();\n\nexports.CharacterConversion = CharacterConversion;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar leftPad = require(\"left-pad\");\n\nvar CharacterTableEntry =\n/** @class */\nfunction () {\n  function CharacterTableEntry(character, value, maxValue) {\n    this.character = character;\n    this.binary = CharacterTableEntry.getValue(value, 2, maxValue);\n    this.ternary = CharacterTableEntry.getValue(value, 3, maxValue);\n    this.octal = CharacterTableEntry.getValue(value, 8, maxValue);\n    this.decimal = CharacterTableEntry.getValue(value, 10, maxValue);\n    this.hexadecimal = CharacterTableEntry.getValue(value, 16, maxValue);\n  }\n\n  CharacterTableEntry.getValue = function (value, base, maxValue) {\n    return leftPad(value.toString(base), Math.ceil(Math.log(maxValue) / Math.log(base)), '0');\n  };\n\n  return CharacterTableEntry;\n}();\n\nexports.CharacterTableEntry = CharacterTableEntry;","/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\n\nmodule.exports = leftPad;\nvar cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];\n\nfunction leftPad(str, len, ch) {\n  // convert `str` to a `string`\n  str = str + ''; // `len` is the `pad`'s length now\n\n  len = len - str.length; // doesn't need to pad\n\n  if (len <= 0) return str; // `ch` defaults to `' '`\n\n  if (!ch && ch !== 0) ch = ' '; // convert `ch` to a `string` cuz it could be a number\n\n  ch = ch + ''; // cache common use cases\n\n  if (ch === ' ' && len < 10) return cache[len] + str; // `pad` starts with an empty string\n\n  var pad = ''; // loop\n\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch; // divide `len` by 2, ditch the remainder\n\n    len >>= 1; // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n\n    if (len) ch += ch; // `len` is 0, exit the loop\n    else break;\n  } // pad `str`!\n\n\n  return pad + str;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage =\n/** @class */\nfunction () {\n  function CharacterImage(character, image) {\n    this.character = character;\n    this.image = image;\n  }\n\n  return CharacterImage;\n}();\n\nexports.CharacterImage = CharacterImage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar InlineSvg =\n/** @class */\nfunction () {\n  function InlineSvg(inlineSvg, viewBoxWidth, viewBoxHeight) {\n    this.inlineSvg = inlineSvg;\n    this.viewBoxWidth = viewBoxWidth;\n    this.viewBoxHeight = viewBoxHeight;\n  }\n\n  InlineSvg.prototype.render = function () {\n    // tslint:disable-next-line:max-line-length\n    return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 \" + this.viewBoxWidth + \" \" + this.viewBoxHeight + \"\\\">\" + this.inlineSvg + \"</svg>\";\n  };\n\n  return InlineSvg;\n}();\n\nexports.InlineSvg = InlineSvg;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar CharacterAutoConvert =\n/** @class */\nfunction () {\n  function CharacterAutoConvert() {} // Forced encoding can be useful when converting an entire string\n  // or simply dealing with binary which has no leading zeros\n\n\n  CharacterAutoConvert.convertCharacter = function (input, forcedCharacterEncoding) {\n    var encoding = null;\n\n    if (!forcedCharacterEncoding) {\n      encoding = this.determineCharacterEncoding(input);\n    } else {\n      encoding = forcedCharacterEncoding;\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.None) {\n      return '';\n    } // Assume that Latin characters should remain\n\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Latin) {\n      return input;\n    }\n\n    var baseTen = Number.parseInt(input, 10);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ascii) {\n      return CharacterAutoConvert.asciiPrintable(baseTen);\n    }\n\n    var asciiOffset = 64;\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ordinal) {\n      return CharacterAutoConvert.asciiPrintable(baseTen + asciiOffset);\n    }\n\n    var binary = Number.parseInt(input, 2);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.FiveBitBinary && this.appearsBinary(input)) {\n      return CharacterAutoConvert.asciiPrintable(binary + asciiOffset);\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.EightBitBinary && this.appearsBinary(input)) {\n      return CharacterAutoConvert.asciiPrintable(binary);\n    }\n\n    return '';\n  };\n\n  CharacterAutoConvert.asciiPrintable = function (index) {\n    if (index < 32 || index > 126) {\n      return '';\n    }\n\n    return String.fromCharCode(index);\n  };\n\n  CharacterAutoConvert.determineCharacterEncoding = function (input) {\n    if (input.match(/[a-z]/i)) {\n      return CharacterEncoding_1.CharacterEncoding.Latin;\n    }\n\n    var numeric = Number.parseInt(input, 10);\n\n    if (this.appearsBinary(input)) {\n      if (input.length === 5) {\n        return CharacterEncoding_1.CharacterEncoding.FiveBitBinary;\n      } else if (input.length === 8 || input.length === 7) {\n        return CharacterEncoding_1.CharacterEncoding.EightBitBinary;\n      }\n    }\n\n    if (input.length < 3 && numeric > 0 && numeric < 27) {\n      return CharacterEncoding_1.CharacterEncoding.Ordinal;\n    }\n\n    if (numeric > 64 && numeric < 91) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    if (numeric > 97 && numeric < 123) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    return CharacterEncoding_1.CharacterEncoding.None;\n  };\n\n  CharacterAutoConvert.appearsBinary = function (character) {\n    for (var _i = 0, character_1 = character; _i < character_1.length; _i++) {\n      var letter = character_1[_i];\n\n      if (letter !== '0' && letter !== '1') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return CharacterAutoConvert;\n}();\n\nexports.CharacterAutoConvert = CharacterAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar Helpers_1 = require(\"../Common/Helpers\");\n\nvar MorseData_1 = require(\"./MorseData\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MORSE_BITMASK = MorseEncoding_1.MorseEncoding.Dot | MorseEncoding_1.MorseEncoding.Dash;\n\nvar MorseCharacter =\n/** @class */\nfunction (_super) {\n  __extends(MorseCharacter, _super);\n\n  function MorseCharacter(str, category) {\n    if (str === void 0) {\n      str = '';\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, MorseData_1.MorseData.instance, category) || this;\n\n    _this._morse = str;\n    return _this;\n  }\n\n  MorseCharacter.toMorseString = function (encoding) {\n    var morseChars = '';\n\n    while (encoding !== MorseEncoding_1.MorseEncoding.None) {\n      if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dot) {\n        morseChars += MorseCharacter.DOT;\n      } else if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dash) {\n        morseChars += MorseCharacter.DASH;\n      } else {\n        throw new Error('Invalid morse bits');\n      }\n\n      encoding >>>= 2;\n    }\n\n    return morseChars;\n  };\n\n  MorseCharacter.parseMorseString = function (morse) {\n    var bits = MorseEncoding_1.MorseEncoding.None;\n\n    for (var i = morse.length - 1; i >= 0; i--) {\n      var ch = morse[i];\n\n      if (ch === MorseCharacter.DOT) {\n        bits |= MorseEncoding_1.MorseEncoding.Dot;\n      } else if (ch === MorseCharacter.DASH) {\n        bits |= MorseEncoding_1.MorseEncoding.Dash;\n      } else {\n        throw new Error('Invalid morse character');\n      }\n\n      bits <<= 2;\n    }\n\n    bits >>>= 2;\n    return bits;\n  };\n\n  Object.defineProperty(MorseCharacter.prototype, \"morseString\", {\n    get: function get() {\n      return this._morse;\n    },\n    set: function set(value) {\n      this._morse = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MorseCharacter.prototype.backspace = function () {\n    if (this._morse.length > 0) {\n      this._morse = this._morse.substring(0, this._morse.length - 1);\n      this.invalidateLookup();\n    }\n  };\n\n  MorseCharacter.prototype.dot = function () {\n    this._morse += MorseCharacter.DOT;\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.dash = function () {\n    this._morse += MorseCharacter.DASH;\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.invertDotsAndDashes = function () {\n    // Replace dots with a placeholder, dashes with dots, then placeholders with dashes\n    Helpers_1.Helpers.assert(this._morse.indexOf(MorseCharacter.RESERVED_DIVIDER) < 0);\n    this._morse = this._morse.replace(/\\./g, 'A').replace(/-/g, MorseCharacter.DOT).replace(/A/g, MorseCharacter.DASH);\n  };\n\n  MorseCharacter.prototype.reverse = function () {\n    this._morse = this._morse.split('').reverse().join('');\n  };\n\n  MorseCharacter.prototype.onClear = function () {\n    this._morse = '';\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.onEmpty = function () {\n    return this._morse.length === 0;\n  };\n\n  MorseCharacter.prototype.getEncoding = function () {\n    return MorseCharacter.parseMorseString(this._morse);\n  };\n\n  MorseCharacter.DOT = '.';\n  MorseCharacter.DASH = '-'; // Character which may not appear in morse and is reserved for use by this class\n\n  MorseCharacter.RESERVED_DIVIDER = 'A';\n  return MorseCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.MorseCharacter = MorseCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Helpers =\n/** @class */\nfunction () {\n  function Helpers() {}\n\n  Helpers.assert = function (condition) {\n    if (!condition) {\n      throw new Error();\n    }\n  };\n\n  Helpers.assertMsg = function (condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  };\n\n  return Helpers;\n}();\n\nexports.Helpers = Helpers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter =\n/** @class */\nfunction () {\n  function NatoCharacter(character, word) {\n    this.character = character;\n    this.word = word;\n  }\n\n  return NatoCharacter;\n}();\n\nexports.NatoCharacter = NatoCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry =\n/** @class */\nfunction () {\n  function ResistorColorEntry(name, colorCode, multiplier, value, toleranceInPercent) {\n    this.name = name;\n    this.value = value;\n    this.colorCode = colorCode;\n    this.multiplier = multiplier;\n    this.toleranceInPercent = toleranceInPercent;\n  }\n\n  ResistorColorEntry.prototype.hasValue = function () {\n    return this.value !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayValue = function () {\n    if (this.value === undefined) {\n      return '';\n    }\n\n    return this.value.toString();\n  };\n\n  ResistorColorEntry.prototype.hasTolerance = function () {\n    return this.toleranceInPercent !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayTolerance = function () {\n    if (this.toleranceInPercent === undefined) {\n      return '';\n    }\n\n    return this.toleranceInPercent + \"%\";\n  };\n\n  return ResistorColorEntry;\n}();\n\nexports.ResistorColorEntry = ResistorColorEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreEncoding;\n\n(function (SemaphoreEncoding) {\n  SemaphoreEncoding[SemaphoreEncoding[\"None\"] = 0] = \"None\"; // Letters\n\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterA\"] = 96] = \"LetterA\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterB\"] = 160] = \"LetterB\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterC\"] = 288] = \"LetterC\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterD\"] = 34] = \"LetterD\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterE\"] = 36] = \"LetterE\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterF\"] = 40] = \"LetterF\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterG\"] = 48] = \"LetterG\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterH\"] = 192] = \"LetterH\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterI\"] = 320] = \"LetterI\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterJ\"] = 10] = \"LetterJ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterK\"] = 66] = \"LetterK\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterL\"] = 68] = \"LetterL\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterM\"] = 72] = \"LetterM\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterN\"] = 80] = \"LetterN\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterO\"] = 384] = \"LetterO\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterP\"] = 130] = \"LetterP\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterQ\"] = 132] = \"LetterQ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterR\"] = 136] = \"LetterR\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterS\"] = 144] = \"LetterS\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterT\"] = 258] = \"LetterT\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterU\"] = 260] = \"LetterU\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterV\"] = 18] = \"LetterV\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterW\"] = 12] = \"LetterW\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterX\"] = 20] = \"LetterX\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterY\"] = 264] = \"LetterY\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterZ\"] = 24] = \"LetterZ\"; // Numbers\n\n  SemaphoreEncoding[SemaphoreEncoding[\"Number1\"] = 96] = \"Number1\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number2\"] = 160] = \"Number2\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number3\"] = 288] = \"Number3\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number4\"] = 34] = \"Number4\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number5\"] = 36] = \"Number5\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number6\"] = 40] = \"Number6\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number7\"] = 48] = \"Number7\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number8\"] = 192] = \"Number8\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number9\"] = 320] = \"Number9\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number0\"] = 66] = \"Number0\"; // Formatting\n\n  SemaphoreEncoding[SemaphoreEncoding[\"FormattingNumber\"] = 6] = \"FormattingNumber\";\n})(SemaphoreEncoding = exports.SemaphoreEncoding || (exports.SemaphoreEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SemaphoreDirection_1 = require(\"./SemaphoreDirection\");\n\nvar SemaphoreDegrees =\n/** @class */\nfunction () {\n  function SemaphoreDegrees() {}\n\n  SemaphoreDegrees.FromDegrees = function (degrees) {\n    if (degrees >= 360) {\n      degrees = degrees % 360;\n    }\n\n    if (degrees % 45 !== 0 || degrees < 0) {\n      throw new Error('Invalid degrees');\n    }\n\n    var position = degrees / 45;\n    return SemaphoreDirection_1.SemaphoreDirection.North << position;\n  };\n\n  SemaphoreDegrees.ToDegrees = function (direction) {\n    var position = SemaphoreDirection_1.SemaphoreDirection.North;\n    var counter = 0;\n\n    while (counter < 9 && position !== direction) {\n      position = position << 1;\n      counter++;\n    }\n\n    return counter * 45;\n  };\n\n  return SemaphoreDegrees;\n}();\n\nexports.SemaphoreDegrees = SemaphoreDegrees;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreDirection;\n\n(function (SemaphoreDirection) {\n  SemaphoreDirection[SemaphoreDirection[\"None\"] = 0] = \"None\";\n  SemaphoreDirection[SemaphoreDirection[\"North\"] = 2] = \"North\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthEast\"] = 4] = \"NorthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"East\"] = 8] = \"East\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthEast\"] = 16] = \"SouthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"South\"] = 32] = \"South\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthWest\"] = 64] = \"SouthWest\";\n  SemaphoreDirection[SemaphoreDirection[\"West\"] = 128] = \"West\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthWest\"] = 256] = \"NorthWest\";\n})(SemaphoreDirection = exports.SemaphoreDirection || (exports.SemaphoreDirection = {}));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleCharacter =\n/** @class */\nfunction (_super) {\n  __extends(BrailleCharacter, _super);\n\n  function BrailleCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = BrailleEncoding_1.BrailleEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, BrailleData_1.BrailleData.instance, category) || this;\n\n    _this._encoding = encoding;\n    return _this;\n  }\n\n  Object.defineProperty(BrailleCharacter.prototype, \"encoding\", {\n    get: function get() {\n      return this._encoding;\n    },\n    set: function set(value) {\n      this._encoding = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleCharacter.prototype.get = function (mask) {\n    return (this._encoding & mask) === mask;\n  };\n\n  BrailleCharacter.prototype.toggle = function (mask) {\n    this._encoding ^= mask;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onClear = function () {\n    this._encoding = BrailleEncoding_1.BrailleEncoding.None;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onEmpty = function () {\n    return this._encoding === BrailleEncoding_1.BrailleEncoding.None;\n  };\n\n  BrailleCharacter.prototype.getEncoding = function () {\n    return this._encoding;\n  };\n\n  return BrailleCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.BrailleCharacter = BrailleCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingLookupResult =\n/** @class */\nfunction () {\n  function EncodingLookupResult() {\n    this.exact = [];\n    this.partial = [];\n  }\n\n  Object.defineProperty(EncodingLookupResult.prototype, \"exactString\", {\n    get: function get() {\n      return this.exact.map(function (value) {\n        return value.toString();\n      }).join('/');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return EncodingLookupResult;\n}();\n\nexports.EncodingLookupResult = EncodingLookupResult;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleDot;\n\n(function (BrailleDot) {\n  BrailleDot[BrailleDot[\"None\"] = 0] = \"None\";\n  BrailleDot[BrailleDot[\"UpperLeft\"] = 1] = \"UpperLeft\";\n  BrailleDot[BrailleDot[\"MiddleLeft\"] = 2] = \"MiddleLeft\";\n  BrailleDot[BrailleDot[\"LowerLeft\"] = 4] = \"LowerLeft\";\n  BrailleDot[BrailleDot[\"UpperRight\"] = 8] = \"UpperRight\";\n  BrailleDot[BrailleDot[\"MiddleRight\"] = 16] = \"MiddleRight\";\n  BrailleDot[BrailleDot[\"LowerRight\"] = 32] = \"LowerRight\";\n})(BrailleDot = exports.BrailleDot || (exports.BrailleDot = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleStream =\n/** @class */\nfunction () {\n  function BrailleStream() {\n    this._chars = [];\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n    this.invalidate();\n  }\n\n  Object.defineProperty(BrailleStream.prototype, \"chars\", {\n    get: function get() {\n      return this._chars;\n    },\n    set: function set(value) {\n      this.clear();\n\n      for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n        var ch = value_1[_i];\n\n        this._chars.push(ch);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleStream.prototype.append = function (ch) {\n    this._chars.push(ch.valueOf());\n  };\n\n  BrailleStream.prototype.clear = function () {\n    this._chars.length = 0;\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.backspace = function () {\n    this._chars.pop();\n\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.space = function () {\n    this._chars.push(BrailleEncoding_1.BrailleEncoding.None);\n  };\n\n  BrailleStream.prototype.toString = function () {\n    this.update();\n    return this._currentStr;\n  };\n\n  BrailleStream.prototype.invalidate = function () {\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n  };\n\n  BrailleStream.prototype.update = function () {\n    while (this._processPosition < this._chars.length) {\n      var ch = this._chars[this._processPosition];\n\n      switch (ch) {\n        case BrailleEncoding_1.BrailleEncoding.None:\n          this._numberMode = false;\n          this._currentStr += ' ';\n          break;\n\n        case BrailleEncoding_1.BrailleEncoding.FormattingNumber:\n          this._numberMode = true;\n          this._currentStr += '#';\n          break;\n\n        default:\n          var category = EncodingCategory_1.EncodingCategory.Punctuation | (this._numberMode ? EncodingCategory_1.EncodingCategory.Number : EncodingCategory_1.EncodingCategory.Letter);\n          var exact = BrailleData_1.BrailleData.instance.lookup(ch, category).exact;\n\n          if (exact.length > 0) {\n            this._currentStr += exact[0].toString();\n          }\n\n      }\n\n      this._processPosition++;\n    }\n  };\n\n  return BrailleStream;\n}();\n\nexports.BrailleStream = BrailleStream;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar AutoKeyString =\n/** @class */\nfunction (_super) {\n  __extends(AutoKeyString, _super);\n\n  function AutoKeyString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AutoKeyString.prototype.convert = function (decrypt) {\n    if (this._key.length < 1) {\n      return this._text;\n    } else {\n      var rotStr = [];\n      var keyIndex = 0;\n      var fullKey = this._key;\n\n      for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n        var ch = _a[_i];\n\n        if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n          var currentLetter = CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, fullKey, keyIndex++, decrypt);\n          rotStr.push(currentLetter);\n\n          if (decrypt) {\n            fullKey += currentLetter;\n          } else {\n            fullKey += ch;\n          }\n        } else {\n          rotStr.push(ch);\n        }\n      }\n\n      return rotStr.join('');\n    }\n  };\n\n  return AutoKeyString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.AutoKeyString = AutoKeyString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar CaesarString =\n/** @class */\nfunction () {\n  function CaesarString(text) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    this._text = text;\n  }\n\n  Object.defineProperty(CaesarString.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CaesarString.prototype.getRotation = function (rot) {\n    var rotStr = [];\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n      rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetter(ch, rot));\n    }\n\n    return rotStr.join('');\n  };\n\n  CaesarString.prototype.getRotations = function () {\n    var rotations = [];\n    rotations.push(this._text);\n\n    for (var i = 1; i < 26; i++) {\n      rotations.push(this.getRotation(i));\n    }\n\n    return rotations;\n  };\n\n  return CaesarString;\n}();\n\nexports.CaesarString = CaesarString;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar VigenereString =\n/** @class */\nfunction (_super) {\n  __extends(VigenereString, _super);\n\n  function VigenereString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  VigenereString.prototype.convert = function (decrypt) {\n    var rotStr = [];\n    var keyIndex = 0;\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n        rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, this._key, keyIndex++, decrypt));\n      } else {\n        rotStr.push(ch);\n      }\n    }\n\n    return rotStr.join('');\n  };\n\n  return VigenereString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.VigenereString = VigenereString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SignificantFigures =\n/** @class */\nfunction () {\n  function SignificantFigures() {}\n\n  SignificantFigures.ceil = function (num, sigFigs) {\n    return this.roundInternal(Math.ceil, num, sigFigs);\n  };\n\n  SignificantFigures.floor = function (num, sigFigs) {\n    return this.roundInternal(Math.floor, num, sigFigs);\n  };\n\n  SignificantFigures.round = function (num, sigFigs) {\n    return this.roundInternal(Math.round, num, sigFigs);\n  };\n\n  SignificantFigures.roundInternal = function (func, num, sigFigs) {\n    if (num === 0) {\n      return num;\n    }\n\n    if (sigFigs <= 0) {\n      throw new RangeError('sigFigs value must be positive');\n    }\n\n    var factor = this.getFactor(num, sigFigs);\n\n    if (factor > 0) {\n      return func(num / factor) * factor;\n    } else if (factor < 0) {\n      var absFactor = Math.abs(factor);\n      return func(num * absFactor) / absFactor;\n    } else {\n      return num;\n    }\n  };\n\n  SignificantFigures.getFactor = function (num, sigFigs) {\n    var absNum = Math.abs(num);\n    var digits = 0;\n\n    if (absNum < 1) {\n      digits = -sigFigs;\n    } else {\n      digits = Math.ceil(Math.log(absNum) / Math.log(10)) - sigFigs;\n    }\n\n    if (digits < 0) {\n      return -Math.pow(10, Math.abs(digits));\n    } else {\n      return Math.pow(10, digits);\n    }\n  };\n\n  return SignificantFigures;\n}();\n\nexports.SignificantFigures = SignificantFigures;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterAutoConvert_1 = require(\"./CharacterAutoConvert\");\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar StringAutoConvert =\n/** @class */\nfunction () {\n  function StringAutoConvert() {}\n\n  StringAutoConvert.convertString = function (input, homogeneous) {\n    var split = this.splitString(input);\n\n    if (homogeneous) {\n      var encoding_1 = this.determineStringEncoding(input);\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter, encoding_1);\n      }, '');\n    } else {\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter);\n      }, '');\n    }\n  };\n\n  StringAutoConvert.determineStringEncoding = function (input) {\n    var encodingCount = {};\n    var parsed = this.splitString(input);\n    var encodingKeys = [];\n\n    for (var _i = 0, parsed_1 = parsed; _i < parsed_1.length; _i++) {\n      var letter = parsed_1[_i];\n      var charEncoding = CharacterAutoConvert_1.CharacterAutoConvert.determineCharacterEncoding(letter);\n\n      if (!encodingCount[charEncoding]) {\n        encodingCount[charEncoding] = 1;\n        encodingKeys.push(charEncoding);\n      } else {\n        encodingCount[charEncoding] = encodingCount[charEncoding] + 1;\n      }\n    }\n\n    var maxCount = 0;\n    var maxEncoding;\n    maxEncoding = CharacterEncoding_1.CharacterEncoding.None;\n\n    for (var _a = 0, encodingKeys_1 = encodingKeys; _a < encodingKeys_1.length; _a++) {\n      var encoding = encodingKeys_1[_a];\n\n      if (encodingCount[encoding] > maxCount) {\n        maxCount = encodingCount[encoding];\n        maxEncoding = encoding;\n      }\n    }\n\n    return maxEncoding;\n  };\n\n  StringAutoConvert.splitString = function (input) {\n    return input.split(' ').filter(function (item) {\n      return item !== '';\n    });\n  };\n\n  return StringAutoConvert;\n}();\n\nexports.StringAutoConvert = StringAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MorseData =\n/** @class */\nfunction (_super) {\n  __extends(MorseData, _super);\n\n  function MorseData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9'); // Punctuation\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPeriod, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationForwardSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationOpenParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationCloseParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAmpersand, EncodingCategory_1.EncodingCategory.Punctuation, '&');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDoubleDash, EncodingCategory_1.EncodingCategory.Punctuation, '=');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPlusSign, EncodingCategory_1.EncodingCategory.Punctuation, '+');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationUnderscore, EncodingCategory_1.EncodingCategory.Punctuation, '_');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuotationMark, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDollarSign, EncodingCategory_1.EncodingCategory.Punctuation, '$');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAtSign, EncodingCategory_1.EncodingCategory.Punctuation, '@');\n\n    return _this;\n  }\n\n  MorseData.instance = new MorseData();\n  return MorseData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.MorseData = MorseData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Helpers_1 = require(\"../Common/Helpers\");\n\nvar MorseCharacter_1 = require(\"./MorseCharacter\"); // MorseString represents a string of multiple morse characters.  It allows for a longer representation\n// to be converted to a single string and allows for sentence-level transforms such as reversing\n// the order of tokens.\n\n\nvar MorseString =\n/** @class */\nfunction () {\n  function MorseString(morse, characterDivider, wordDivider) {\n    if (morse === void 0) {\n      morse = '';\n    }\n\n    if (characterDivider === void 0) {\n      characterDivider = MorseString.CHARACTER_DIVIDER;\n    }\n\n    if (wordDivider === void 0) {\n      wordDivider = MorseString.WORD_DIVIDER;\n    } // The dividers should be single characters which don't clash with the other string content\n\n\n    Helpers_1.Helpers.assertMsg(characterDivider.length === 1, 'Divider must be a single character');\n    Helpers_1.Helpers.assertMsg(wordDivider.length === 1, 'Divider must be a single character');\n    Helpers_1.Helpers.assertMsg(characterDivider !== wordDivider, 'Dividers must be different from each other');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Character divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Word divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Word divider must not be a reserved value');\n    Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Word divider must not be a reserved value');\n    var words = morse.split(wordDivider).filter(function (w) {\n      return w.length > 0;\n    }); // Discard any empty characters (caused by trailing separator)\n\n    var wordCharacters = words.map(function (w) {\n      return w.split(characterDivider).filter(function (wc) {\n        return wc.length > 0;\n      });\n    });\n    this._words = wordCharacters.map(function (subarray) {\n      return subarray.map(function (wc) {\n        return new MorseCharacter_1.MorseCharacter(wc);\n      });\n    });\n  } // reverse reverses the order of all tokens in the string (including separators), such as would be\n  // the case if you were reading the data for a puzzle backwards.\n\n\n  MorseString.prototype.reverse = function () {\n    for (var i = 0; i < this._words.length; i++) {\n      for (var _i = 0, _a = this._words[i]; _i < _a.length; _i++) {\n        var c = _a[_i]; // Reverse the dots/dashes in each letter\n\n        c.reverse();\n      } // Reverse the letters in each word\n\n\n      this._words[i] = this._words[i].reverse();\n    } // Reverse the order of the words\n\n\n    this._words = this._words.reverse();\n    return this;\n  }; // invertDotsAndDashes switches all dots and dashes in the input, such as would be the case if\n  // you had two ambiguous symbols for dot/dash and selected the wrong mapping.\n\n\n  MorseString.prototype.invertDotsAndDashes = function () {\n    for (var _i = 0, _a = this._words; _i < _a.length; _i++) {\n      var word = _a[_i];\n\n      for (var _b = 0, word_1 = word; _b < word_1.length; _b++) {\n        var c = word_1[_b];\n        c.invertDotsAndDashes();\n      }\n    }\n\n    return this;\n  };\n\n  MorseString.prototype.toString = function () {\n    var s = '';\n\n    for (var i = 0; i < this._words.length; i++) {\n      if (i > 0) {\n        s += ' '; // This is a new word\n      }\n\n      for (var _i = 0, _a = this._words[i]; _i < _a.length; _i++) {\n        var c = _a[_i];\n        s += c.toString() || '?';\n      }\n    }\n\n    return s;\n  };\n\n  MorseString.CHARACTER_DIVIDER = '/';\n  MorseString.WORD_DIVIDER = ' ';\n  return MorseString;\n}();\n\nexports.MorseString = MorseString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter_1 = require(\"./NatoCharacter\"); // There's no concept of a 'partial match' for a NATO letter, so there's no\n// reason to derive from EncodingDataBase.\n\n\nvar NatoData =\n/** @class */\nfunction () {\n  function NatoData() {\n    this._entries = [new NatoCharacter_1.NatoCharacter('A', 'Alfa'), new NatoCharacter_1.NatoCharacter('B', 'Bravo'), new NatoCharacter_1.NatoCharacter('C', 'Charlie'), new NatoCharacter_1.NatoCharacter('D', 'Delta'), new NatoCharacter_1.NatoCharacter('E', 'Echo'), new NatoCharacter_1.NatoCharacter('F', 'Foxtrot'), new NatoCharacter_1.NatoCharacter('G', 'Golf'), new NatoCharacter_1.NatoCharacter('H', 'Hotel'), new NatoCharacter_1.NatoCharacter('I', 'India'), new NatoCharacter_1.NatoCharacter('J', 'Juliet'), new NatoCharacter_1.NatoCharacter('K', 'Kilo'), new NatoCharacter_1.NatoCharacter('L', 'Lima'), new NatoCharacter_1.NatoCharacter('M', 'Mike'), new NatoCharacter_1.NatoCharacter('N', 'November'), new NatoCharacter_1.NatoCharacter('O', 'Oscar'), new NatoCharacter_1.NatoCharacter('P', 'Papa'), new NatoCharacter_1.NatoCharacter('Q', 'Quebec'), new NatoCharacter_1.NatoCharacter('R', 'Romeo'), new NatoCharacter_1.NatoCharacter('S', 'Sierra'), new NatoCharacter_1.NatoCharacter('T', 'Tango'), new NatoCharacter_1.NatoCharacter('U', 'Uniform'), new NatoCharacter_1.NatoCharacter('V', 'Victor'), new NatoCharacter_1.NatoCharacter('W', 'Whiskey'), new NatoCharacter_1.NatoCharacter('X', 'X-ray'), new NatoCharacter_1.NatoCharacter('Y', 'Yankee'), new NatoCharacter_1.NatoCharacter('Z', 'Zulu')];\n  }\n\n  Object.defineProperty(NatoData.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NatoData.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NatoData.instance = new NatoData();\n  return NatoData;\n}();\n\nexports.NatoData = NatoData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage_1 = require(\"../Common/CharacterImage\");\n\nvar InlineSvg_1 = require(\"../Common/InlineSvg\");\n\nvar NavalFlags =\n/** @class */\nfunction () {\n  function NavalFlags() {\n    this._entries = [// tslint:disable:max-line-length (SVG images are messy)\n    new CharacterImage_1.CharacterImage('A', new InlineSvg_1.InlineSvg(\"<path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('B', new InlineSvg_1.InlineSvg('<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#f00\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>', 180, 180)), new CharacterImage_1.CharacterImage('C', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"46.8\\\" width=\\\"144\\\" height=\\\"86.4\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"75.6\\\" width=\\\"144\\\" height=\\\"28.8\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('D', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"54\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('E', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"90\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('F', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 l 72,72 l -72,72 l -72,-72 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('G', new InlineSvg_1.InlineSvg(\"<path fill=\\\"#000094\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#FC0\\\" stroke-width=\\\"24\\\" d=\\\"m30,18v144m48,0V18m48,0v144\\\"/>\\n      <path d=\\\"M18,18H162V162H18z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('H', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('I', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <circle cx=\\\"90\\\" cy=\\\"90\\\" r=\\\"36\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('J', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"66\\\" width=\\\"144\\\" height=\\\"48\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('K', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('L', new InlineSvg_1.InlineSvg(\"<rect x=\\\"16\\\" y=\\\"16\\\" width=\\\"148\\\" height=\\\"148\\\" rx=\\\"2\\\"/>\\n      <path fill=\\\"#FC0\\\" d=\\\"m20,20h70v140h70V90H20\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('M', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#fff\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('N', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 54 V 162 H 90 V 18 H 126 V 162 H 162 V 126 H 18 V 90 H 162 V 54 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('O', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('P', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Q', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('R', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#fc0\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('S', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('T', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"96\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"48\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('U', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#ffffff\\\"/>\\n      <path d=\\\"M 18,18 H 90 V 90 H 18 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 162,91 H 91 V 162 H 162 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('V', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#f00\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('W', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"42\\\" y=\\\"42\\\" width=\\\"96\\\" height=\\\"96\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"66\\\" y=\\\"66\\\" width=\\\"48\\\" height=\\\"48\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('X', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#000094\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Y', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\"><path d=\\\"m18,18h144v144H18\\\"/></clipPath>\\n      <path fill=\\\"#FC0\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#F00\\\" stroke-dasharray=\\\"18.8\\\" stroke-width=\\\"250\\\" clip-path=\\\"url(#c)\\\" d=\\\"m4,4 160,160\\\"/>\\n      <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\" d=\\\"M18,18H162V162H18z\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Z', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 V 162 H 162 z\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 162,18 V 162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 90,90 L 162,162 H 18 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180))];\n  }\n\n  Object.defineProperty(NavalFlags.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NavalFlags.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NavalFlags.instance = new NavalFlags();\n  return NavalFlags;\n}();\n\nexports.NavalFlags = NavalFlags;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry_1 = require(\"./ResistorColorEntry\");\n\nvar Resistor =\n/** @class */\nfunction () {\n  function Resistor() {}\n  /**\n   * getValue assumes there is no tolerance band, as tolerance is not part of\n   * the value calculation\n   */\n\n\n  Resistor.getValue = function (colors) {\n    if (colors.length < 3 || colors.length > 4) {\n      throw new RangeError('Invalid resistor size');\n    } // Should we throw an error if the first color is black?  In resistors, it's\n    // technically not allowed, but in puzzle events who knows what they'll do.\n    // The math works out fine (it's just a leading zero), so for now it's\n    // allowed.\n    // Iterate through all but the final band (the multipler) and extract the\n    // values\n\n\n    var value = 0;\n\n    for (var i = 0; i < colors.length - 1; ++i) {\n      var currentColor = colors[i];\n\n      if (currentColor.value === undefined) {\n        return Resistor.INVALID_RESISTOR;\n      }\n\n      value *= 10;\n      value += currentColor.value;\n    }\n\n    return Resistor.applyMultiplier(value, colors[colors.length - 1].multiplier);\n  };\n\n  Resistor.getDisplayValue = function (value) {\n    if (value >= 1000000000) {\n      return value / 1000000000 + \"G\";\n    } else if (value >= 1000000) {\n      return value / 1000000 + \"M\";\n    } else if (value >= 1000) {\n      return value / 1000 + \"k\";\n    } else {\n      return value.toString();\n    }\n  };\n\n  Resistor.applyMultiplier = function (value, multipler) {\n    if (multipler >= 1) {\n      return value * multipler;\n    } else if (multipler > 0) {\n      // Avoid floating point multiplication issues\n      return value / (1 / multipler);\n    } else {\n      throw new RangeError('Invalid multiplier');\n    }\n  }; // Name, Color, Multiplier, Value, Tolerance\n\n\n  Resistor.BLACK = new ResistorColorEntry_1.ResistorColorEntry('Black', '#000000', 1, 0);\n  Resistor.BROWN = new ResistorColorEntry_1.ResistorColorEntry('Brown', '#8B4513', 10, 1, 1);\n  Resistor.RED = new ResistorColorEntry_1.ResistorColorEntry('Red', '#FF0000', 100, 2, 2);\n  Resistor.ORANGE = new ResistorColorEntry_1.ResistorColorEntry('Orange', '#EE7420', 1000, 3);\n  Resistor.YELLOW = new ResistorColorEntry_1.ResistorColorEntry('Yellow', '#FFFF00', 10000, 4);\n  Resistor.GREEN = new ResistorColorEntry_1.ResistorColorEntry('Green', '#008000', 100000, 5, 0.5);\n  Resistor.BLUE = new ResistorColorEntry_1.ResistorColorEntry('Blue', '#0000FF', 1000000, 6, 0.25);\n  Resistor.VIOLET = new ResistorColorEntry_1.ResistorColorEntry('Violet', '#800080', 10000000, 7, 0.1);\n  Resistor.GREY = new ResistorColorEntry_1.ResistorColorEntry('Grey', '#808080', 100000000, 8);\n  Resistor.WHITE = new ResistorColorEntry_1.ResistorColorEntry('White', '#FFFFFF', 1000000000, 9);\n  Resistor.GOLD = new ResistorColorEntry_1.ResistorColorEntry('Gold', '#AB8D3F', 0.1, undefined, 5);\n  Resistor.SILVER = new ResistorColorEntry_1.ResistorColorEntry('Silver', '#C0C0C0', 0.01, undefined, 10);\n  Resistor.colorTable = [Resistor.BLACK, Resistor.BROWN, Resistor.RED, Resistor.ORANGE, Resistor.YELLOW, Resistor.GREEN, Resistor.BLUE, Resistor.VIOLET, Resistor.GREY, Resistor.WHITE, Resistor.GOLD, Resistor.SILVER];\n  Resistor.INVALID_RESISTOR = -1;\n  return Resistor;\n}();\n\nexports.Resistor = Resistor;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar SemaphoreData_1 = require(\"./SemaphoreData\");\n\nvar SemaphoreDegrees_1 = require(\"./SemaphoreDegrees\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreCharacter =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreCharacter, _super);\n\n  function SemaphoreCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = SemaphoreEncoding_1.SemaphoreEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, SemaphoreData_1.SemaphoreData.instance, category) || this;\n\n    _this._directions = [];\n\n    _this.addDirection(encoding);\n\n    return _this;\n  }\n\n  SemaphoreCharacter.parseEncoding = function (encoding) {\n    var directions = [];\n\n    for (var i = 1; i <= 8; i++) {\n      var direction = 1 << i;\n\n      if ((encoding & direction) === direction) {\n        directions.push(direction);\n      }\n    }\n\n    return directions;\n  };\n\n  Object.defineProperty(SemaphoreCharacter.prototype, \"directions\", {\n    get: function get() {\n      return this._directions;\n    },\n    set: function set(value) {\n      this._directions = value.slice(0, 2);\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SemaphoreCharacter.prototype.addDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      this._directions.push(dir);\n    }\n\n    if (this._directions.length > 2) {\n      this._directions.splice(0, this._directions.length - 2);\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.removeDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      var index = this._directions.indexOf(dir);\n\n      if (index >= 0) {\n        this._directions.splice(index, 1);\n      }\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.hasDirection = function (direction) {\n    return this._directions.indexOf(direction) >= 0;\n  };\n\n  SemaphoreCharacter.prototype.getDegrees = function () {\n    return this._directions.map(function (value) {\n      return SemaphoreDegrees_1.SemaphoreDegrees.ToDegrees(value);\n    }).sort(function (a, b) {\n      return a - b;\n    });\n  };\n\n  SemaphoreCharacter.prototype.getPotentialMatch = function (other) {\n    if (this.directions.length !== 1 || this.directions[0] === other) {\n      return null;\n    }\n\n    var potentialMatch = this.getPotentialMatches().filter(function (value) {\n      return (value.encoding & other) === other;\n    })[0];\n    return potentialMatch || null;\n  };\n\n  SemaphoreCharacter.prototype.onClear = function () {\n    this._directions.length = 0;\n  };\n\n  SemaphoreCharacter.prototype.onEmpty = function () {\n    return this._directions.length === 0;\n  };\n\n  SemaphoreCharacter.prototype.getEncoding = function () {\n    return this._directions.reduce(function (previousValue, currentValue) {\n      return previousValue |= currentValue;\n    }, SemaphoreEncoding_1.SemaphoreEncoding.None);\n  };\n\n  return SemaphoreCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.SemaphoreCharacter = SemaphoreCharacter;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreData =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreData, _super);\n\n  function SemaphoreData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0'); // Formatting\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    return _this;\n  }\n\n  SemaphoreData.instance = new SemaphoreData();\n  return SemaphoreData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.SemaphoreData = SemaphoreData;"],"sourceRoot":""}
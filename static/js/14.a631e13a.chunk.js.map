{"version":3,"sources":["Data/LocalStorageComponent.ts","Data/LocalStorage.ts","version.ts","Views/TabViewBase.tsx","Common/Helpers.ts","Resistor/ResistorTable.tsx","Resistor/ResistorInput.tsx","Views/Reference/Resistors.tsx"],"names":["LocalStorageComponent","props","_this","Object","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","VERSION_STORAGE_KEY","previousVersion","LocalStorage","getObject","versionIncreased","version","clear","setObject","prev","current","compareVersions","restoreState","updateState","onUpdateState","saveState","getLocalStorageKey","onSaveState","onRestoreState","Component","undefined","_isSupported","storage","window","localStorage","x","setItem","removeItem","e","DOMException","code","name","length","key","isSupported","getItem","getKey","objString","JSON","parse","value","object","stringify","concat","_prefix","__webpack_require__","d","__webpack_exports__","TabViewBase","_activeKey","state","activeKey","savedState","setState","Helpers","background","hexCode","substring","color","parseInt","ResistorTable","react_default","a","createElement","className","Table_default","striped","responsive","renderRows","Resistor","colorTable","data","map","style","cellColorStyle","getDisplayValue","multiplier","toleranceInPercent","backgroundColor","colorCode","contrastingColor","ResistorInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","initialBands","BLACK","BROWN","resistorValue","bands","width","viewBox","id","y","height","fill","rx","ry","stroke","strokeWidth","xlinkHref","getBand","ButtonToolbar_default","valueSelector","multiplierSelector","multiplierOrNullSelector","toleranceSelector","index","band","getBandOffset","title","colorSelector","filter","hasValue","Color","colors","_this2","DropdownButton_default","onSelect","eventKey","updateColor","itemIndex","DropdownItem_default","newBands","colorByName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","i","push","getValue","INVALID_RESISTOR","Resistors","Tabs_default","animation","onTabSelect","Tab_default","src_Resistor_ResistorInput","src_Resistor_ResistorTable"],"mappings":"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","file":"static/js/14.a631e13a.chunk.js","sourcesContent":["import compareVersions from 'compare-versions';\nimport { Component } from 'react';\nimport LocalStorage from './LocalStorage';\nimport { version } from '../version';\n\nabstract class LocalStorageComponent<P = {}, S = {}, SavedState = {}> extends Component<P, S> {\n  public constructor(props: P) {\n    super(props);\n\n    // If the current localstorage was created with a prior version of puzztool, clear\n    // the local storage to get rid of any obsolete or incompatible artifacts\n    const previousVersion = LocalStorage.getObject<string>(this.VERSION_STORAGE_KEY);\n    if (this.versionIncreased(previousVersion, version)) {\n      LocalStorage.clear();\n      // Store the current version\n      LocalStorage.setObject<string>(this.VERSION_STORAGE_KEY, version);\n    }\n  }\n\n  private versionIncreased(prev: string | null, current: string): boolean {\n    if (prev == null) {\n      // If there's no recorded version number, this is the user's first visit\n      // to the page since 0.7.0 released.  To clean up any potential legacy\n      // incompatabilities, clear storage and write the version.\n      return true;\n    }\n\n    return compareVersions(current, prev) === 1;\n  }\n\n  public componentDidMount() {\n    this.restoreState();\n    this.updateState();\n  }\n\n  protected updateState() {\n    this.onUpdateState();\n    this.saveState();\n  }\n\n  protected abstract getLocalStorageKey(): string;\n  protected abstract onSaveState(): SavedState;\n  protected abstract onRestoreState(savedState: SavedState | null): void;\n  protected abstract onUpdateState(): void;\n\n  private saveState() {\n    LocalStorage.setObject<SavedState>(this.getLocalStorageKey(), this.onSaveState());\n  }\n\n  private restoreState() {\n    this.onRestoreState(LocalStorage.getObject<SavedState>(this.getLocalStorageKey()));\n  }\n\n  private readonly VERSION_STORAGE_KEY: string = \"puzztoolVersion\";\n}\n\nexport default LocalStorageComponent;\n","class LocalStorage {\n  private static _isSupported?: boolean;\n  private static _prefix: string = 'puzztool';\n\n  public static isSupported() {\n    if (this._isSupported === undefined) {\n      const storage = window.localStorage;\n      const x = '__storage_test__';\n\n      try {\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        this._isSupported = true;\n      } catch (e) {\n          this._isSupported = e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            storage.length !== 0;\n      }\n    }\n\n    return this._isSupported;\n  }\n\n  public static getItem(key: string) {\n    if (this.isSupported()) {\n      return window.localStorage.getItem(this.getKey(key));\n    }\n\n    return null;\n  }\n\n  public static getObject<T>(key: string) {\n    if (this.isSupported()) {\n      const objString = window.localStorage.getItem(this.getKey(key));\n\n      if (objString !== null) {\n        return JSON.parse(objString) as T;\n      }\n    }\n\n    return null;\n  }\n\n  public static setItem(key: string, value: string) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), value);\n    }\n  }\n\n  public static setObject<T>(key: string, object: T) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), JSON.stringify(object));\n    }\n  }\n\n  public static clear() {\n    if (this.isSupported()) {\n      window.localStorage.clear();\n    }\n  }\n\n  private static getKey(key: string) {\n    return `${this._prefix}_${key}`;\n  }\n}\n\nexport default LocalStorage;\n","// generated by genversion\nexport const version = '0.7.0';\n","import LocalStorageComponent from '../Data/LocalStorageComponent';\n\n// To inherit from this class:\n// 1. import Tab from 'react-bootstrap/Tab';\n// 2. import Tabs from 'react-bootstrap/Tabs';\n// 3. override render() and getLocalStorageKey()\n// 4. Ensure your constructor calls super()\n\ntype TabViewBaseProps = {};\ntype State = {\n  activeKey: number,\n};\n\ntype SavedState = {\n  activeKey: number,\n};\n\nabstract class TabViewBase extends LocalStorageComponent<TabViewBaseProps, State, SavedState> {\n  private _activeKey: number = 1;\n\n  constructor(props: TabViewBaseProps) {\n    super(props);\n\n    this.state = {\n      activeKey: this._activeKey,\n    };\n  }\n\n  /* Classes derived from TabViewBase should implement the following functions:\n\n  public render() {}\n\n  protected getLocalStorageKey() {\n    return 'YourClassNameHere';\n  }\n  */\n\n  protected onSaveState() {\n    return {\n      activeKey: this._activeKey,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._activeKey = savedState.activeKey;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      activeKey: this._activeKey,\n    });\n  }\n\n  protected onTabSelect(activeKey: number) {\n    this._activeKey = activeKey;\n    this.updateState();\n  }\n}\n\nexport default TabViewBase;\n","class Helpers {\n    public static contrastingColor(background: String) {\n        // Calculate Luma as per Rec. 709: https://en.wikipedia.org/wiki/Luma_(video)\n        const hexCode = background.substring(1);  // Remove the leading #\n        const color = parseInt(hexCode, 16);\n        // tslint:disable no-bitwise\n        const red = (color >> 16) & 0xff;\n        const green = (color >> 8) & 0xff;\n        const blue = (color & 0xff);\n        const luma = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n        if (luma < 40) {\n            // Dark background; use bright foreground\n            return '#ffffff';\n        } else {\n            return '#000000';\n        }\n    }\n}\n\nexport default Helpers;\n","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { ResistorColorEntry as Color, Resistor } from 'puzzle-lib';\nimport Helpers from '../Common/Helpers';\nimport './ResistorTable.scss';\n\nclass ResistorTable extends Component {\n  public render() {\n    return (\n      <div className=\"ResistorTable\">\n        <Table striped={true} responsive={true}>\n          <thead>\n            <tr>\n              <th>Color</th>\n              <th>Value</th>\n              <th>Multiplier</th>\n              <th>Tolerance (%)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderRows(Resistor.colorTable)}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\n  private renderRows(data: Color[]) {\n    return data.map((value: Color) => (\n        <tr key={value.name}>\n          <td style={this.cellColorStyle(value)}>{value.name}</td>\n          <td>{value.getDisplayValue()}</td>\n          <td>{value.multiplier}</td>\n          <td>{value.toleranceInPercent}</td>\n        </tr>\n      ));\n  }\n\n  private cellColorStyle(value: Color) {\n    return {\n      backgroundColor: value.colorCode,\n      color: Helpers.contrastingColor(value.colorCode),\n    };\n  }\n}\n\nexport default ResistorTable;\n","import React, { Component } from 'react';\nimport { ResistorColorEntry as Color, Resistor } from 'puzzle-lib';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\nimport './ResistorInput.scss';\n\ntype Props = {\n};\n\ntype State = {\n  value: String,\n  bands: (Color | null)[]\n};\n\nclass ResistorInput extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const initialBands = [Resistor.BLACK, Resistor.BLACK, Resistor.BLACK, null, Resistor.BROWN];\n    this.state = {\n      value: this.resistorValue(initialBands),\n      bands: initialBands\n    };\n  }\n\n  public render() {\n    return (\n      <div className=\"ResistorInput\">\n        <div className=\"ResistorDisplay\">\n          <svg width=\"240\" viewBox=\"0 0 136 40\">\n            <defs>\n              <g id=\"Wire\">\n                <rect y=\"20\" height=\"1\" width=\"8\" fill=\"black\" />\n              </g>\n              <g id=\"Resistor\">\n                <rect\n                  y=\"8\"\n                  x=\"8\"\n                  width=\"120\"\n                  height=\"24\"\n                  rx=\"4\"\n                  ry=\"4\"\n                  stroke=\"black\"\n                  strokeWidth=\"0.5\"\n                  fill=\"burlywood\"\n                />\n                <use xlinkHref=\"#Wire\" x=\"0\" />\n                <use xlinkHref=\"#Wire\" x=\"128\" />\n              </g>\n              <g id=\"Band\">\n                <rect y=\"8\" height=\"24\" width=\"12\" stroke=\"black\" strokeWidth=\"0.5\" />\n              </g>\n            </defs>\n            <use xlinkHref=\"#Resistor\" x=\"0\" y=\"0\" />\n            {this.getBand(0)}\n            {this.getBand(1)}\n            {this.getBand(2)}\n            {this.getBand(3)}\n            {this.getBand(4)}\n            Sorry, your browser does not support inline SVG.\n          </svg>\n        </div>\n        <div className=\"ResistorValue\">Value: {this.state.value}</div>\n        <div className=\"ResistorSelectors\">\n          <ButtonToolbar>\n            {this.valueSelector(0, 'First Band')}\n            {this.valueSelector(1, 'Second Band')}\n            {this.multiplierSelector(2, 'Third Band')}\n            {this.multiplierOrNullSelector(3, 'Fourth Band')}\n            {this.toleranceSelector(4, 'Tolerance Band')}\n          </ButtonToolbar>\n        </div>\n      </div>\n    );\n  }\n\n  private getBand(index: number) {\n    const band = this.state.bands[index];\n    if (band !== null) {\n      return (\n        <use \n          xlinkHref=\"#Band\"\n          x={this.getBandOffset(index)}\n          fill={band.colorCode}\n        />\n      );\n    }\n    return '';\n  }\n\n  private getBandOffset(index: number) {\n      // The tolerance band is spaced further apart than the rest of the bands\n      if (index === (this.state.bands.length - 1)) {\n        return 104;\n      }\n      return (18 * index) + 20;\n  }\n\n  private valueSelector(index: number, title: String) {\n    return this.colorSelector(index, title, Resistor.colorTable.filter(color => color.hasValue()));\n  }\n\n  private multiplierSelector(index: number, title: String) {\n    return this.colorSelector(index, title, Resistor.colorTable);\n  }\n\n  private multiplierOrNullSelector(index: number, title: String) {\n    return this.colorSelector(index, title, [new Color('None', '', 0)].concat(Resistor.colorTable));\n  }\n\n  private toleranceSelector(index: number, title: String) {\n    // When puzzle-lib bug #49 is fixed, switch this to hasTolerance\n    return this.colorSelector(\n      index, title, \n      Resistor.colorTable.filter(color => color.toleranceInPercent !== undefined));\n  }\n\n  private colorSelector(index: number, title: String, colors: Color[]) {\n    return (\n      <DropdownButton\n        title={title}\n        key={index}\n        id={`color-select-${index}`}\n        // tslint:disable-next-line no-any\n        onSelect={(eventKey: any) => this.updateColor(index, eventKey as string)}\n      >\n        {colors.map((color: Color, itemIndex: number) => {\n          return (\n            <DropdownItem key={`${index}-${itemIndex}`} eventKey={color.name}>{color.name}</DropdownItem>\n          );\n        })}\n      </DropdownButton>\n    );\n  }\n\n  private updateColor(index: number, eventKey: string) {\n    let newBands = this.state.bands;\n    newBands[index] = this.colorByName(eventKey);\n    this.setState({\n      value: this.resistorValue(newBands),\n      bands: newBands\n    });\n  }\n\n  private colorByName(name: String) {\n    for (let color of Resistor.colorTable) {\n      if (name === color.name) {\n        return color;\n      }\n    }\n\n    return null;\n  }\n\n  private resistorValue(bands: (Color | null)[]) {\n    let colors: Color[] = [];\n    for (let i = 0; i < (bands.length - 1); ++i) {\n      if (bands[i] !== null) {\n        colors.push(bands[i]!);\n      }\n    }\n    let value = Resistor.getValue(colors);\n    if (value === Resistor.INVALID_RESISTOR) {\n      return 'Invalid Resistor Colors';\n    } else {\n      return `${Resistor.getDisplayValue(value)} \\u2126 \\u00b1 ${bands[bands.length - 1]!.toleranceInPercent}%`;\n    }\n  }\n}\n\nexport default ResistorInput;\n","import React from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport TabViewBase from '../TabViewBase';\nimport ResistorTable from '../../Resistor/ResistorTable';\nimport ResistorInput from '../../Resistor/ResistorInput';\nimport './Resistors.scss';\n\nclass Resistors extends TabViewBase {\n  public render() {\n    return (\n      <div className=\"Resistors\">\n        <div className=\"Resistors-content\">\n          <Tabs\n            activeKey={this.state.activeKey}\n            animation={false}\n            id=\"Resistors-tabs\"\n            // tslint:disable-next-line: no-any\n            onSelect={(activeKey: any) => this.onTabSelect(activeKey as number)}\n          >\n            <Tab eventKey={1} title=\"Value\">\n              <ResistorInput />\n            </Tab>\n            <Tab eventKey={2} title=\"Reference\">\n              <ResistorTable />\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'Resistors';\n  }\n}\n\nexport default Resistors;\n"],"sourceRoot":""}
{"version":3,"sources":["Images/puzztool_banner_white.svg","Features/AppNav/AppNavCategory.tsx","Features/AppNav/index.tsx","Features/Error/NotFound.tsx","Features/Loading/index.tsx","App.tsx","serviceWorker.ts","Features/Cipher/cipherReducer.ts","Features/Encoding/encodingReducer.ts","Store/rootReducer.ts","Store/configureStore.ts","index.tsx","Features/Encoding/Braille/brailleEncodingSlice.ts","Features/Encoding/Morse/morseEncodingSlice.ts","Features/Encoding/Semaphore/semaphoreEncodingSlice.ts","Features/Resistor/resistorSlice.ts","Data/RouteData.ts","Features/Cipher/Autokey/autokeyCipherSlice.ts","Features/Cipher/Caesar/caesarCipherSlice.ts","Features/Cipher/Vigenere/vigenereCipherSlice.ts","Features/Encoding/AutoConvert/autoConvertSlice.ts","Features/Encoding/Character/characterEncodingSlice.ts","Features/WordSearch/wordSearchSlice.ts"],"names":["module","exports","NavbarCategory","props","name","category","rootUrl","key","onClick","e","preventDefault","to","NavDropdown","id","categoryName","toLowerCase","replace","concat","title","children","map","child","url","Item","eventKey","AppNav","Navbar","bg","className","collapseOnSelect","expand","onSelect","document","activeElement","blur","sticky","variant","Brand","src","PuzztoolBannerWhite","alt","Toggle","Collapse","Nav","getCategories","AppNavCategory","Link","href","target","NotFound","Loading","error","timedOut","pastDelay","WordSearch","Loadable","loader","loading","timeout","AutoConvert","Autokey","Braille","Caesar","Character","Home","Morse","Nato","NavalFlag","Pigpen","Resistor","Semaphore","Settings","Vigenere","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","combineReducers","autokey","autokeyCipherReducer","caesar","caesarCipherReducer","vigenere","vigenereCipherReducer","autoConvert","autoConvertReducer","braille","brailleEncodingReducer","character","characterEncodingReducer","morse","morseEncodingReducer","semaphore","semaphoreEncodingReducer","cipherPersistConfig","storage","encodingPersistConfig","createRootReducer","cipher","persistReducer","cipherReducer","encoding","encodingReducer","resistor","resistorReducer","wordSearch","wordSearchReducer","persistConfig","baseUrl","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","rootReducer","persistedReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","initialState","BrailleEncoding","None","stream","brailleEncodingSlice","createSlice","reducers","append","action","push","payload","backspace","pop","clear","length","selectTab","selectedTab","setEncoding","space","actions","morseEncodingSlice","slice","semaphoreEncodingSlice","directions","setDirections","resistorSlice","bands","setBand","bandIndex","colorIndex","description","autokeyCipherSlice","conversion","secret","text","setConversion","setSecret","setText","caesarCipherSlice","vigenereCipherSlice","autoConvertSlice","homogeneous","setHomogeneous","characterEncodingSlice","wordSearchSlice","canBend","grid","useCardinals","useDiagonals","wordList","setCanBend","setGrid","setUseCardinals","setUseDiagonals","setWordList"],"mappings":"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","file":"static/js/main.3165723f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/puzztool_banner_white.b6754a16.svg\";","import React from 'react';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { RouteCategory } from '../../Data/RouteData';\n\ninterface Props {\n  category: RouteCategory;\n}\n\nfunction getCategoryDropdownId(categoryName: string) {\n  return categoryName.toLowerCase().replace(/[^a-z]/, '').concat('-dropdown');\n}\n\nfunction NavbarCategory(props: Props) {\n  const name = props.category.name;\n  const rootUrl = props.category.rootUrl;\n\n  return (\n    <LinkContainer\n      key={name}\n      onClick={(e) => e.preventDefault()}\n      to={rootUrl}\n    >\n      <NavDropdown\n        id={getCategoryDropdownId(name)}\n        title={name}\n      >\n        {props.category.children.map((child) => (\n          <LinkContainer\n            key={`${name}-${child.name}`}\n            to={rootUrl + child.url}\n          >\n            <NavDropdown.Item eventKey={name + child.name}>\n              {child.name}\n            </NavDropdown.Item>\n          </LinkContainer>\n        ))}\n      </NavDropdown>\n    </LinkContainer>\n  );\n}\n\nexport default NavbarCategory;\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { getCategories } from '../../Data/RouteData';\nimport PuzztoolBannerWhite from '../../Images/puzztool_banner_white.svg';\nimport AppNavCategory from './AppNavCategory';\nimport './index.scss';\n\nfunction AppNav() {\n  return (\n    <Navbar\n      bg=\"dark\"\n      className=\"AppNav\"\n      collapseOnSelect={true}\n      expand=\"md\"\n      // Remove focus from the selected element to prevent it from taking\n      // further keyboard input.\n      onSelect={() => (document.activeElement as HTMLElement).blur()}\n      sticky=\"top\"\n      variant=\"dark\"\n    >\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>\n          <img\n            className=\"NavbarLogo\"\n            src={PuzztoolBannerWhite}\n            alt=\"PuzzTool logo\"\n          />\n        </Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav>\n          {getCategories().map(\n            category => <AppNavCategory key={category.name} category={category} />)}\n        </Nav>\n        <Nav>\n          <LinkContainer to=\"/help\" onClick={(e) => e.preventDefault()}>\n            <NavDropdown title=\"Help\" id=\"help-dropdown\">\n              <LinkContainer to=\"/help/settings\">\n                <NavDropdown.Item eventKey=\"Help.Settings\">Settings</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          </LinkContainer>\n          <Nav.Link\n            eventKey=\"Help.Feedback\"\n            href=\"https://github.com/puzztool/puzztool/issues/new\"\n            target=\"_blank\"\n          >\n            Feedback\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppNav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NotFound.scss';\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n      <p>If this was reached in error, use the navigation options or go <Link to=\"/\">home</Link>.</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { LoadingComponentProps } from 'react-loadable';\nimport './index.scss';\n\nfunction Loading(props: LoadingComponentProps) {\n  function getContent() {\n    if (props.error) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Failed to load content</div>\n        </div>\n      );\n    } else if (props.timedOut) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Timed out while loading content</div>\n        </div>\n      );\n    } else if (props.pastDelay) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-spinner\" />\n          <div>Loading</div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"Loading\">\n      {getContent()}\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport AppNav from './Features/AppNav';\nimport NotFound from './Features/Error/NotFound';\nimport Loading from './Features/Loading';\nimport './App.scss';\n\nconst defaultTimeout = 10000;\n\nconst WordSearch = Loadable({\n  loader: () => import('./Features/WordSearch'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst AutoConvert = Loadable({\n  loader: () => import('./Features/Encoding/AutoConvert'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Autokey = Loadable({\n  loader: () => import('./Features/Cipher/Autokey'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Braille = Loadable({\n  loader: () => import('./Features/Encoding/Braille'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Caesar = Loadable({\n  loader: () => import('./Features/Cipher/Caesar'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Character = Loadable({\n  loader: () => import('./Features/Encoding/Character'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Home = Loadable({\n  loader: () => import('./Features/Home'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Morse = Loadable({\n  loader: () => import('./Features/Encoding/Morse'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Nato = Loadable({\n  loader: () => import('./Features/Encoding/Nato'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst NavalFlag = Loadable({\n  loader: () => import('./Features/Encoding/NavalFlag'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Pigpen = Loadable({\n  loader: () => import('./Features/Pigpen'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Resistor = Loadable({\n  loader: () => import('./Features/Resistor'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Semaphore = Loadable({\n  loader: () => import('./Features/Encoding/Semaphore'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Settings = Loadable({\n  loader: () => import('./Features/Settings'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Vigenere = Loadable({\n  loader: () => import('./Features/Cipher/Vigenere'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppNav />\n      <div className=\"App-content\">\n        <Switch>\n          <Route exact={true} path=\"/\" component={Home} />\n          <Route exact={true} path=\"/cipher/autokey\" component={Autokey} />\n          <Route exact={true} path=\"/cipher/caesar\" component={Caesar} />\n          <Route exact={true} path=\"/cipher/vigenere\" component={Vigenere} />\n          <Route exact={true} path=\"/encoding/autoconvert\" component={AutoConvert} />\n          <Route exact={true} path=\"/encoding/braille\" component={Braille} />\n          <Route exact={true} path=\"/encoding/morse\" component={Morse} />\n          <Route exact={true} path=\"/encoding/pigpen\" component={Pigpen} />\n          <Route exact={true} path=\"/encoding/semaphore\" component={Semaphore} />\n          <Route exact={true} path=\"/help/settings\" component={Settings} />\n          <Route exact={true} path=\"/reference/characterencodings\" component={Character} />\n          <Route exact={true} path=\"/reference/nato\" component={Nato} />\n          <Route exact={true} path=\"/reference/navalflags\" component={NavalFlag} />\n          <Route exact={true} path=\"/reference/resistors\" component={Resistor} />\n          <Route exact={true} path=\"/solvers/wordsearch\" component={WordSearch} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line:no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line:no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line:no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // tslint:disable-next-line:no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line:no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport autokeyCipherReducer from './Autokey/autokeyCipherSlice';\nimport caesarCipherReducer from './Caesar/caesarCipherSlice';\nimport vigenereCipherReducer from './Vigenere/vigenereCipherSlice';\n\nexport default combineReducers({\n  autokey: autokeyCipherReducer,\n  caesar: caesarCipherReducer,\n  vigenere: vigenereCipherReducer,\n});\n","import { combineReducers } from 'redux';\nimport autoConvertReducer from './AutoConvert/autoConvertSlice';\nimport brailleEncodingReducer from './Braille/brailleEncodingSlice';\nimport characterEncodingReducer from './Character/characterEncodingSlice';\nimport morseEncodingReducer from './Morse/morseEncodingSlice';\nimport semaphoreEncodingReducer from './Semaphore/semaphoreEncodingSlice';\n\nexport default combineReducers({\n  autoConvert: autoConvertReducer,\n  braille: brailleEncodingReducer,\n  character: characterEncodingReducer,\n  morse: morseEncodingReducer,\n  semaphore: semaphoreEncodingReducer,\n});\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\nimport cipherReducer from '../Features/Cipher/cipherReducer';\nimport encodingReducer from '../Features/Encoding/encodingReducer';\nimport resistorReducer from '../Features/Resistor/resistorSlice';\nimport wordSearchReducer from '../Features/WordSearch/wordSearchSlice';\n\nconst cipherPersistConfig = {\n  key: 'cipher',\n  storage,\n}\n\nconst encodingPersistConfig = {\n  key: 'encoding',\n  storage,\n}\n\nconst createRootReducer = () => combineReducers({\n  cipher: persistReducer(cipherPersistConfig, cipherReducer),\n  encoding: persistReducer(encodingPersistConfig, encodingReducer),\n  resistor: resistorReducer,\n  wordSearch: wordSearchReducer,\n});\n\nexport type RootState = ReturnType<ReturnType<typeof createRootReducer>>\nexport default createRootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport createRootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nexport default () => {\n  const rootReducer = createRootReducer();\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore actions for \"react-persist\"\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    }),\n  });\n\n  let persistor = persistStore(store);\n\n  return { store, persistor };\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './Store/configureStore';\nimport './index.scss';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') || '';\nconst history = createBrowserHistory({ basename: baseUrl });\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.register();\n","import { BrailleEncoding } from 'puzzle-lib';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  encoding: BrailleEncoding,\n  selectedTab?: string;\n  stream: BrailleEncoding[];\n}\n\nconst initialState: State = {\n  encoding: BrailleEncoding.None,\n  stream: [],\n};\n\nconst brailleEncodingSlice = createSlice({\n  name: 'brailleEncoding',\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<BrailleEncoding>) {\n      state.encoding = BrailleEncoding.None;\n      state.stream.push(action.payload);\n    },\n    backspace(state) {\n      state.stream.pop();\n    },\n    clear(state) {\n      state.encoding = BrailleEncoding.None;\n      state.stream.length = 0;\n    },\n    selectTab(state, action: PayloadAction<string>) {\n      state.selectedTab = action.payload;\n    },\n    setEncoding(state, action: PayloadAction<BrailleEncoding>) {\n      state.encoding = action.payload;\n    },\n    space(state) {\n      state.stream.push(BrailleEncoding.None);\n    },\n  }\n});\n\nexport const {\n  append,\n  backspace,\n  clear,\n  selectTab,\n  setEncoding,\n  space,\n} = brailleEncodingSlice.actions;\n\nexport default brailleEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  selectedTab?: string;\n  stream: string;\n}\n\nconst initialState: State = {\n  stream: '',\n};\n\nconst morseEncodingSlice = createSlice({\n  name: 'morseEncoding',\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<string>) {\n      state.stream += action.payload;\n    },\n    backspace(state) {\n      state.stream = state.stream.slice(0, -1);\n    },\n    clear(state) {\n      state.stream = '';\n    },\n    selectTab(state, action: PayloadAction<string>) {\n      state.selectedTab = action.payload;\n    },\n  }\n});\n\nexport const {\n  append,\n  backspace,\n  clear,\n  selectTab,\n} = morseEncodingSlice.actions;\n\nexport default morseEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SemaphoreDirection } from 'puzzle-lib';\n\nexport interface State {\n  directions: SemaphoreDirection[];\n  selectedTab?: string;\n  stream: string;\n}\n\nconst initialState: State = {\n  directions: [],\n  stream: '',\n};\n\nconst semaphoreEncodingSlice = createSlice({\n  name: 'semaphoreEncoding',\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<string>) {\n      state.directions.length = 0;\n      state.stream += action.payload;\n    },\n    backspace(state) {\n      state.stream = state.stream.slice(0, -1);\n    },\n    clear(state) {\n      state.directions.length = 0;\n      state.stream = '';\n    },\n    selectTab(state, action: PayloadAction<string>) {\n      state.selectedTab = action.payload;\n    },\n    setDirections(state, action: PayloadAction<SemaphoreDirection[]>) {\n      state.directions = action.payload;\n    },\n    space(state) {\n      state.stream += ' ';\n    },\n  }\n});\n\nexport const {\n  append,\n  backspace,\n  clear,\n  selectTab,\n  setDirections,\n  space,\n} = semaphoreEncodingSlice.actions;\n\nexport default semaphoreEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  bands: number[];\n  selectedTab?: string;\n}\n\ninterface SetBandPayload {\n  bandIndex: number;\n  colorIndex: number;\n}\n\nconst initialState: State = {\n  // BLACK, BLACK, BLACK, <blank>, BROWN\n  bands: [0, 0, 0, -1, 1],\n};\n\nconst resistorSlice = createSlice({\n  name: 'resistor',\n  initialState,\n  reducers: {\n    selectTab(state, action: PayloadAction<string>) {\n      state.selectedTab = action.payload;\n    },\n    setBand(state, action: PayloadAction<SetBandPayload>) {\n      const { bandIndex, colorIndex } = action.payload;\n      state.bands[bandIndex] = colorIndex;\n    },\n  }\n});\n\nexport const {\n  selectTab,\n  setBand,\n} = resistorSlice.actions;\n\nexport default resistorSlice.reducer;\n","export interface RouteChild {\r\n  description: string;\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nexport interface RouteCategory {\r\n  children: RouteChild[];\r\n  description: string;\r\n  name: string;\r\n  rootUrl: string;\r\n}\r\n\r\nexport function getCategories(): RouteCategory[] {\r\n  return [\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Word Search Solver',\r\n          name: 'Word Search',\r\n          url: '/wordsearch',\r\n        },\r\n      ],\r\n      description: 'Automated puzzle solvers',\r\n      name: 'Solvers',\r\n      rootUrl: '/solvers',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: ' A Vignere cipher which uses plaintext as the key',\r\n          name: 'Autokey',\r\n          url: '/autokey',\r\n        },\r\n        {\r\n          description: 'Letters are shifted by a fixed value',\r\n          name: 'Caesar',\r\n          url: '/caesar',\r\n        },\r\n        {\r\n          description: 'Letters are mapped based on a key word',\r\n          name: 'Vignere',\r\n          url: '/vigenere',\r\n        },\r\n      ],\r\n      description: 'Scrambled letters',\r\n      name: 'Ciphers',\r\n      rootUrl: '/cipher',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Mapping numbers to letters (ASCII, Binary, Ordinal)',\r\n          name: 'AutoConvert',\r\n          url: '/autoconvert',\r\n        },\r\n        {\r\n          description: 'Six dots in a two-by-three grid',\r\n          name: 'Braille',\r\n          url: '/braille',\r\n        },\r\n        {\r\n          description: 'Dots and dashes with separations',\r\n          name: 'Morse Code',\r\n          url: '/morse',\r\n        },\r\n        {\r\n          description: 'Parts of a tic-tac-toe grid or X, some with dot',\r\n          name: 'Pigpen',\r\n          url: '/pigpen',\r\n        },\r\n        {\r\n          description: ' Positions of two different flags',\r\n          name: 'Semaphore',\r\n          url: '/semaphore',\r\n        },\r\n      ],\r\n      description: 'Different ways to represent letters',\r\n      name: 'Encodings',\r\n      rootUrl: '/encoding',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Static display of number to letter mapping',\r\n          name: 'Character Encodings',\r\n          url: '/characterencodings',\r\n        },\r\n        {\r\n          description: 'Words used to clearly identify a letter',\r\n          name: 'NATO Alphabet',\r\n          url: '/nato',\r\n        },\r\n        {\r\n          description: 'Different simple flags which convey a letter',\r\n          name: 'Naval Flags',\r\n          url: '/navalflags',\r\n        },\r\n        {\r\n          description: 'Find a resistor value using different colored bands',\r\n          name: 'Resistors',\r\n          url: '/resistors',\r\n        }\r\n      ],\r\n      description: 'Miscellaneous information',\r\n      name: 'Reference',\r\n      rootUrl: '/reference',\r\n    }\r\n  ];\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  conversion: number;\n  secret: string;\n  text: string;\n}\n\nconst initialState: State = {\n  conversion: 2,\n  secret: '',\n  text: '',\n};\n\nconst autokeyCipherSlice = createSlice({\n  name: 'autokeyCipher',\n  initialState,\n  reducers: {\n    clear(state) {\n      state.conversion = 2;\n      state.secret = '';\n      state.text = '';\n    },\n    setConversion(state, action: PayloadAction<number>) {\n      state.conversion = action.payload;\n    },\n    setSecret(state, action: PayloadAction<string>) {\n      state.secret = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setConversion,\n  setSecret,\n  setText,\n} = autokeyCipherSlice.actions;\n\nexport default autokeyCipherSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  text: string;\n}\n\nconst initialState: State = {\n  text: '',\n};\n\nconst caesarCipherSlice = createSlice({\n  name: 'caesarCipher',\n  initialState,\n  reducers: {\n    clear(state) {\n      state.text = '';\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setText,\n} = caesarCipherSlice.actions;\n\nexport default caesarCipherSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  conversion: number;\n  secret: string;\n  text: string;\n}\n\nconst initialState: State = {\n  conversion: 2,\n  secret: '',\n  text: '',\n};\n\nconst vigenereCipherSlice = createSlice({\n  name: 'vigenereCipher',\n  initialState,\n  reducers: {\n    clear(state) {\n      state.conversion = 2;\n      state.secret = '';\n      state.text = '';\n    },\n    setConversion(state, action: PayloadAction<number>) {\n      state.conversion = action.payload;\n    },\n    setSecret(state, action: PayloadAction<string>) {\n      state.secret = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setConversion,\n  setSecret,\n  setText,\n} = vigenereCipherSlice.actions;\n\nexport default vigenereCipherSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  homogeneous: boolean;\n  text: string;\n}\n\nconst initialState: State = {\n  homogeneous: true,\n  text: '',\n};\n\nconst autoConvertSlice = createSlice({\n  name: 'autoConvert',\n  initialState,\n  reducers: {\n    clear(state) {\n      state.text = '';\n    },\n    setHomogeneous(state, action: PayloadAction<boolean>) {\n      state.homogeneous = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  }\n});\n\nexport const {\n  clear,\n  setHomogeneous,\n  setText,\n} = autoConvertSlice.actions;\n\nexport default autoConvertSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  selectedTab?: string;\n}\n\nconst initialState: State = {};\n\nconst characterEncodingSlice = createSlice({\n  name: 'characterEncoding',\n  initialState,\n  reducers: {\n    selectTab(state, action: PayloadAction<string>) {\n      state.selectedTab = action.payload;\n    },\n  }\n});\n\nexport const {\n  selectTab,\n} = characterEncodingSlice.actions;\n\nexport default characterEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface State {\n  canBend: boolean;\n  grid: string;\n  useCardinals: boolean;\n  useDiagonals: boolean;\n  wordList: string;\n}\n\nconst initialState: State = {\n  canBend: false,\n  grid: '',\n  useCardinals: true,\n  useDiagonals: true,\n  wordList: '',\n};\n\nconst wordSearchSlice = createSlice({\n  name: 'wordSearch',\n  initialState,\n  reducers: {\n    setCanBend(state, action: PayloadAction<boolean>) {\n      state.canBend = action.payload;\n    },\n    setGrid(state, action: PayloadAction<string>) {\n      state.grid = action.payload;\n    },\n    setUseCardinals(state, action: PayloadAction<boolean>) {\n      state.useCardinals = action.payload;\n    },\n    setUseDiagonals(state, action: PayloadAction<boolean>) {\n      state.useDiagonals = action.payload;\n    },\n    setWordList(state, action: PayloadAction<string>) {\n      state.wordList = action.payload;\n    },\n  }\n});\n\nexport const {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n} = wordSearchSlice.actions;\n\nexport default wordSearchSlice.reducer;\n"],"sourceRoot":""}
{"version":3,"sources":["Features/AppNav/AppNavCategory.tsx","Features/AppNav/index.tsx","Features/Error/NotFound.tsx","Features/Loading/index.tsx","App.tsx","serviceWorker.ts","index.tsx","Data/RouteData.ts","Images/puzztool_banner_white.svg"],"names":["NavbarCategory","props","name","category","rootUrl","key","onClick","e","preventDefault","to","NavDropdown","id","categoryName","toLowerCase","replace","concat","title","children","map","child","url","Item","eventKey","AppNav","Navbar","bg","className","collapseOnSelect","expand","onSelect","document","activeElement","blur","sticky","variant","Brand","src","PuzztoolBannerWhite","alt","Toggle","Collapse","Nav","getCategories","AppNavCategory","Link","href","target","NotFound","Loading","useState","pastDelay","setPastDelay","timedOut","setTimedOut","useEffect","delay","timeout","delayTimer","timeoutTimer","window","setTimeout","clearTimeout","Autokey","React","lazy","Caesar","Vigenere","AutoConvert","Braille","Character","Morse","Nato","NavalFlag","Semaphore","Home","Pigpen","Resistor","Settings","WordSearch","ErrorFallback","withRouter","FallbackComponent","history","location","fallback","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","baseUrl","getElementsByTagName","getAttribute","createBrowserHistory","basename","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","description","module","exports"],"mappings":"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","file":"static/js/main.446e1ff2.chunk.js","sourcesContent":["import React from 'react';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { RouteCategory } from '../../Data/RouteData';\n\ninterface Props {\n  category: RouteCategory;\n}\n\nfunction getCategoryDropdownId(categoryName: string) {\n  return categoryName.toLowerCase().replace(/[^a-z]/, '').concat('-dropdown');\n}\n\nfunction NavbarCategory(props: Props) {\n  const name = props.category.name;\n  const rootUrl = props.category.rootUrl;\n\n  return (\n    <LinkContainer\n      key={name}\n      onClick={(e) => e.preventDefault()}\n      to={rootUrl}\n    >\n      <NavDropdown\n        id={getCategoryDropdownId(name)}\n        title={name}\n      >\n        {props.category.children.map((child) => (\n          <LinkContainer\n            key={`${name}-${child.name}`}\n            to={rootUrl + child.url}\n          >\n            <NavDropdown.Item eventKey={name + child.name}>\n              {child.name}\n            </NavDropdown.Item>\n          </LinkContainer>\n        ))}\n      </NavDropdown>\n    </LinkContainer>\n  );\n}\n\nexport default NavbarCategory;\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { getCategories } from '../../Data/RouteData';\nimport PuzztoolBannerWhite from '../../Images/puzztool_banner_white.svg';\nimport AppNavCategory from './AppNavCategory';\nimport './index.scss';\n\nfunction AppNav() {\n  return (\n    <Navbar\n      bg=\"dark\"\n      className=\"AppNav\"\n      collapseOnSelect={true}\n      expand=\"md\"\n      // Remove focus from the selected element to prevent it from taking\n      // further keyboard input.\n      onSelect={() => (document.activeElement as HTMLElement).blur()}\n      sticky=\"top\"\n      variant=\"dark\"\n    >\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>\n          <img\n            className=\"NavbarLogo\"\n            src={PuzztoolBannerWhite}\n            alt=\"PuzzTool logo\"\n          />\n        </Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav>\n          {getCategories().map(\n            category => <AppNavCategory key={category.name} category={category} />)}\n        </Nav>\n        <Nav>\n          <LinkContainer to=\"/help\" onClick={(e) => e.preventDefault()}>\n            <NavDropdown title=\"Help\" id=\"help-dropdown\">\n              <LinkContainer to=\"/help/settings\">\n                <NavDropdown.Item eventKey=\"Help.Settings\">Settings</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          </LinkContainer>\n          <Nav.Link\n            eventKey=\"Help.Feedback\"\n            href=\"https://github.com/puzztool/puzztool/issues/new\"\n            target=\"_blank\"\n          >\n            Feedback\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppNav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NotFound.scss';\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n      <p>If this was reached in error, use the navigation options or go <Link to=\"/\">home</Link>.</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useState, useEffect } from 'react';\nimport './index.scss';\n\ninterface Props {\n  delay?: number;\n  timeout?: number;\n}\n\nfunction Loading(props: Props) {\n  const [pastDelay, setPastDelay] = useState(false);\n  const [timedOut, setTimedOut] = useState(false);\n\n  useEffect(\n    () => {\n      const delay = props.delay;\n      const timeout = props.timeout;\n      let delayTimer: number;\n      let timeoutTimer: number;\n\n      if (delay && delay > 0) {\n        delayTimer = window.setTimeout(\n          () => setPastDelay(true),\n          delay);\n      } else {\n        setPastDelay(true);\n      }\n\n      if (timeout && timeout > 0) {\n        timeoutTimer = window.setTimeout(\n          () => setTimedOut(true),\n          timeout);\n      }\n\n      return () => {\n        if (delayTimer) {\n          clearTimeout(delayTimer);\n        }\n\n        if (timeoutTimer) {\n          clearTimeout(timeoutTimer);\n        }\n      };\n    },\n    [props.delay, props.timeout]);\n\n  function getContent() {\n    if (timedOut) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Timed out while loading content</div>\n        </div>\n      );\n    } else if (pastDelay) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-spinner\" />\n          <div>Loading</div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <div className=\"Loading\">\n      {getContent()}\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { Suspense } from 'react';\nimport ErrorBoundary from 'react-error-boundary';\nimport { Route, RouteComponentProps, Switch, withRouter } from 'react-router-dom';\nimport AppNav from './Features/AppNav';\nimport NotFound from './Features/Error/NotFound';\nimport Loading from './Features/Loading';\nimport './App.scss';\n\nconst loadingDelay = 200;\nconst loadingTimeout = 10000;\n\nconst Autokey = React.lazy(() => import('./Features/Cipher/Autokey'));\nconst Caesar = React.lazy(() => import('./Features/Cipher/Caesar'));\nconst Vigenere = React.lazy(() => import('./Features/Cipher/Vigenere'));\nconst AutoConvert = React.lazy(() => import('./Features/Encoding/AutoConvert'));\nconst Braille = React.lazy(() => import('./Features/Encoding/Braille'));\nconst Character = React.lazy(() => import('./Features/Encoding/Character'));\nconst Morse = React.lazy(() => import('./Features/Encoding/Morse'));\nconst Nato = React.lazy(() => import('./Features/Encoding/Nato'));\nconst NavalFlag = React.lazy(() => import('./Features/Encoding/NavalFlag'));\nconst Semaphore = React.lazy(() => import('./Features/Encoding/Semaphore'));\nconst Home = React.lazy(() => import('./Features/Home'));\nconst Pigpen = React.lazy(() => import('./Features/Pigpen'));\nconst Resistor = React.lazy(() => import('./Features/Resistor'));\nconst Settings = React.lazy(() => import('./Features/Settings'));\nconst WordSearch = React.lazy(() => import('./Features/WordSearch'));\n\nfunction ErrorFallback() {\n  return (\n    <div className=\"App-loadError\">\n      <div className=\"App-loadError-icon\">!</div>\n      <div>Failed to load content</div>\n    </div>\n  );\n}\n\nfunction App(props: RouteComponentProps) {\n  return (\n    <div className=\"App\">\n      <AppNav />\n      <div className=\"App-content\">\n        <ErrorBoundary FallbackComponent={ErrorFallback} key={props.history.location.key}>\n          <Suspense fallback={<Loading delay={loadingDelay} timeout={loadingTimeout} />}>\n            <Switch>\n              <Route exact={true} path=\"/\" component={Home} />\n              <Route exact={true} path=\"/cipher/autokey\" component={Autokey} />\n              <Route exact={true} path=\"/cipher/caesar\" component={Caesar} />\n              <Route exact={true} path=\"/cipher/vigenere\" component={Vigenere} />\n              <Route exact={true} path=\"/encoding/autoconvert\" component={AutoConvert} />\n              <Route exact={true} path=\"/encoding/braille\" component={Braille} />\n              <Route exact={true} path=\"/encoding/morse\" component={Morse} />\n              <Route exact={true} path=\"/encoding/pigpen\" component={Pigpen} />\n              <Route exact={true} path=\"/encoding/semaphore\" component={Semaphore} />\n              <Route exact={true} path=\"/help/settings\" component={Settings} />\n              <Route exact={true} path=\"/reference/characterencodings\" component={Character} />\n              <Route exact={true} path=\"/reference/nato\" component={Nato} />\n              <Route exact={true} path=\"/reference/navalflags\" component={NavalFlag} />\n              <Route exact={true} path=\"/reference/resistors\" component={Resistor} />\n              <Route exact={true} path=\"/solvers/wordsearch\" component={WordSearch} />\n              <Route component={NotFound} />\n            </Switch>\n          </Suspense>\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line:no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line:no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line:no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // tslint:disable-next-line:no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line:no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\nimport { Router } from 'react-router-dom';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') || '';\nconst history = createBrowserHistory({ basename: baseUrl });\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root'));\n\nserviceWorker.register();\n","export interface RouteChild {\r\n  description: string;\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nexport interface RouteCategory {\r\n  children: RouteChild[];\r\n  description: string;\r\n  name: string;\r\n  rootUrl: string;\r\n}\r\n\r\nexport function getCategories(): RouteCategory[] {\r\n  return [\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Word Search Solver',\r\n          name: 'Word Search',\r\n          url: '/wordsearch',\r\n        },\r\n      ],\r\n      description: 'Automated puzzle solvers',\r\n      name: 'Solvers',\r\n      rootUrl: '/solvers',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: ' A Vignere cipher which uses plaintext as the key',\r\n          name: 'Autokey',\r\n          url: '/autokey',\r\n        },\r\n        {\r\n          description: 'Letters are shifted by a fixed value',\r\n          name: 'Caesar',\r\n          url: '/caesar',\r\n        },\r\n        {\r\n          description: 'Letters are mapped based on a key word',\r\n          name: 'Vignere',\r\n          url: '/vigenere',\r\n        },\r\n      ],\r\n      description: 'Scrambled letters',\r\n      name: 'Ciphers',\r\n      rootUrl: '/cipher',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Mapping numbers to letters (ASCII, Binary, Ordinal)',\r\n          name: 'AutoConvert',\r\n          url: '/autoconvert',\r\n        },\r\n        {\r\n          description: 'Six dots in a two-by-three grid',\r\n          name: 'Braille',\r\n          url: '/braille',\r\n        },\r\n        {\r\n          description: 'Dots and dashes with separations',\r\n          name: 'Morse Code',\r\n          url: '/morse',\r\n        },\r\n        {\r\n          description: 'Parts of a tic-tac-toe grid or X, some with dot',\r\n          name: 'Pigpen',\r\n          url: '/pigpen',\r\n        },\r\n        {\r\n          description: ' Positions of two different flags',\r\n          name: 'Semaphore',\r\n          url: '/semaphore',\r\n        },\r\n      ],\r\n      description: 'Different ways to represent letters',\r\n      name: 'Encodings',\r\n      rootUrl: '/encoding',\r\n    },\r\n    {\r\n      children: [\r\n        {\r\n          description: 'Static display of number to letter mapping',\r\n          name: 'Character Encodings',\r\n          url: '/characterencodings',\r\n        },\r\n        {\r\n          description: 'Words used to clearly identify a letter',\r\n          name: 'NATO Alphabet',\r\n          url: '/nato',\r\n        },\r\n        {\r\n          description: 'Different simple flags which convey a letter',\r\n          name: 'Naval Flags',\r\n          url: '/navalflags',\r\n        },\r\n        {\r\n          description: 'Find a resistor value using different colored bands',\r\n          name: 'Resistors',\r\n          url: '/resistors',\r\n        }\r\n      ],\r\n      description: 'Miscellaneous information',\r\n      name: 'Reference',\r\n      rootUrl: '/reference',\r\n    }\r\n  ];\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/puzztool_banner_white.b6754a16.svg\";"],"sourceRoot":""}
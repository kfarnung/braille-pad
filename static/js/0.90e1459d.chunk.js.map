{"version":3,"sources":["../node_modules/puzzle-lib/build/src/index.js","../node_modules/puzzle-lib/build/src/Common/EncodingCategory.js","../node_modules/puzzle-lib/build/src/Braille/BrailleEncoding.js","../node_modules/puzzle-lib/build/src/Common/EncodingCharacterBase.js","../node_modules/puzzle-lib/build/src/Common/EncodingDataBase.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarUtils.js","../node_modules/puzzle-lib/build/src/Cipher/KeyedCipherStringBase.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterEncoding.js","../node_modules/puzzle-lib/build/src/Morse/MorseEncoding.js","../node_modules/puzzle-lib/build/src/Braille/BrailleData.js","../node_modules/puzzle-lib/build/src/Common/EncodingEntry.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterConversion.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterTableEntry.js","../node_modules/left-pad/index.js","../node_modules/puzzle-lib/build/src/Common/CharacterImage.js","../node_modules/puzzle-lib/build/src/Common/InlineSvg.js","../node_modules/puzzle-lib/build/src/Conversion/CharacterAutoConvert.js","../node_modules/puzzle-lib/build/src/Nato/NatoCharacter.js","../node_modules/puzzle-lib/build/src/Resistor/ResistorColorEntry.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreEncoding.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDegrees.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreDirection.js","../node_modules/puzzle-lib/build/src/Braille/BrailleCharacter.js","../node_modules/puzzle-lib/build/src/Common/EncodingLookupResult.js","../node_modules/puzzle-lib/build/src/Braille/BrailleDot.js","../node_modules/puzzle-lib/build/src/Braille/BrailleStream.js","../node_modules/puzzle-lib/build/src/Cipher/AutoKeyString.js","../node_modules/puzzle-lib/build/src/Cipher/CaesarString.js","../node_modules/puzzle-lib/build/src/Cipher/VigenereString.js","../node_modules/puzzle-lib/build/src/Conversion/SignificantFigures.js","../node_modules/puzzle-lib/build/src/Conversion/StringAutoConvert.js","../node_modules/puzzle-lib/build/src/Morse/MorseCharacter.js","../node_modules/puzzle-lib/build/src/Morse/MorseData.js","../node_modules/puzzle-lib/build/src/Nato/NatoData.js","../node_modules/puzzle-lib/build/src/NavalFlags/NavalFlags.js","../node_modules/puzzle-lib/build/src/Resistor/Resistor.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreCharacter.js","../node_modules/puzzle-lib/build/src/Semaphore/SemaphoreData.js"],"names":["Object","defineProperty","exports","value","BrailleCharacter_1","__webpack_require__","BrailleCharacter","BrailleDot_1","BrailleDot","BrailleEncoding_1","BrailleEncoding","BrailleStream_1","BrailleStream","AutoKeyString_1","AutoKeyString","CaesarString_1","CaesarString","KeyedCipherStringBase_1","KeyedCipherStringBase","VigenereString_1","VigenereString","CharacterImage_1","CharacterImage","EncodingCategory_1","EncodingCategory","EncodingEntry_1","EncodingEntry","InlineSvg_1","InlineSvg","CharacterAutoConvert_1","CharacterAutoConvert","CharacterConversion_1","CharacterConversion","CharacterEncoding_1","CharacterEncoding","CharacterTableEntry_1","CharacterTableEntry","SignificantFigures_1","SignificantFigures","StringAutoConvert_1","StringAutoConvert","MorseCharacter_1","MorseCharacter","MorseEncoding_1","MorseEncoding","NatoCharacter_1","NatoCharacter","NatoData_1","NatoData","NavalFlags_1","NavalFlags","Resistor_1","Resistor","ResistorColorEntry_1","ResistorColorEntry","SemaphoreCharacter_1","SemaphoreCharacter","SemaphoreDegrees_1","SemaphoreDegrees","SemaphoreDirection_1","SemaphoreDirection","EncodingCharacterBase","data","category","this","_lookup","_data","_category","invalidateLookup","prototype","get","set","enumerable","configurable","clear","onClear","empty","onEmpty","getExactMatches","ensureLookup","exact","getPotentialMatches","partial","toString","exactString","valid","length","valueOf","getEncoding","lookup","EncodingLookupResult_1","EncodingDataBase","_entries","encoding","All","result","EncodingLookupResult","_i","_a","entry","push","addToList","display","CaesarUtils","rotateLetter","ch","rot","Error","alphaLength","code","charCodeAt","base","isLowerAlpha","lowerA","isUpperAlpha","upperA","String","fromCharCode","rotateLetterWithKey","key","keyIndex","decrypt","keyCh","getCharacterWithMod","toOrdinal","isAlpha","str","index","charAt","upperZ","lowerZ","text","_text","_key","encrypt","convert","packMorse","args","arguments","None","shift","args_1","arg","Dot","Dash","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","EncodingDataBase_1","BrailleData","_super","_this","call","LetterA","Letter","LetterB","LetterC","LetterD","LetterE","LetterF","LetterG","LetterH","LetterI","LetterJ","LetterK","LetterL","LetterM","LetterN","LetterO","LetterP","LetterQ","LetterR","LetterS","LetterT","LetterU","LetterV","LetterW","LetterX","LetterY","LetterZ","Number0","Number","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","FormattingNumber","Formatting","FormattingCapital","PunctuationComma","Punctuation","PunctuationSemicolon","PunctuationApostrophe","PunctuationColon","PunctuationHyphen","PunctuationDecimalPoint","PunctuationFullStop","PunctuationExclamationPoint","PunctuationOpenQuote","PunctuationQuestionMark","PunctuationCloseQuote","PunctuationBracket","PunctuationSlash","instance","getAsciiTable","retVal","addAsciiRange","toAscii","getOrdinalTable","ascii","chCode","ordinalCode","array","start","end","conversion","maxValue","i","letter","leftPad","character","binary","getValue","ternary","octal","decimal","hexadecimal","Math","ceil","log","module","len","cache","pad","image","inlineSvg","viewBoxWidth","viewBoxHeight","render","convertCharacter","input","forcedCharacterEncoding","determineCharacterEncoding","Latin","baseTen","parseInt","Ascii","Ordinal","FiveBitBinary","appearsBinary","EightBitBinary","match","numeric","character_1","word","name","colorCode","multiplier","toleranceInPercent","hasValue","undefined","getDisplayValue","hasTolerance","getDisplayTolerance","SemaphoreEncoding","FromDegrees","degrees","position","North","ToDegrees","direction","counter","EncodingCharacterBase_1","BrailleData_1","_encoding","mask","toggle","map","join","_chars","_currentStr","_processPosition","_numberMode","invalidate","value_1","append","backspace","pop","space","update","CaesarUtils_1","apply","rotStr","fullKey","currentLetter","getRotation","getRotations","rotations","num","sigFigs","roundInternal","floor","round","func","RangeError","factor","getFactor","absFactor","abs","absNum","digits","pow","convertString","homogeneous","split","splitString","encoding_1","determineStringEncoding","reduce","encodingCount","encodingKeys","parsed_1","charEncoding","maxEncoding","maxCount","encodingKeys_1","filter","item","MorseData_1","MORSE_BITMASK","MorseData","_morse","toMorseString","morseChars","parseMorseString","morse","bits","substring","dot","dash","PunctuationPeriod","PunctuationForwardSlash","PunctuationOpenParenthesis","PunctuationCloseParenthesis","PunctuationAmpersand","PunctuationDoubleDash","PunctuationPlusSign","PunctuationUnderscore","PunctuationQuotationMark","PunctuationDollarSign","PunctuationAtSign","toUpperCase","colors","currentColor","INVALID_RESISTOR","applyMultiplier","multipler","BLACK","BROWN","RED","ORANGE","YELLOW","GREEN","BLUE","VIOLET","GREY","WHITE","GOLD","SILVER","colorTable","SemaphoreData_1","SemaphoreEncoding_1","SemaphoreData","_directions","addDirection","parseEncoding","directions","slice","dir","splice","removeDirection","indexOf","hasDirection","getDegrees","sort","a","getPotentialMatch","other","previousValue","currentValue"],"mappings":"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","file":"static/js/0.90e1459d.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrailleCharacter_1 = require(\"./Braille/BrailleCharacter\");\n\nexports.BrailleCharacter = BrailleCharacter_1.BrailleCharacter;\n\nvar BrailleDot_1 = require(\"./Braille/BrailleDot\");\n\nexports.BrailleDot = BrailleDot_1.BrailleDot;\n\nvar BrailleEncoding_1 = require(\"./Braille/BrailleEncoding\");\n\nexports.BrailleEncoding = BrailleEncoding_1.BrailleEncoding;\n\nvar BrailleStream_1 = require(\"./Braille/BrailleStream\");\n\nexports.BrailleStream = BrailleStream_1.BrailleStream;\n\nvar AutoKeyString_1 = require(\"./Cipher/AutoKeyString\");\n\nexports.AutoKeyString = AutoKeyString_1.AutoKeyString;\n\nvar CaesarString_1 = require(\"./Cipher/CaesarString\");\n\nexports.CaesarString = CaesarString_1.CaesarString;\n\nvar KeyedCipherStringBase_1 = require(\"./Cipher/KeyedCipherStringBase\");\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase_1.KeyedCipherStringBase;\n\nvar VigenereString_1 = require(\"./Cipher/VigenereString\");\n\nexports.VigenereString = VigenereString_1.VigenereString;\n\nvar CharacterImage_1 = require(\"./Common/CharacterImage\");\n\nexports.CharacterImage = CharacterImage_1.CharacterImage;\n\nvar EncodingCategory_1 = require(\"./Common/EncodingCategory\");\n\nexports.EncodingCategory = EncodingCategory_1.EncodingCategory;\n\nvar EncodingEntry_1 = require(\"./Common/EncodingEntry\");\n\nexports.EncodingEntry = EncodingEntry_1.EncodingEntry;\n\nvar InlineSvg_1 = require(\"./Common/InlineSvg\");\n\nexports.InlineSvg = InlineSvg_1.InlineSvg;\n\nvar CharacterAutoConvert_1 = require(\"./Conversion/CharacterAutoConvert\");\n\nexports.CharacterAutoConvert = CharacterAutoConvert_1.CharacterAutoConvert;\n\nvar CharacterConversion_1 = require(\"./Conversion/CharacterConversion\");\n\nexports.CharacterConversion = CharacterConversion_1.CharacterConversion;\n\nvar CharacterEncoding_1 = require(\"./Conversion/CharacterEncoding\");\n\nexports.CharacterEncoding = CharacterEncoding_1.CharacterEncoding;\n\nvar CharacterTableEntry_1 = require(\"./Conversion/CharacterTableEntry\");\n\nexports.CharacterTableEntry = CharacterTableEntry_1.CharacterTableEntry;\n\nvar SignificantFigures_1 = require(\"./Conversion/SignificantFigures\");\n\nexports.SignificantFigures = SignificantFigures_1.SignificantFigures;\n\nvar StringAutoConvert_1 = require(\"./Conversion/StringAutoConvert\");\n\nexports.StringAutoConvert = StringAutoConvert_1.StringAutoConvert;\n\nvar MorseCharacter_1 = require(\"./Morse/MorseCharacter\");\n\nexports.MorseCharacter = MorseCharacter_1.MorseCharacter;\n\nvar MorseEncoding_1 = require(\"./Morse/MorseEncoding\");\n\nexports.MorseEncoding = MorseEncoding_1.MorseEncoding;\n\nvar NatoCharacter_1 = require(\"./Nato/NatoCharacter\");\n\nexports.NatoCharacter = NatoCharacter_1.NatoCharacter;\n\nvar NatoData_1 = require(\"./Nato/NatoData\");\n\nexports.NatoData = NatoData_1.NatoData;\n\nvar NavalFlags_1 = require(\"./NavalFlags/NavalFlags\");\n\nexports.NavalFlags = NavalFlags_1.NavalFlags;\n\nvar Resistor_1 = require(\"./Resistor/Resistor\");\n\nexports.Resistor = Resistor_1.Resistor;\n\nvar ResistorColorEntry_1 = require(\"./Resistor/ResistorColorEntry\");\n\nexports.ResistorColorEntry = ResistorColorEntry_1.ResistorColorEntry;\n\nvar SemaphoreCharacter_1 = require(\"./Semaphore/SemaphoreCharacter\");\n\nexports.SemaphoreCharacter = SemaphoreCharacter_1.SemaphoreCharacter;\n\nvar SemaphoreDegrees_1 = require(\"./Semaphore/SemaphoreDegrees\");\n\nexports.SemaphoreDegrees = SemaphoreDegrees_1.SemaphoreDegrees;\n\nvar SemaphoreDirection_1 = require(\"./Semaphore/SemaphoreDirection\");\n\nexports.SemaphoreDirection = SemaphoreDirection_1.SemaphoreDirection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EncodingCategory;\n\n(function (EncodingCategory) {\n  EncodingCategory[EncodingCategory[\"None\"] = 0] = \"None\";\n  EncodingCategory[EncodingCategory[\"Letter\"] = 2] = \"Letter\";\n  EncodingCategory[EncodingCategory[\"Number\"] = 4] = \"Number\";\n  EncodingCategory[EncodingCategory[\"Formatting\"] = 8] = \"Formatting\";\n  EncodingCategory[EncodingCategory[\"Punctuation\"] = 16] = \"Punctuation\";\n  EncodingCategory[EncodingCategory[\"All\"] = 255] = \"All\";\n})(EncodingCategory = exports.EncodingCategory || (exports.EncodingCategory = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleEncoding;\n\n(function (BrailleEncoding) {\n  BrailleEncoding[BrailleEncoding[\"None\"] = 0] = \"None\"; // Letters (first decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterA\"] = 1] = \"LetterA\";\n  BrailleEncoding[BrailleEncoding[\"LetterB\"] = 3] = \"LetterB\";\n  BrailleEncoding[BrailleEncoding[\"LetterC\"] = 9] = \"LetterC\";\n  BrailleEncoding[BrailleEncoding[\"LetterD\"] = 25] = \"LetterD\";\n  BrailleEncoding[BrailleEncoding[\"LetterE\"] = 17] = \"LetterE\";\n  BrailleEncoding[BrailleEncoding[\"LetterF\"] = 11] = \"LetterF\";\n  BrailleEncoding[BrailleEncoding[\"LetterG\"] = 27] = \"LetterG\";\n  BrailleEncoding[BrailleEncoding[\"LetterH\"] = 19] = \"LetterH\";\n  BrailleEncoding[BrailleEncoding[\"LetterI\"] = 10] = \"LetterI\";\n  BrailleEncoding[BrailleEncoding[\"LetterJ\"] = 26] = \"LetterJ\"; // Letters (second decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterK\"] = 5] = \"LetterK\";\n  BrailleEncoding[BrailleEncoding[\"LetterL\"] = 7] = \"LetterL\";\n  BrailleEncoding[BrailleEncoding[\"LetterM\"] = 13] = \"LetterM\";\n  BrailleEncoding[BrailleEncoding[\"LetterN\"] = 29] = \"LetterN\";\n  BrailleEncoding[BrailleEncoding[\"LetterO\"] = 21] = \"LetterO\";\n  BrailleEncoding[BrailleEncoding[\"LetterP\"] = 15] = \"LetterP\";\n  BrailleEncoding[BrailleEncoding[\"LetterQ\"] = 31] = \"LetterQ\";\n  BrailleEncoding[BrailleEncoding[\"LetterR\"] = 23] = \"LetterR\";\n  BrailleEncoding[BrailleEncoding[\"LetterS\"] = 14] = \"LetterS\";\n  BrailleEncoding[BrailleEncoding[\"LetterT\"] = 30] = \"LetterT\"; // Letters (third decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterU\"] = 37] = \"LetterU\";\n  BrailleEncoding[BrailleEncoding[\"LetterV\"] = 39] = \"LetterV\";\n  BrailleEncoding[BrailleEncoding[\"LetterX\"] = 45] = \"LetterX\";\n  BrailleEncoding[BrailleEncoding[\"LetterY\"] = 61] = \"LetterY\";\n  BrailleEncoding[BrailleEncoding[\"LetterZ\"] = 53] = \"LetterZ\"; // Letters (fourth decade)\n\n  BrailleEncoding[BrailleEncoding[\"LetterW\"] = 58] = \"LetterW\"; // Numbers\n\n  BrailleEncoding[BrailleEncoding[\"Number1\"] = 1] = \"Number1\";\n  BrailleEncoding[BrailleEncoding[\"Number2\"] = 3] = \"Number2\";\n  BrailleEncoding[BrailleEncoding[\"Number3\"] = 9] = \"Number3\";\n  BrailleEncoding[BrailleEncoding[\"Number4\"] = 25] = \"Number4\";\n  BrailleEncoding[BrailleEncoding[\"Number5\"] = 17] = \"Number5\";\n  BrailleEncoding[BrailleEncoding[\"Number6\"] = 11] = \"Number6\";\n  BrailleEncoding[BrailleEncoding[\"Number7\"] = 27] = \"Number7\";\n  BrailleEncoding[BrailleEncoding[\"Number8\"] = 19] = \"Number8\";\n  BrailleEncoding[BrailleEncoding[\"Number9\"] = 10] = \"Number9\";\n  BrailleEncoding[BrailleEncoding[\"Number0\"] = 26] = \"Number0\"; // Formatting\n\n  BrailleEncoding[BrailleEncoding[\"FormattingNumber\"] = 60] = \"FormattingNumber\";\n  BrailleEncoding[BrailleEncoding[\"FormattingCapital\"] = 32] = \"FormattingCapital\"; // Punctuation\n\n  BrailleEncoding[BrailleEncoding[\"PunctuationComma\"] = 2] = \"PunctuationComma\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSemicolon\"] = 6] = \"PunctuationSemicolon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationApostrophe\"] = 4] = \"PunctuationApostrophe\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationColon\"] = 18] = \"PunctuationColon\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationHyphen\"] = 36] = \"PunctuationHyphen\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationDecimalPoint\"] = 40] = \"PunctuationDecimalPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationFullStop\"] = 50] = \"PunctuationFullStop\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationExclamationPoint\"] = 22] = \"PunctuationExclamationPoint\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationOpenQuote\"] = 38] = \"PunctuationOpenQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationQuestionMark\"] = 38] = \"PunctuationQuestionMark\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationCloseQuote\"] = 52] = \"PunctuationCloseQuote\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationBracket\"] = 54] = \"PunctuationBracket\";\n  BrailleEncoding[BrailleEncoding[\"PunctuationSlash\"] = 12] = \"PunctuationSlash\";\n})(BrailleEncoding = exports.BrailleEncoding || (exports.BrailleEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCharacterBase =\n/** @class */\nfunction () {\n  function EncodingCharacterBase(data, category) {\n    this._lookup = null;\n    this._data = data;\n    this._category = category;\n    this.invalidateLookup();\n  }\n\n  Object.defineProperty(EncodingCharacterBase.prototype, \"category\", {\n    get: function get() {\n      return this._category;\n    },\n    set: function set(value) {\n      if (this._category !== value) {\n        this._category = value;\n        this.invalidateLookup();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  EncodingCharacterBase.prototype.clear = function () {\n    this.onClear();\n    this.invalidateLookup();\n  };\n\n  EncodingCharacterBase.prototype.empty = function () {\n    return this.onEmpty();\n  };\n\n  EncodingCharacterBase.prototype.getExactMatches = function () {\n    return this.ensureLookup().exact;\n  };\n\n  EncodingCharacterBase.prototype.getPotentialMatches = function () {\n    return this.ensureLookup().partial;\n  };\n\n  EncodingCharacterBase.prototype.toString = function () {\n    return this.ensureLookup().exactString;\n  };\n\n  EncodingCharacterBase.prototype.valid = function () {\n    return this.ensureLookup().exact.length > 0;\n  };\n\n  EncodingCharacterBase.prototype.valueOf = function () {\n    return this.getEncoding();\n  };\n\n  EncodingCharacterBase.prototype.invalidateLookup = function () {\n    this._lookup = null;\n  };\n\n  EncodingCharacterBase.prototype.ensureLookup = function () {\n    if (!this._lookup) {\n      this._lookup = this._data.lookup(this.getEncoding(), this._category);\n    }\n\n    return this._lookup;\n  };\n\n  return EncodingCharacterBase;\n}();\n\nexports.EncodingCharacterBase = EncodingCharacterBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"./EncodingCategory\");\n\nvar EncodingEntry_1 = require(\"./EncodingEntry\");\n\nvar EncodingLookupResult_1 = require(\"./EncodingLookupResult\");\n\nvar EncodingDataBase =\n/** @class */\nfunction () {\n  function EncodingDataBase() {\n    this._entries = [];\n  }\n\n  EncodingDataBase.prototype.lookup = function (encoding, category) {\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var result = new EncodingLookupResult_1.EncodingLookupResult();\n\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var entry = _a[_i];\n\n      if ((entry.category & category) !== 0) {\n        if (entry.encoding === encoding) {\n          result.exact.push(entry);\n        } else if ((entry.encoding & encoding) === encoding) {\n          result.partial.push(entry);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  EncodingDataBase.prototype.addToList = function (encoding, category, display) {\n    this._entries.push(new EncodingEntry_1.EncodingEntry(encoding, category, display));\n  };\n\n  return EncodingDataBase;\n}();\n\nexports.EncodingDataBase = EncodingDataBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterConversion_1 = require(\"../Conversion/CharacterConversion\");\n\nvar CaesarUtils =\n/** @class */\nfunction () {\n  function CaesarUtils() {}\n\n  CaesarUtils.rotateLetter = function (ch, rot) {\n    if (ch.length !== 1) {\n      throw new Error('Expected a single character');\n    }\n\n    rot %= this.alphaLength;\n\n    if (rot < 0) {\n      rot += this.alphaLength;\n    }\n\n    var code = ch.charCodeAt(0);\n    var base = 0;\n\n    if (this.isLowerAlpha(code)) {\n      base = this.lowerA;\n    } else if (this.isUpperAlpha(code)) {\n      base = this.upperA;\n    } else {\n      return ch;\n    }\n\n    return String.fromCharCode((code - base + rot) % this.alphaLength + base);\n  };\n\n  CaesarUtils.rotateLetterWithKey = function (ch, key, keyIndex, decrypt) {\n    if (decrypt === void 0) {\n      decrypt = false;\n    }\n\n    if (key.length === 0) {\n      return ch;\n    }\n\n    var keyCh = this.getCharacterWithMod(key, keyIndex);\n    var rot = CharacterConversion_1.CharacterConversion.toOrdinal(keyCh) - 1;\n\n    if (decrypt) {\n      rot = -rot;\n    }\n\n    return this.rotateLetter(ch, rot);\n  };\n\n  CaesarUtils.isAlpha = function (ch) {\n    var code = ch.charCodeAt(0);\n    return this.isUpperAlpha(code) || this.isLowerAlpha(code);\n  };\n\n  CaesarUtils.getCharacterWithMod = function (str, index) {\n    return str.charAt(index % str.length);\n  };\n\n  CaesarUtils.isUpperAlpha = function (code) {\n    return code >= this.upperA && code <= this.upperZ;\n  };\n\n  CaesarUtils.isLowerAlpha = function (code) {\n    return code >= this.lowerA && code <= this.lowerZ;\n  };\n\n  CaesarUtils.upperA = 'A'.charCodeAt(0);\n  CaesarUtils.upperZ = 'Z'.charCodeAt(0);\n  CaesarUtils.lowerA = 'a'.charCodeAt(0);\n  CaesarUtils.lowerZ = 'z'.charCodeAt(0);\n  CaesarUtils.alphaLength = 26;\n  return CaesarUtils;\n}();\n\nexports.CaesarUtils = CaesarUtils;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar KeyedCipherStringBase =\n/** @class */\nfunction () {\n  function KeyedCipherStringBase(text, key) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    if (key === void 0) {\n      key = '';\n    }\n\n    this._text = text;\n    this._key = key;\n  }\n\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KeyedCipherStringBase.prototype, \"key\", {\n    get: function get() {\n      return this._key;\n    },\n    set: function set(value) {\n      this._key = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  KeyedCipherStringBase.prototype.encrypt = function () {\n    return this.convert(false);\n  };\n\n  KeyedCipherStringBase.prototype.decrypt = function () {\n    return this.convert(true);\n  };\n\n  return KeyedCipherStringBase;\n}();\n\nexports.KeyedCipherStringBase = KeyedCipherStringBase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CharacterEncoding;\n\n(function (CharacterEncoding) {\n  CharacterEncoding[CharacterEncoding[\"None\"] = 0] = \"None\";\n  CharacterEncoding[CharacterEncoding[\"Latin\"] = 1] = \"Latin\";\n  CharacterEncoding[CharacterEncoding[\"Ordinal\"] = 2] = \"Ordinal\";\n  CharacterEncoding[CharacterEncoding[\"FiveBitBinary\"] = 3] = \"FiveBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"EightBitBinary\"] = 4] = \"EightBitBinary\";\n  CharacterEncoding[CharacterEncoding[\"Ascii\"] = 5] = \"Ascii\";\n})(CharacterEncoding = exports.CharacterEncoding || (exports.CharacterEncoding = {}));","\"use strict\"; // The encoding for morse is much less straightforward than the others. The dots\n// and dashes each use two bits of the integer starting with the least-\n// significant bit.\n//\n// Example:\n//\n// 'F' -> ..-.\n//\n// Which encodes as:\n//\n// 01 01 10 01\n//  .  .  -  .\n//\n// Since it's packed starting with the LSB, the resulting number is reversed:\n//\n// 01100101 -> 0x65\n//\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction packMorse() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var value = MorseEncoding.None;\n  var shift = 0;\n\n  for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n    var arg = args_1[_a];\n    arg <<= shift;\n    value |= arg;\n    shift += 2;\n  }\n\n  return value;\n}\n\nvar MorseEncoding;\n\n(function (MorseEncoding) {\n  MorseEncoding[MorseEncoding[\"None\"] = 0] = \"None\"; // Primitives\n\n  MorseEncoding[MorseEncoding[\"Dot\"] = 1] = \"Dot\";\n  MorseEncoding[MorseEncoding[\"Dash\"] = 2] = \"Dash\"; // Letters\n\n  MorseEncoding[MorseEncoding[\"LetterA\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterA\";\n  MorseEncoding[MorseEncoding[\"LetterB\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterB\";\n  MorseEncoding[MorseEncoding[\"LetterC\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterC\";\n  MorseEncoding[MorseEncoding[\"LetterD\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterD\";\n  MorseEncoding[MorseEncoding[\"LetterE\"] = packMorse(MorseEncoding.Dot)] = \"LetterE\";\n  MorseEncoding[MorseEncoding[\"LetterF\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterF\";\n  MorseEncoding[MorseEncoding[\"LetterG\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterG\";\n  MorseEncoding[MorseEncoding[\"LetterH\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterH\";\n  MorseEncoding[MorseEncoding[\"LetterI\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterI\";\n  MorseEncoding[MorseEncoding[\"LetterJ\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterJ\";\n  MorseEncoding[MorseEncoding[\"LetterK\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterK\";\n  MorseEncoding[MorseEncoding[\"LetterL\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterL\";\n  MorseEncoding[MorseEncoding[\"LetterM\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterM\";\n  MorseEncoding[MorseEncoding[\"LetterN\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterN\";\n  MorseEncoding[MorseEncoding[\"LetterO\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterO\";\n  MorseEncoding[MorseEncoding[\"LetterP\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterP\";\n  MorseEncoding[MorseEncoding[\"LetterQ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterQ\";\n  MorseEncoding[MorseEncoding[\"LetterR\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterR\";\n  MorseEncoding[MorseEncoding[\"LetterS\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterS\";\n  MorseEncoding[MorseEncoding[\"LetterT\"] = packMorse(MorseEncoding.Dash)] = \"LetterT\";\n  MorseEncoding[MorseEncoding[\"LetterU\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterU\";\n  MorseEncoding[MorseEncoding[\"LetterV\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterV\";\n  MorseEncoding[MorseEncoding[\"LetterW\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterW\";\n  MorseEncoding[MorseEncoding[\"LetterX\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterX\";\n  MorseEncoding[MorseEncoding[\"LetterY\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterY\";\n  MorseEncoding[MorseEncoding[\"LetterZ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterZ\"; // Numbers\n\n  MorseEncoding[MorseEncoding[\"Number0\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number0\";\n  MorseEncoding[MorseEncoding[\"Number1\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number1\";\n  MorseEncoding[MorseEncoding[\"Number2\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number2\";\n  MorseEncoding[MorseEncoding[\"Number3\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number3\";\n  MorseEncoding[MorseEncoding[\"Number4\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"Number4\";\n  MorseEncoding[MorseEncoding[\"Number5\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number5\";\n  MorseEncoding[MorseEncoding[\"Number6\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number6\";\n  MorseEncoding[MorseEncoding[\"Number7\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number7\";\n  MorseEncoding[MorseEncoding[\"Number8\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number8\";\n  MorseEncoding[MorseEncoding[\"Number9\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"Number9\"; // Punctuation\n\n  MorseEncoding[MorseEncoding[\"PunctuationPeriod\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationPeriod\";\n  MorseEncoding[MorseEncoding[\"PunctuationComma\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationComma\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuestionMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationQuestionMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationApostrophe\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationApostrophe\";\n  MorseEncoding[MorseEncoding[\"PunctuationExclamationPoint\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationExclamationPoint\";\n  MorseEncoding[MorseEncoding[\"PunctuationForwardSlash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationForwardSlash\";\n  MorseEncoding[MorseEncoding[\"PunctuationOpenParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationOpenParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationCloseParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationCloseParenthesis\";\n  MorseEncoding[MorseEncoding[\"PunctuationAmpersand\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationAmpersand\";\n  MorseEncoding[MorseEncoding[\"PunctuationColon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationColon\";\n  MorseEncoding[MorseEncoding[\"PunctuationSemicolon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationSemicolon\";\n  MorseEncoding[MorseEncoding[\"PunctuationDoubleDash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDoubleDash\";\n  MorseEncoding[MorseEncoding[\"PunctuationPlusSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationPlusSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationHyphen\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationHyphen\";\n  MorseEncoding[MorseEncoding[\"PunctuationUnderscore\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationUnderscore\";\n  MorseEncoding[MorseEncoding[\"PunctuationQuotationMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationQuotationMark\";\n  MorseEncoding[MorseEncoding[\"PunctuationDollarSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDollarSign\";\n  MorseEncoding[MorseEncoding[\"PunctuationAtSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationAtSign\";\n})(MorseEncoding = exports.MorseEncoding || (exports.MorseEncoding = {}));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleData =\n/** @class */\nfunction (_super) {\n  __extends(BrailleData, _super);\n\n  function BrailleData() {\n    var _this = _super.call(this) || this;\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingCapital, EncodingCategory_1.EncodingCategory.Formatting, '^');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationDecimalPoint, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationFullStop, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationOpenQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationCloseQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    return _this;\n  }\n\n  BrailleData.instance = new BrailleData();\n  return BrailleData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.BrailleData = BrailleData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingEntry =\n/** @class */\nfunction () {\n  function EncodingEntry(encoding, category, display) {\n    this.encoding = encoding;\n    this.category = category;\n    this.display = display;\n  }\n\n  EncodingEntry.prototype.toString = function () {\n    return this.display;\n  };\n\n  return EncodingEntry;\n}();\n\nexports.EncodingEntry = EncodingEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterTableEntry_1 = require(\"./CharacterTableEntry\");\n\nvar CharacterConversion =\n/** @class */\nfunction () {\n  function CharacterConversion() {}\n\n  CharacterConversion.getAsciiTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 48, 57, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toAscii, 127);\n    CharacterConversion.addAsciiRange(retVal, 97, 122, CharacterConversion.toAscii, 127);\n    return retVal;\n  };\n\n  CharacterConversion.getOrdinalTable = function () {\n    var retVal = [];\n    CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toOrdinal, 26);\n    return retVal;\n  };\n\n  CharacterConversion.toAscii = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var ascii = ch.charCodeAt(0);\n\n    if (ascii >= 0 && ascii <= 127) {\n      return ascii;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.toOrdinal = function (ch) {\n    if (typeof ch !== 'string' || ch.length !== 1) {\n      throw new Error('A single character is required');\n    }\n\n    var chCode = ch.charCodeAt(0);\n    var ordinalCode = chCode - 'a'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    ordinalCode = chCode - 'A'.charCodeAt(0);\n\n    if (ordinalCode >= 0 && ordinalCode < 26) {\n      return ordinalCode + 1;\n    }\n\n    return -1;\n  };\n\n  CharacterConversion.addAsciiRange = function (array, start, end, conversion, maxValue) {\n    for (var i = start; i <= end; i++) {\n      var letter = String.fromCharCode(i);\n      array.push(new CharacterTableEntry_1.CharacterTableEntry(letter, conversion(letter), maxValue));\n    }\n  };\n\n  return CharacterConversion;\n}();\n\nexports.CharacterConversion = CharacterConversion;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar leftPad = require(\"left-pad\");\n\nvar CharacterTableEntry =\n/** @class */\nfunction () {\n  function CharacterTableEntry(character, value, maxValue) {\n    this.character = character;\n    this.binary = CharacterTableEntry.getValue(value, 2, maxValue);\n    this.ternary = CharacterTableEntry.getValue(value, 3, maxValue);\n    this.octal = CharacterTableEntry.getValue(value, 8, maxValue);\n    this.decimal = CharacterTableEntry.getValue(value, 10, maxValue);\n    this.hexadecimal = CharacterTableEntry.getValue(value, 16, maxValue);\n  }\n\n  CharacterTableEntry.getValue = function (value, base, maxValue) {\n    return leftPad(value.toString(base), Math.ceil(Math.log(maxValue) / Math.log(base)), '0');\n  };\n\n  return CharacterTableEntry;\n}();\n\nexports.CharacterTableEntry = CharacterTableEntry;","/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\n\nmodule.exports = leftPad;\nvar cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];\n\nfunction leftPad(str, len, ch) {\n  // convert `str` to a `string`\n  str = str + ''; // `len` is the `pad`'s length now\n\n  len = len - str.length; // doesn't need to pad\n\n  if (len <= 0) return str; // `ch` defaults to `' '`\n\n  if (!ch && ch !== 0) ch = ' '; // convert `ch` to a `string` cuz it could be a number\n\n  ch = ch + ''; // cache common use cases\n\n  if (ch === ' ' && len < 10) return cache[len] + str; // `pad` starts with an empty string\n\n  var pad = ''; // loop\n\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch; // divide `len` by 2, ditch the remainder\n\n    len >>= 1; // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n\n    if (len) ch += ch; // `len` is 0, exit the loop\n    else break;\n  } // pad `str`!\n\n\n  return pad + str;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage =\n/** @class */\nfunction () {\n  function CharacterImage(character, image) {\n    this.character = character;\n    this.image = image;\n  }\n\n  return CharacterImage;\n}();\n\nexports.CharacterImage = CharacterImage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar InlineSvg =\n/** @class */\nfunction () {\n  function InlineSvg(inlineSvg, viewBoxWidth, viewBoxHeight) {\n    this.inlineSvg = inlineSvg;\n    this.viewBoxWidth = viewBoxWidth;\n    this.viewBoxHeight = viewBoxHeight;\n  }\n\n  InlineSvg.prototype.render = function () {\n    // tslint:disable-next-line:max-line-length\n    return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 \" + this.viewBoxWidth + \" \" + this.viewBoxHeight + \"\\\">\" + this.inlineSvg + \"</svg>\";\n  };\n\n  return InlineSvg;\n}();\n\nexports.InlineSvg = InlineSvg;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar CharacterAutoConvert =\n/** @class */\nfunction () {\n  function CharacterAutoConvert() {} // Forced encoding can be useful when converting an entire string\n  // or simply dealing with binary which has no leading zeros\n\n\n  CharacterAutoConvert.convertCharacter = function (input, forcedCharacterEncoding) {\n    var encoding = null;\n\n    if (!forcedCharacterEncoding) {\n      encoding = this.determineCharacterEncoding(input);\n    } else {\n      encoding = forcedCharacterEncoding;\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.None) {\n      return '';\n    } // Assume that Latin characters should remain\n\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Latin) {\n      return input;\n    }\n\n    var baseTen = Number.parseInt(input, 10);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ascii) {\n      return String.fromCharCode(baseTen);\n    }\n\n    var asciiOffset = 64;\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.Ordinal) {\n      return String.fromCharCode(baseTen + asciiOffset);\n    }\n\n    var binary = Number.parseInt(input, 2);\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.FiveBitBinary && this.appearsBinary(input)) {\n      return String.fromCharCode(binary + asciiOffset);\n    }\n\n    if (encoding === CharacterEncoding_1.CharacterEncoding.EightBitBinary && this.appearsBinary(input)) {\n      return String.fromCharCode(binary);\n    }\n\n    return '';\n  };\n\n  CharacterAutoConvert.determineCharacterEncoding = function (input) {\n    if (input.match(/[a-z]/i)) {\n      return CharacterEncoding_1.CharacterEncoding.Latin;\n    }\n\n    var numeric = Number.parseInt(input, 10);\n\n    if (this.appearsBinary(input)) {\n      if (input.length === 5) {\n        return CharacterEncoding_1.CharacterEncoding.FiveBitBinary;\n      } else if (input.length === 8) {\n        return CharacterEncoding_1.CharacterEncoding.EightBitBinary;\n      }\n    }\n\n    if (input.length < 3 && numeric > 0 && numeric < 27) {\n      return CharacterEncoding_1.CharacterEncoding.Ordinal;\n    }\n\n    if (numeric > 64 && numeric < 91) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    if (numeric > 97 && numeric < 123) {\n      return CharacterEncoding_1.CharacterEncoding.Ascii;\n    }\n\n    return CharacterEncoding_1.CharacterEncoding.None;\n  };\n\n  CharacterAutoConvert.appearsBinary = function (character) {\n    for (var _i = 0, character_1 = character; _i < character_1.length; _i++) {\n      var letter = character_1[_i];\n\n      if (letter !== '0' && letter !== '1') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return CharacterAutoConvert;\n}();\n\nexports.CharacterAutoConvert = CharacterAutoConvert;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter =\n/** @class */\nfunction () {\n  function NatoCharacter(character, word) {\n    this.character = character;\n    this.word = word;\n  }\n\n  return NatoCharacter;\n}();\n\nexports.NatoCharacter = NatoCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry =\n/** @class */\nfunction () {\n  function ResistorColorEntry(name, colorCode, multiplier, value, toleranceInPercent) {\n    this.name = name;\n    this.value = value;\n    this.colorCode = colorCode;\n    this.multiplier = multiplier;\n    this.toleranceInPercent = toleranceInPercent;\n  }\n\n  ResistorColorEntry.prototype.hasValue = function () {\n    return this.value !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayValue = function () {\n    if (this.value === undefined) {\n      return '';\n    }\n\n    return this.value.toString();\n  };\n\n  ResistorColorEntry.prototype.hasTolerance = function () {\n    return this.toleranceInPercent !== undefined;\n  };\n\n  ResistorColorEntry.prototype.getDisplayTolerance = function () {\n    if (this.toleranceInPercent === undefined) {\n      return '';\n    }\n\n    return this.toleranceInPercent + \"%\";\n  };\n\n  return ResistorColorEntry;\n}();\n\nexports.ResistorColorEntry = ResistorColorEntry;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreEncoding;\n\n(function (SemaphoreEncoding) {\n  SemaphoreEncoding[SemaphoreEncoding[\"None\"] = 0] = \"None\"; // Letters\n\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterA\"] = 96] = \"LetterA\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterB\"] = 160] = \"LetterB\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterC\"] = 288] = \"LetterC\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterD\"] = 34] = \"LetterD\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterE\"] = 36] = \"LetterE\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterF\"] = 40] = \"LetterF\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterG\"] = 48] = \"LetterG\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterH\"] = 192] = \"LetterH\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterI\"] = 320] = \"LetterI\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterJ\"] = 10] = \"LetterJ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterK\"] = 66] = \"LetterK\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterL\"] = 68] = \"LetterL\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterM\"] = 72] = \"LetterM\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterN\"] = 80] = \"LetterN\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterO\"] = 384] = \"LetterO\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterP\"] = 130] = \"LetterP\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterQ\"] = 132] = \"LetterQ\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterR\"] = 136] = \"LetterR\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterS\"] = 144] = \"LetterS\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterT\"] = 258] = \"LetterT\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterU\"] = 260] = \"LetterU\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterV\"] = 18] = \"LetterV\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterW\"] = 12] = \"LetterW\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterX\"] = 20] = \"LetterX\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterY\"] = 264] = \"LetterY\";\n  SemaphoreEncoding[SemaphoreEncoding[\"LetterZ\"] = 24] = \"LetterZ\"; // Numbers\n\n  SemaphoreEncoding[SemaphoreEncoding[\"Number1\"] = 96] = \"Number1\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number2\"] = 160] = \"Number2\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number3\"] = 288] = \"Number3\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number4\"] = 34] = \"Number4\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number5\"] = 36] = \"Number5\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number6\"] = 40] = \"Number6\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number7\"] = 48] = \"Number7\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number8\"] = 192] = \"Number8\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number9\"] = 320] = \"Number9\";\n  SemaphoreEncoding[SemaphoreEncoding[\"Number0\"] = 66] = \"Number0\"; // Formatting\n\n  SemaphoreEncoding[SemaphoreEncoding[\"FormattingNumber\"] = 6] = \"FormattingNumber\";\n})(SemaphoreEncoding = exports.SemaphoreEncoding || (exports.SemaphoreEncoding = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SemaphoreDirection_1 = require(\"./SemaphoreDirection\");\n\nvar SemaphoreDegrees =\n/** @class */\nfunction () {\n  function SemaphoreDegrees() {}\n\n  SemaphoreDegrees.FromDegrees = function (degrees) {\n    if (degrees >= 360) {\n      degrees = degrees % 360;\n    }\n\n    if (degrees % 45 !== 0 || degrees < 0) {\n      throw new Error('Invalid degrees');\n    }\n\n    var position = degrees / 45;\n    return SemaphoreDirection_1.SemaphoreDirection.North << position;\n  };\n\n  SemaphoreDegrees.ToDegrees = function (direction) {\n    var position = SemaphoreDirection_1.SemaphoreDirection.North;\n    var counter = 0;\n\n    while (counter < 9 && position !== direction) {\n      position = position << 1;\n      counter++;\n    }\n\n    return counter * 45;\n  };\n\n  return SemaphoreDegrees;\n}();\n\nexports.SemaphoreDegrees = SemaphoreDegrees;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar SemaphoreDirection;\n\n(function (SemaphoreDirection) {\n  SemaphoreDirection[SemaphoreDirection[\"None\"] = 0] = \"None\";\n  SemaphoreDirection[SemaphoreDirection[\"North\"] = 2] = \"North\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthEast\"] = 4] = \"NorthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"East\"] = 8] = \"East\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthEast\"] = 16] = \"SouthEast\";\n  SemaphoreDirection[SemaphoreDirection[\"South\"] = 32] = \"South\";\n  SemaphoreDirection[SemaphoreDirection[\"SouthWest\"] = 64] = \"SouthWest\";\n  SemaphoreDirection[SemaphoreDirection[\"West\"] = 128] = \"West\";\n  SemaphoreDirection[SemaphoreDirection[\"NorthWest\"] = 256] = \"NorthWest\";\n})(SemaphoreDirection = exports.SemaphoreDirection || (exports.SemaphoreDirection = {}));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleCharacter =\n/** @class */\nfunction (_super) {\n  __extends(BrailleCharacter, _super);\n\n  function BrailleCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = BrailleEncoding_1.BrailleEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, BrailleData_1.BrailleData.instance, category) || this;\n\n    _this._encoding = encoding;\n    return _this;\n  }\n\n  Object.defineProperty(BrailleCharacter.prototype, \"encoding\", {\n    get: function get() {\n      return this._encoding;\n    },\n    set: function set(value) {\n      this._encoding = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleCharacter.prototype.get = function (mask) {\n    return (this._encoding & mask) === mask;\n  };\n\n  BrailleCharacter.prototype.toggle = function (mask) {\n    this._encoding ^= mask;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onClear = function () {\n    this._encoding = BrailleEncoding_1.BrailleEncoding.None;\n    this.invalidateLookup();\n  };\n\n  BrailleCharacter.prototype.onEmpty = function () {\n    return this._encoding === BrailleEncoding_1.BrailleEncoding.None;\n  };\n\n  BrailleCharacter.prototype.getEncoding = function () {\n    return this._encoding;\n  };\n\n  return BrailleCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.BrailleCharacter = BrailleCharacter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingLookupResult =\n/** @class */\nfunction () {\n  function EncodingLookupResult() {\n    this.exact = [];\n    this.partial = [];\n  }\n\n  Object.defineProperty(EncodingLookupResult.prototype, \"exactString\", {\n    get: function get() {\n      return this.exact.map(function (value) {\n        return value.toString();\n      }).join('/');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return EncodingLookupResult;\n}();\n\nexports.EncodingLookupResult = EncodingLookupResult;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BrailleDot;\n\n(function (BrailleDot) {\n  BrailleDot[BrailleDot[\"None\"] = 0] = \"None\";\n  BrailleDot[BrailleDot[\"UpperLeft\"] = 1] = \"UpperLeft\";\n  BrailleDot[BrailleDot[\"MiddleLeft\"] = 2] = \"MiddleLeft\";\n  BrailleDot[BrailleDot[\"LowerLeft\"] = 4] = \"LowerLeft\";\n  BrailleDot[BrailleDot[\"UpperRight\"] = 8] = \"UpperRight\";\n  BrailleDot[BrailleDot[\"MiddleRight\"] = 16] = \"MiddleRight\";\n  BrailleDot[BrailleDot[\"LowerRight\"] = 32] = \"LowerRight\";\n})(BrailleDot = exports.BrailleDot || (exports.BrailleDot = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar BrailleData_1 = require(\"./BrailleData\");\n\nvar BrailleEncoding_1 = require(\"./BrailleEncoding\");\n\nvar BrailleStream =\n/** @class */\nfunction () {\n  function BrailleStream() {\n    this._chars = [];\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n    this.invalidate();\n  }\n\n  Object.defineProperty(BrailleStream.prototype, \"chars\", {\n    get: function get() {\n      return this._chars;\n    },\n    set: function set(value) {\n      this.clear();\n\n      for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n        var ch = value_1[_i];\n\n        this._chars.push(ch);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrailleStream.prototype.append = function (ch) {\n    this._chars.push(ch.valueOf());\n  };\n\n  BrailleStream.prototype.clear = function () {\n    this._chars.length = 0;\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.backspace = function () {\n    this._chars.pop();\n\n    this.invalidate();\n  };\n\n  BrailleStream.prototype.space = function () {\n    this._chars.push(BrailleEncoding_1.BrailleEncoding.None);\n  };\n\n  BrailleStream.prototype.toString = function () {\n    this.update();\n    return this._currentStr;\n  };\n\n  BrailleStream.prototype.invalidate = function () {\n    this._currentStr = '';\n    this._processPosition = 0;\n    this._numberMode = false;\n  };\n\n  BrailleStream.prototype.update = function () {\n    while (this._processPosition < this._chars.length) {\n      var ch = this._chars[this._processPosition];\n\n      switch (ch) {\n        case BrailleEncoding_1.BrailleEncoding.None:\n          this._numberMode = false;\n          this._currentStr += ' ';\n          break;\n\n        case BrailleEncoding_1.BrailleEncoding.FormattingNumber:\n          this._numberMode = true;\n          this._currentStr += '#';\n          break;\n\n        default:\n          var category = EncodingCategory_1.EncodingCategory.Punctuation | (this._numberMode ? EncodingCategory_1.EncodingCategory.Number : EncodingCategory_1.EncodingCategory.Letter);\n          var exact = BrailleData_1.BrailleData.instance.lookup(ch, category).exact;\n\n          if (exact.length > 0) {\n            this._currentStr += exact[0].toString();\n          }\n\n      }\n\n      this._processPosition++;\n    }\n  };\n\n  return BrailleStream;\n}();\n\nexports.BrailleStream = BrailleStream;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar AutoKeyString =\n/** @class */\nfunction (_super) {\n  __extends(AutoKeyString, _super);\n\n  function AutoKeyString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AutoKeyString.prototype.convert = function (decrypt) {\n    if (this._key.length < 1) {\n      return this._text;\n    } else {\n      var rotStr = [];\n      var keyIndex = 0;\n      var fullKey = this._key;\n\n      for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n        var ch = _a[_i];\n\n        if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n          var currentLetter = CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, fullKey, keyIndex++, decrypt);\n          rotStr.push(currentLetter);\n\n          if (decrypt) {\n            fullKey += currentLetter;\n          } else {\n            fullKey += ch;\n          }\n        } else {\n          rotStr.push(ch);\n        }\n      }\n\n      return rotStr.join('');\n    }\n  };\n\n  return AutoKeyString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.AutoKeyString = AutoKeyString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar CaesarString =\n/** @class */\nfunction () {\n  function CaesarString(text) {\n    if (text === void 0) {\n      text = '';\n    }\n\n    this._text = text;\n  }\n\n  Object.defineProperty(CaesarString.prototype, \"text\", {\n    get: function get() {\n      return this._text;\n    },\n    set: function set(value) {\n      this._text = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CaesarString.prototype.getRotation = function (rot) {\n    var rotStr = [];\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n      rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetter(ch, rot));\n    }\n\n    return rotStr.join('');\n  };\n\n  CaesarString.prototype.getRotations = function () {\n    var rotations = [];\n    rotations.push(this._text);\n\n    for (var i = 1; i < 26; i++) {\n      rotations.push(this.getRotation(i));\n    }\n\n    return rotations;\n  };\n\n  return CaesarString;\n}();\n\nexports.CaesarString = CaesarString;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CaesarUtils_1 = require(\"./CaesarUtils\");\n\nvar KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\n\nvar VigenereString =\n/** @class */\nfunction (_super) {\n  __extends(VigenereString, _super);\n\n  function VigenereString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  VigenereString.prototype.convert = function (decrypt) {\n    var rotStr = [];\n    var keyIndex = 0;\n\n    for (var _i = 0, _a = this._text; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n        rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, this._key, keyIndex++, decrypt));\n      } else {\n        rotStr.push(ch);\n      }\n    }\n\n    return rotStr.join('');\n  };\n\n  return VigenereString;\n}(KeyedCipherStringBase_1.KeyedCipherStringBase);\n\nexports.VigenereString = VigenereString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SignificantFigures =\n/** @class */\nfunction () {\n  function SignificantFigures() {}\n\n  SignificantFigures.ceil = function (num, sigFigs) {\n    return this.roundInternal(Math.ceil, num, sigFigs);\n  };\n\n  SignificantFigures.floor = function (num, sigFigs) {\n    return this.roundInternal(Math.floor, num, sigFigs);\n  };\n\n  SignificantFigures.round = function (num, sigFigs) {\n    return this.roundInternal(Math.round, num, sigFigs);\n  };\n\n  SignificantFigures.roundInternal = function (func, num, sigFigs) {\n    if (num === 0) {\n      return num;\n    }\n\n    if (sigFigs <= 0) {\n      throw new RangeError('sigFigs value must be positive');\n    }\n\n    var factor = this.getFactor(num, sigFigs);\n\n    if (factor > 0) {\n      return func(num / factor) * factor;\n    } else if (factor < 0) {\n      var absFactor = Math.abs(factor);\n      return func(num * absFactor) / absFactor;\n    } else {\n      return num;\n    }\n  };\n\n  SignificantFigures.getFactor = function (num, sigFigs) {\n    var absNum = Math.abs(num);\n    var digits = 0;\n\n    if (absNum < 1) {\n      digits = -sigFigs;\n    } else {\n      digits = Math.ceil(Math.log(absNum) / Math.log(10)) - sigFigs;\n    }\n\n    if (digits < 0) {\n      return -Math.pow(10, Math.abs(digits));\n    } else {\n      return Math.pow(10, digits);\n    }\n  };\n\n  return SignificantFigures;\n}();\n\nexports.SignificantFigures = SignificantFigures;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterAutoConvert_1 = require(\"./CharacterAutoConvert\");\n\nvar CharacterEncoding_1 = require(\"./CharacterEncoding\");\n\nvar StringAutoConvert =\n/** @class */\nfunction () {\n  function StringAutoConvert() {}\n\n  StringAutoConvert.convertString = function (input, homogeneous) {\n    var split = this.splitString(input);\n\n    if (homogeneous) {\n      var encoding_1 = this.determineStringEncoding(input);\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter, encoding_1);\n      }, '');\n    } else {\n      return split.reduce(function (result, letter) {\n        return result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter);\n      }, '');\n    }\n  };\n\n  StringAutoConvert.determineStringEncoding = function (input) {\n    var encodingCount = {};\n    var parsed = this.splitString(input);\n    var encodingKeys = [];\n\n    for (var _i = 0, parsed_1 = parsed; _i < parsed_1.length; _i++) {\n      var letter = parsed_1[_i];\n      var charEncoding = CharacterAutoConvert_1.CharacterAutoConvert.determineCharacterEncoding(letter);\n\n      if (!encodingCount[charEncoding]) {\n        encodingCount[charEncoding] = 1;\n        encodingKeys.push(charEncoding);\n      } else {\n        encodingCount[charEncoding] = encodingCount[charEncoding] + 1;\n      }\n    }\n\n    var maxCount = 0;\n    var maxEncoding;\n    maxEncoding = CharacterEncoding_1.CharacterEncoding.None;\n\n    for (var _a = 0, encodingKeys_1 = encodingKeys; _a < encodingKeys_1.length; _a++) {\n      var encoding = encodingKeys_1[_a];\n\n      if (encodingCount[encoding] > maxCount) {\n        maxCount = encodingCount[encoding];\n        maxEncoding = encoding;\n      }\n    }\n\n    return maxEncoding;\n  };\n\n  StringAutoConvert.splitString = function (input) {\n    return input.split(' ').filter(function (item) {\n      return item !== '';\n    });\n  };\n\n  return StringAutoConvert;\n}();\n\nexports.StringAutoConvert = StringAutoConvert;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar MorseData_1 = require(\"./MorseData\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MORSE_BITMASK = MorseEncoding_1.MorseEncoding.Dot | MorseEncoding_1.MorseEncoding.Dash;\n\nvar MorseCharacter =\n/** @class */\nfunction (_super) {\n  __extends(MorseCharacter, _super);\n\n  function MorseCharacter(str, category) {\n    if (str === void 0) {\n      str = '';\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, MorseData_1.MorseData.instance, category) || this;\n\n    _this._morse = str;\n    return _this;\n  }\n\n  MorseCharacter.toMorseString = function (encoding) {\n    var morseChars = '';\n\n    while (encoding !== MorseEncoding_1.MorseEncoding.None) {\n      if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dot) {\n        morseChars += '.';\n      } else if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dash) {\n        morseChars += '-';\n      } else {\n        throw new Error('Invalid morse bits');\n      }\n\n      encoding >>>= 2;\n    }\n\n    return morseChars;\n  };\n\n  MorseCharacter.parseMorseString = function (morse) {\n    var bits = MorseEncoding_1.MorseEncoding.None;\n\n    for (var i = morse.length - 1; i >= 0; i--) {\n      var ch = morse[i];\n\n      if (ch === '.') {\n        bits |= MorseEncoding_1.MorseEncoding.Dot;\n      } else if (ch === '-') {\n        bits |= MorseEncoding_1.MorseEncoding.Dash;\n      } else {\n        throw new Error('Invalid morse character');\n      }\n\n      bits <<= 2;\n    }\n\n    bits >>>= 2;\n    return bits;\n  };\n\n  Object.defineProperty(MorseCharacter.prototype, \"morseString\", {\n    get: function get() {\n      return this._morse;\n    },\n    set: function set(value) {\n      this._morse = value;\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MorseCharacter.prototype.backspace = function () {\n    if (this._morse.length > 0) {\n      this._morse = this._morse.substring(0, this._morse.length - 1);\n      this.invalidateLookup();\n    }\n  };\n\n  MorseCharacter.prototype.dot = function () {\n    this._morse += '.';\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.dash = function () {\n    this._morse += '-';\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.onClear = function () {\n    this._morse = '';\n    this.invalidateLookup();\n  };\n\n  MorseCharacter.prototype.onEmpty = function () {\n    return this._morse.length === 0;\n  };\n\n  MorseCharacter.prototype.getEncoding = function () {\n    return MorseCharacter.parseMorseString(this._morse);\n  };\n\n  return MorseCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.MorseCharacter = MorseCharacter;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar MorseEncoding_1 = require(\"./MorseEncoding\");\n\nvar MorseData =\n/** @class */\nfunction (_super) {\n  __extends(MorseData, _super);\n\n  function MorseData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9'); // Punctuation\n\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPeriod, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, '\\'');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationForwardSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationOpenParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationCloseParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAmpersand, EncodingCategory_1.EncodingCategory.Punctuation, '&');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDoubleDash, EncodingCategory_1.EncodingCategory.Punctuation, '=');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPlusSign, EncodingCategory_1.EncodingCategory.Punctuation, '+');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationUnderscore, EncodingCategory_1.EncodingCategory.Punctuation, '_');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuotationMark, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDollarSign, EncodingCategory_1.EncodingCategory.Punctuation, '$');\n\n    _this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAtSign, EncodingCategory_1.EncodingCategory.Punctuation, '@');\n\n    return _this;\n  }\n\n  MorseData.instance = new MorseData();\n  return MorseData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.MorseData = MorseData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NatoCharacter_1 = require(\"./NatoCharacter\"); // There's no concept of a 'partial match' for a NATO letter, so there's no\n// reason to derive from EncodingDataBase.\n\n\nvar NatoData =\n/** @class */\nfunction () {\n  function NatoData() {\n    this._entries = [new NatoCharacter_1.NatoCharacter('A', 'Alfa'), new NatoCharacter_1.NatoCharacter('B', 'Bravo'), new NatoCharacter_1.NatoCharacter('C', 'Charlie'), new NatoCharacter_1.NatoCharacter('D', 'Delta'), new NatoCharacter_1.NatoCharacter('E', 'Echo'), new NatoCharacter_1.NatoCharacter('F', 'Foxtrot'), new NatoCharacter_1.NatoCharacter('G', 'Golf'), new NatoCharacter_1.NatoCharacter('H', 'Hotel'), new NatoCharacter_1.NatoCharacter('I', 'India'), new NatoCharacter_1.NatoCharacter('J', 'Juliet'), new NatoCharacter_1.NatoCharacter('K', 'Kilo'), new NatoCharacter_1.NatoCharacter('L', 'Lima'), new NatoCharacter_1.NatoCharacter('M', 'Mike'), new NatoCharacter_1.NatoCharacter('N', 'November'), new NatoCharacter_1.NatoCharacter('O', 'Oscar'), new NatoCharacter_1.NatoCharacter('P', 'Papa'), new NatoCharacter_1.NatoCharacter('Q', 'Quebec'), new NatoCharacter_1.NatoCharacter('R', 'Romeo'), new NatoCharacter_1.NatoCharacter('S', 'Sierra'), new NatoCharacter_1.NatoCharacter('T', 'Tango'), new NatoCharacter_1.NatoCharacter('U', 'Uniform'), new NatoCharacter_1.NatoCharacter('V', 'Victor'), new NatoCharacter_1.NatoCharacter('W', 'Whiskey'), new NatoCharacter_1.NatoCharacter('X', 'X-ray'), new NatoCharacter_1.NatoCharacter('Y', 'Yankee'), new NatoCharacter_1.NatoCharacter('Z', 'Zulu')];\n  }\n\n  Object.defineProperty(NatoData.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NatoData.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NatoData.instance = new NatoData();\n  return NatoData;\n}();\n\nexports.NatoData = NatoData;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharacterImage_1 = require(\"../Common/CharacterImage\");\n\nvar InlineSvg_1 = require(\"../Common/InlineSvg\");\n\nvar NavalFlags =\n/** @class */\nfunction () {\n  function NavalFlags() {\n    this._entries = [// tslint:disable:max-line-length (SVG images are messy)\n    new CharacterImage_1.CharacterImage('A', new InlineSvg_1.InlineSvg(\"<path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('B', new InlineSvg_1.InlineSvg('<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#f00\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>', 180, 180)), new CharacterImage_1.CharacterImage('C', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"46.8\\\" width=\\\"144\\\" height=\\\"86.4\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"75.6\\\" width=\\\"144\\\" height=\\\"28.8\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('D', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"54\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('E', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"90\\\" width=\\\"144\\\" height=\\\"72\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('F', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 l 72,72 l -72,72 l -72,-72 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('G', new InlineSvg_1.InlineSvg(\"<path fill=\\\"#000094\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#FC0\\\" stroke-width=\\\"24\\\" d=\\\"m30,18v144m48,0V18m48,0v144\\\"/>\\n      <path d=\\\"M18,18H162V162H18z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('H', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('I', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <circle cx=\\\"90\\\" cy=\\\"90\\\" r=\\\"36\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('J', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"66\\\" width=\\\"144\\\" height=\\\"48\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('K', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"72\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('L', new InlineSvg_1.InlineSvg(\"<rect x=\\\"16\\\" y=\\\"16\\\" width=\\\"148\\\" height=\\\"148\\\" rx=\\\"2\\\"/>\\n      <path fill=\\\"#FC0\\\" d=\\\"m20,20h70v140h70V90H20\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('M', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#fff\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('N', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 54 V 162 H 90 V 18 H 126 V 162 H 162 V 126 H 18 V 90 H 162 V 54 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('O', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('P', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Q', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('R', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#fc0\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('S', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"54\\\" y=\\\"54\\\" width=\\\"72\\\" height=\\\"72\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('T', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"96\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"48\\\" height=\\\"144\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('U', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#ffffff\\\"/>\\n      <path d=\\\"M 18,18 H 90 V 90 H 18 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 162,91 H 91 V 162 H 162 z\\\" fill=\\\"#ff0000\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('V', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\">\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\"/>\\n      </clipPath>\\n      <rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 18,18 L 162,162 M 162,18 L 18,162\\\" clip-path=\\\"url(#c)\\\" stroke=\\\"#f00\\\" stroke-width=\\\"28.8\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('W', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#000094\\\"/>\\n      <rect x=\\\"42\\\" y=\\\"42\\\" width=\\\"96\\\" height=\\\"96\\\" fill=\\\"#fff\\\"/>\\n      <rect x=\\\"66\\\" y=\\\"66\\\" width=\\\"48\\\" height=\\\"48\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('X', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fff\\\"/>\\n      <path d=\\\"M 90,18 V 162 M 18,90 H 162\\\" stroke=\\\"#000094\\\" stroke-width=\\\"36\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Y', new InlineSvg_1.InlineSvg(\"<clipPath id=\\\"c\\\"><path d=\\\"m18,18h144v144H18\\\"/></clipPath>\\n      <path fill=\\\"#FC0\\\" d=\\\"m18,18h144v144H18\\\"/>\\n      <path stroke=\\\"#F00\\\" stroke-dasharray=\\\"18.8\\\" stroke-width=\\\"250\\\" clip-path=\\\"url(#c)\\\" d=\\\"m4,4 160,160\\\"/>\\n      <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\" d=\\\"M18,18H162V162H18z\\\"/>\", 180, 180)), new CharacterImage_1.CharacterImage('Z', new InlineSvg_1.InlineSvg(\"<rect x=\\\"18\\\" y=\\\"18\\\" width=\\\"144\\\" height=\\\"144\\\" fill=\\\"#fc0\\\"/>\\n      <path d=\\\"M 18,18 V 162 H 162 z\\\" fill=\\\"#000\\\"/>\\n      <path d=\\\"M 162,18 V 162 H 18 z\\\" fill=\\\"#000094\\\"/>\\n      <path d=\\\"M 90,90 L 162,162 H 18 z\\\" fill=\\\"#f00\\\"/>\\n      <path d=\\\"M 18,18 H 162 V 162 H 18 z\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"3.75\\\" stroke-linejoin=\\\"round\\\"/>\", 180, 180))];\n  }\n\n  Object.defineProperty(NavalFlags.prototype, \"entries\", {\n    get: function get() {\n      return this._entries;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NavalFlags.prototype.lookup = function (letter) {\n    for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.character.toUpperCase() === letter.toUpperCase()) {\n        return ch;\n      }\n    }\n\n    return null;\n  };\n\n  NavalFlags.instance = new NavalFlags();\n  return NavalFlags;\n}();\n\nexports.NavalFlags = NavalFlags;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResistorColorEntry_1 = require(\"./ResistorColorEntry\");\n\nvar Resistor =\n/** @class */\nfunction () {\n  function Resistor() {}\n  /**\n   * getValue assumes there is no tolerance band, as tolerance is not part of\n   * the value calculation\n   */\n\n\n  Resistor.getValue = function (colors) {\n    if (colors.length < 3 || colors.length > 4) {\n      throw new RangeError('Invalid resistor size');\n    } // Should we throw an error if the first color is black?  In resistors, it's\n    // technically not allowed, but in puzzle events who knows what they'll do.\n    // The math works out fine (it's just a leading zero), so for now it's\n    // allowed.\n    // Iterate through all but the final band (the multipler) and extract the\n    // values\n\n\n    var value = 0;\n\n    for (var i = 0; i < colors.length - 1; ++i) {\n      var currentColor = colors[i];\n\n      if (currentColor.value === undefined) {\n        return Resistor.INVALID_RESISTOR;\n      }\n\n      value *= 10;\n      value += currentColor.value;\n    }\n\n    return Resistor.applyMultiplier(value, colors[colors.length - 1].multiplier);\n  };\n\n  Resistor.getDisplayValue = function (value) {\n    if (value >= 1000000000) {\n      return value / 1000000000 + \"G\";\n    } else if (value >= 1000000) {\n      return value / 1000000 + \"M\";\n    } else if (value >= 1000) {\n      return value / 1000 + \"k\";\n    } else {\n      return value.toString();\n    }\n  };\n\n  Resistor.applyMultiplier = function (value, multipler) {\n    if (multipler >= 1) {\n      return value * multipler;\n    } else if (multipler > 0) {\n      // Avoid floating point multiplication issues\n      return value / (1 / multipler);\n    } else {\n      throw new RangeError('Invalid multiplier');\n    }\n  }; // Name, Color, Multiplier, Value, Tolerance\n\n\n  Resistor.BLACK = new ResistorColorEntry_1.ResistorColorEntry('Black', '#000000', 1, 0);\n  Resistor.BROWN = new ResistorColorEntry_1.ResistorColorEntry('Brown', '#8B4513', 10, 1, 1);\n  Resistor.RED = new ResistorColorEntry_1.ResistorColorEntry('Red', '#FF0000', 100, 2, 2);\n  Resistor.ORANGE = new ResistorColorEntry_1.ResistorColorEntry('Orange', '#EE7420', 1000, 3);\n  Resistor.YELLOW = new ResistorColorEntry_1.ResistorColorEntry('Yellow', '#FFFF00', 10000, 4);\n  Resistor.GREEN = new ResistorColorEntry_1.ResistorColorEntry('Green', '#008000', 100000, 5, 0.5);\n  Resistor.BLUE = new ResistorColorEntry_1.ResistorColorEntry('Blue', '#0000FF', 1000000, 6, 0.25);\n  Resistor.VIOLET = new ResistorColorEntry_1.ResistorColorEntry('Violet', '#800080', 10000000, 7, 0.1);\n  Resistor.GREY = new ResistorColorEntry_1.ResistorColorEntry('Grey', '#808080', 100000000, 8);\n  Resistor.WHITE = new ResistorColorEntry_1.ResistorColorEntry('White', '#FFFFFF', 1000000000, 9);\n  Resistor.GOLD = new ResistorColorEntry_1.ResistorColorEntry('Gold', '#AB8D3F', 0.1, undefined, 5);\n  Resistor.SILVER = new ResistorColorEntry_1.ResistorColorEntry('Silver', '#C0C0C0', 0.01, undefined, 10);\n  Resistor.colorTable = [Resistor.BLACK, Resistor.BROWN, Resistor.RED, Resistor.ORANGE, Resistor.YELLOW, Resistor.GREEN, Resistor.BLUE, Resistor.VIOLET, Resistor.GREY, Resistor.WHITE, Resistor.GOLD, Resistor.SILVER];\n  Resistor.INVALID_RESISTOR = -1;\n  return Resistor;\n}();\n\nexports.Resistor = Resistor;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\n\nvar SemaphoreData_1 = require(\"./SemaphoreData\");\n\nvar SemaphoreDegrees_1 = require(\"./SemaphoreDegrees\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreCharacter =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreCharacter, _super);\n\n  function SemaphoreCharacter(encoding, category) {\n    if (encoding === void 0) {\n      encoding = SemaphoreEncoding_1.SemaphoreEncoding.None;\n    }\n\n    if (category === void 0) {\n      category = EncodingCategory_1.EncodingCategory.All;\n    }\n\n    var _this = _super.call(this, SemaphoreData_1.SemaphoreData.instance, category) || this;\n\n    _this._directions = [];\n\n    _this.addDirection(encoding);\n\n    return _this;\n  }\n\n  SemaphoreCharacter.parseEncoding = function (encoding) {\n    var directions = [];\n\n    for (var i = 1; i <= 8; i++) {\n      var direction = 1 << i;\n\n      if ((encoding & direction) === direction) {\n        directions.push(direction);\n      }\n    }\n\n    return directions;\n  };\n\n  Object.defineProperty(SemaphoreCharacter.prototype, \"directions\", {\n    get: function get() {\n      return this._directions;\n    },\n    set: function set(value) {\n      this._directions = value.slice(0, 2);\n      this.invalidateLookup();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SemaphoreCharacter.prototype.addDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      this._directions.push(dir);\n    }\n\n    if (this._directions.length > 2) {\n      this._directions.splice(0, this._directions.length - 2);\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.removeDirection = function (direction) {\n    for (var _i = 0, _a = SemaphoreCharacter.parseEncoding(direction); _i < _a.length; _i++) {\n      var dir = _a[_i];\n\n      var index = this._directions.indexOf(dir);\n\n      if (index >= 0) {\n        this._directions.splice(index, 1);\n      }\n    }\n\n    this.invalidateLookup();\n  };\n\n  SemaphoreCharacter.prototype.hasDirection = function (direction) {\n    return this._directions.indexOf(direction) >= 0;\n  };\n\n  SemaphoreCharacter.prototype.getDegrees = function () {\n    return this._directions.map(function (value) {\n      return SemaphoreDegrees_1.SemaphoreDegrees.ToDegrees(value);\n    }).sort(function (a, b) {\n      return a - b;\n    });\n  };\n\n  SemaphoreCharacter.prototype.getPotentialMatch = function (other) {\n    if (this.directions.length !== 1 || this.directions[0] === other) {\n      return null;\n    }\n\n    var potentialMatch = this.getPotentialMatches().filter(function (value) {\n      return (value.encoding & other) === other;\n    })[0];\n    return potentialMatch || null;\n  };\n\n  SemaphoreCharacter.prototype.onClear = function () {\n    this._directions.length = 0;\n  };\n\n  SemaphoreCharacter.prototype.onEmpty = function () {\n    return this._directions.length === 0;\n  };\n\n  SemaphoreCharacter.prototype.getEncoding = function () {\n    return this._directions.reduce(function (previousValue, currentValue) {\n      return previousValue |= currentValue;\n    }, SemaphoreEncoding_1.SemaphoreEncoding.None);\n  };\n\n  return SemaphoreCharacter;\n}(EncodingCharacterBase_1.EncodingCharacterBase);\n\nexports.SemaphoreCharacter = SemaphoreCharacter;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodingCategory_1 = require(\"../Common/EncodingCategory\");\n\nvar EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\n\nvar SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\n\nvar SemaphoreData =\n/** @class */\nfunction (_super) {\n  __extends(SemaphoreData, _super);\n\n  function SemaphoreData() {\n    var _this = _super.call(this) || this; // Letters\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z'); // Numbers\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0'); // Formatting\n\n\n    _this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n\n    return _this;\n  }\n\n  SemaphoreData.instance = new SemaphoreData();\n  return SemaphoreData;\n}(EncodingDataBase_1.EncodingDataBase);\n\nexports.SemaphoreData = SemaphoreData;"],"sourceRoot":""}
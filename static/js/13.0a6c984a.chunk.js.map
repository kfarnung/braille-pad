{"version":3,"sources":["Data/LocalStorageComponent.ts","Data/LocalStorage.ts","version.ts","Views/TabViewBase.tsx","Morse/MorsePicture.tsx","Morse/MorseStream.tsx","Morse/MorseTable.tsx","Views/Encoding/Morse.tsx"],"names":["LocalStorageComponent","props","_this","Object","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","VERSION_STORAGE_KEY","previousVersion","LocalStorage","getObject","versionIncreased","version","clear","setObject","prev","current","compareVersions","restoreState","updateState","onUpdateState","saveState","getLocalStorageKey","onSaveState","onRestoreState","Component","undefined","_isSupported","storage","window","localStorage","x","setItem","removeItem","e","DOMException","code","name","length","key","isSupported","getItem","getKey","objString","JSON","parse","value","object","stringify","concat","_prefix","__webpack_require__","d","__webpack_exports__","TabViewBase","_activeKey","state","activeKey","savedState","setState","MorsePicture","Array","from","morseString","map","index","react_default","a","createElement","renderDot","renderDash","className","viewBox","cx","cy","r","width","height","MorseStream","classCallCheck","possibleConstructorReturn","getPrototypeOf","_morseStream","onKeyDown","bind","assertThisInitialized","onKeyPress","morseStream","get","prototype","document","addEventListener","removeEventListener","_this2","Card_default","Header","codeText","plainText","invertText","reverseText","invertReverseText","ButtonToolbar_default","ButtonGroup_default","Button_default","onClick","onDotClick","onDashClick","onBackspaceClick","onNextClick","onClearClick","replace","MorseString","toString","invertDotsAndDashes","reverse","ev","defaultPrevented","handled","keyCode","preventDefault","Character","DOT","DASH","substring","lastCharacter","slice","CHARACTER_DIVIDER","WORD_DIVIDER","MorseTable","Table_default","striped","responsive","renderRows","getPotentialMatches","entry","display","Morse_MorsePicture","toMorseString","encoding","Morse","Tabs_default","animation","id","onSelect","onTabSelect","Tab_default","eventKey","title","src_Morse_MorseStream","src_Morse_MorseTable"],"mappings":"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","file":"static/js/13.0a6c984a.chunk.js","sourcesContent":["import compareVersions from 'compare-versions';\nimport { Component } from 'react';\nimport LocalStorage from './LocalStorage';\nimport { version } from '../version';\n\nabstract class LocalStorageComponent<P = {}, S = {}, SavedState = {}> extends Component<P, S> {\n  public constructor(props: P) {\n    super(props);\n\n    // If the current localstorage was created with a prior version of puzztool, clear\n    // the local storage to get rid of any obsolete or incompatible artifacts\n    const previousVersion = LocalStorage.getObject<string>(this.VERSION_STORAGE_KEY);\n    if (this.versionIncreased(previousVersion, version)) {\n      LocalStorage.clear();\n      // Store the current version\n      LocalStorage.setObject<string>(this.VERSION_STORAGE_KEY, version);\n    }\n  }\n\n  private versionIncreased(prev: string | null, current: string): boolean {\n    if (prev == null) {\n      // If there's no recorded version number, this is the user's first visit\n      // to the page since 0.7.0 released.  To clean up any potential legacy\n      // incompatabilities, clear storage and write the version.\n      return true;\n    }\n\n    return compareVersions(current, prev) === 1;\n  }\n\n  public componentDidMount() {\n    this.restoreState();\n    this.updateState();\n  }\n\n  protected updateState() {\n    this.onUpdateState();\n    this.saveState();\n  }\n\n  protected abstract getLocalStorageKey(): string;\n  protected abstract onSaveState(): SavedState;\n  protected abstract onRestoreState(savedState: SavedState | null): void;\n  protected abstract onUpdateState(): void;\n\n  private saveState() {\n    LocalStorage.setObject<SavedState>(this.getLocalStorageKey(), this.onSaveState());\n  }\n\n  private restoreState() {\n    this.onRestoreState(LocalStorage.getObject<SavedState>(this.getLocalStorageKey()));\n  }\n\n  private readonly VERSION_STORAGE_KEY: string = \"puzztoolVersion\";\n}\n\nexport default LocalStorageComponent;\n","class LocalStorage {\n  private static _isSupported?: boolean;\n  private static _prefix: string = 'puzztool';\n\n  public static isSupported() {\n    if (this._isSupported === undefined) {\n      const storage = window.localStorage;\n      const x = '__storage_test__';\n\n      try {\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        this._isSupported = true;\n      } catch (e) {\n          this._isSupported = e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            storage.length !== 0;\n      }\n    }\n\n    return this._isSupported;\n  }\n\n  public static getItem(key: string) {\n    if (this.isSupported()) {\n      return window.localStorage.getItem(this.getKey(key));\n    }\n\n    return null;\n  }\n\n  public static getObject<T>(key: string) {\n    if (this.isSupported()) {\n      const objString = window.localStorage.getItem(this.getKey(key));\n\n      if (objString !== null) {\n        return JSON.parse(objString) as T;\n      }\n    }\n\n    return null;\n  }\n\n  public static setItem(key: string, value: string) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), value);\n    }\n  }\n\n  public static setObject<T>(key: string, object: T) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), JSON.stringify(object));\n    }\n  }\n\n  public static clear() {\n    if (this.isSupported()) {\n      window.localStorage.clear();\n    }\n  }\n\n  private static getKey(key: string) {\n    return `${this._prefix}_${key}`;\n  }\n}\n\nexport default LocalStorage;\n","// generated by genversion\nexport const version = '0.7.0';\n","import LocalStorageComponent from '../Data/LocalStorageComponent';\n\n// To inherit from this class:\n// 1. import Tab from 'react-bootstrap/Tab';\n// 2. import Tabs from 'react-bootstrap/Tabs';\n// 3. override render() and getLocalStorageKey()\n// 4. Ensure your constructor calls super()\n\ntype TabViewBaseProps = {};\ntype State = {\n  activeKey: number,\n};\n\ntype SavedState = {\n  activeKey: number,\n};\n\nabstract class TabViewBase extends LocalStorageComponent<TabViewBaseProps, State, SavedState> {\n  private _activeKey: number = 1;\n\n  constructor(props: TabViewBaseProps) {\n    super(props);\n\n    this.state = {\n      activeKey: this._activeKey,\n    };\n  }\n\n  /* Classes derived from TabViewBase should implement the following functions:\n\n  public render() {}\n\n  protected getLocalStorageKey() {\n    return 'YourClassNameHere';\n  }\n  */\n\n  protected onSaveState() {\n    return {\n      activeKey: this._activeKey,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._activeKey = savedState.activeKey;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      activeKey: this._activeKey,\n    });\n  }\n\n  protected onTabSelect(activeKey: number) {\n    this._activeKey = activeKey;\n    this.updateState();\n  }\n}\n\nexport default TabViewBase;\n","import React, { Component } from 'react';\n\ntype Props = {\n  morseString: String\n};\n\nclass MorsePicture extends Component<Props> {\n  public static renderDot() {\n    return (\n      <svg className=\"MorsePicture-dotIcon\" viewBox=\"0 0 30 30\">\n        <circle cx=\"15\" cy=\"15\" r=\"15\" />\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    );\n  }\n\n  public static renderDash() {\n    return (\n      <svg className=\"MorsePicture-dashIcon\" viewBox=\"0 0 90 30\">\n        <rect width=\"90\" height=\"30\" />\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    );\n  }\n\n  public render() {\n    return Array.from(this.props.morseString)\n      .map((value: string, index: number) => (\n        <span key={index}>\n          {value === '.' ? MorsePicture.renderDot() : MorsePicture.renderDash()}\n        </span>\n      ));\n  }\n}\n\nexport default MorsePicture;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport { MorseCharacter as Character, MorseString } from 'puzzle-lib';\nimport LocalStorageComponent from '../Data/LocalStorageComponent';\nimport MorsePicture from './MorsePicture';\nimport './MorseStream.scss';\n\ntype Props = {};\ntype State = {\n  morseStream: string\n};\n\ntype SavedState = {\n  morseStream: string\n};\n\nclass MorseStream extends LocalStorageComponent<Props, State, SavedState> {\n\n  private _morseStream: string = '';\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n\n    this.state = {\n      morseStream: this._morseStream,\n    };\n  }\n\n  public componentDidMount() {\n    super.componentDidMount();\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keypress', this.onKeyPress);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n    document.removeEventListener('keypress', this.onKeyPress);\n  }\n\n  public render() {\n    return (\n      <div className=\"MorseStream\">\n        <Card className=\"MorseStream-morse-output\">\n          <Card.Header>Input</Card.Header>\n          <pre>\n            {this.codeText()}<span className=\"blinking-cursor\">|</span>\n          </pre>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Plaintext</Card.Header>\n          <pre>\n            {this.plainText() || ' '}\n          </pre>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Swap Dots/Dashes</Card.Header>\n          <pre>\n            {this.invertText() || ' '}\n          </pre>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left</Card.Header>\n          <pre>\n            {this.reverseText() || ' '}\n          </pre>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left + Swap Dots/Dashes</Card.Header>\n          <pre>\n            {this.invertReverseText() || ' '}\n          </pre>\n        </Card>\n        <ButtonToolbar className=\"MorseStream-inputCommands\">\n          <ButtonGroup>\n            <Button onClick={() => this.onDotClick()}>\n              {MorsePicture.renderDot()}\n            </Button>\n            <Button onClick={() => this.onDashClick()}>\n              {MorsePicture.renderDash()}\n            </Button>\n            <Button onClick={() => this.onBackspaceClick()}>&#x232b;</Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n        <ButtonToolbar className=\"MorseStream-commands\">\n          <ButtonGroup>\n            <Button onClick={() => this.onNextClick()}>Next</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button onClick={() => this.onClearClick()}>Clear</Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'MorseStream';\n  }\n\n  protected onSaveState() {\n    return {\n      morseStream: this._morseStream,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._morseStream = savedState.morseStream;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      morseStream: this._morseStream,\n    });\n  }\n\n  private codeText(): string {\n    // Replace dot with interpunct for readability\n    // Replace dash with full width hyphen for readability.  Don't use emdash\n    // because multiple emdashes get combined with no space between them.\n    return this._morseStream.replace(/\\./g, '\\u00b7').replace(/-/g, '\\uff0d');\n  }\n\n  private plainText(): string {\n    return new MorseString(this._morseStream).toString();\n  }\n\n  private invertText(): string {\n    return new MorseString(this._morseStream).invertDotsAndDashes().toString();\n  }\n\n  private reverseText(): string {\n    return new MorseString(this._morseStream).reverse().toString();\n  }\n\n  private invertReverseText(): string {\n    return new MorseString(this._morseStream)\n      .invertDotsAndDashes()\n      .reverse()\n      .toString();\n  }\n\n  private onKeyDown(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = false;\n\n    // Chrome won't trigger keypress for any keys that can invoke browser\n    // actions.\n    if ((ev.key === \"Backspace\") || (ev.keyCode === 8)) { // Backspace\n      this.onBackspaceClick();\n      handled = true;\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onKeyPress(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = true;\n    if (ev.key) {\n      switch (ev.key) {\n        case \"-\":\n        case \"j\":\n          this.onDashClick();\n          break;\n        case \".\":\n        case \"k\":\n          this.onDotClick();\n          break;\n        case \"Enter\":\n        case \" \":\n        case \"l\":\n          this.onNextClick();\n          break;\n        case \";\":\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    } else {\n      // Older browsers such as Edge don't support ev.key\n      switch (ev.keyCode) {\n        case 45: // '-'\n        case 106: // 'J'\n          this.onDashClick();\n          break;\n        case 46: // '.'\n        case 107: // 'K'\n          this.onDotClick();\n          break;\n        case 13: // Enter\n        case 32: // Space\n        case 108: // 'L'\n          this.onNextClick();\n          break;\n        case 59: // ';'\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onDotClick() {\n    this._morseStream += Character.DOT;\n\n    this.updateState();\n  }\n\n  private onDashClick() {\n    this._morseStream += Character.DASH;\n\n    this.updateState();\n  }\n\n  private onBackspaceClick() {\n    if (this._morseStream.length > 0) {\n      this._morseStream =\n        this._morseStream.substring(0, this._morseStream.length - 1);\n    }\n\n    this.updateState();\n  }\n\n  private onNextClick() {\n    if (this._morseStream.length > 0) {\n      const lastCharacter = this._morseStream.slice(-1);\n      if (lastCharacter === MorseString.CHARACTER_DIVIDER) {\n        // Pressing next twice starts a new word\n        this._morseStream =\n          this._morseStream.substring(0, this._morseStream.length - 1) +\n          MorseString.WORD_DIVIDER;\n      } else if (lastCharacter !== MorseString.WORD_DIVIDER) {\n        this._morseStream += MorseString.CHARACTER_DIVIDER;\n      }\n    }\n\n    this.updateState();\n  }\n\n  private onClearClick() {\n    this._morseStream = '';\n\n    this.updateState();\n  }\n}\n\nexport default MorseStream;\n","import React, { Component } from 'react';\nimport { MorseCharacter as Character } from 'puzzle-lib';\nimport Table from 'react-bootstrap/Table';\nimport MorsePicture from './MorsePicture';\nimport './MorseTable.scss';\n\nclass MorseTable extends Component {\n  public render() {\n    return (\n      <div className=\"MorseTable\">\n        <Table striped={true} responsive={true}>\n          <thead>\n            <tr>\n              <th>Character</th>\n              <th>Morse</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderRows()}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\n  private renderRows() {\n    const characters = new Character().getPotentialMatches();\n    return characters.map((entry) => (\n      <tr key={entry.display}>\n        <td>{entry.display}</td>\n        <td>\n          <div className=\"MorseTable-morseView\">\n            <MorsePicture morseString={Character.toMorseString(entry.encoding)} />\n          </div>\n        </td>\n      </tr>\n    ));\n  }\n}\n\nexport default MorseTable;\n","import React from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport TabViewBase from '../TabViewBase';\nimport MorseStream from '../../Morse/MorseStream';\nimport MorseTable from '../../Morse/MorseTable';\nimport './Morse.scss';\n\nclass Morse extends TabViewBase {\n  public render() {\n    return (\n      <div className=\"Morse\">\n        <div className=\"Morse-content\">\n          <Tabs\n            activeKey={this.state.activeKey}\n            animation={false}\n            id=\"Morse-tabs\"\n            // tslint:disable-next-line: no-any\n            onSelect={(activeKey: any) => this.onTabSelect(activeKey as number)}\n          >\n            <Tab className=\"Morse-tab-value\" eventKey={1} title=\"Value\">\n              <MorseStream />\n            </Tab>\n            <Tab eventKey={2} title=\"Reference\">\n              <MorseTable />\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'Morse';\n  }\n}\n\nexport default Morse;\n"],"sourceRoot":""}
{"version":3,"sources":["Views/Loading.tsx","App.tsx","serviceWorker.ts","index.tsx","Data/RouteData.ts"],"names":["Loading","react_default","a","createElement","className","this","getContent","props","error","timedOut","pastDelay","Component","AutoConvert","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","timeout","Autokey","Braille","Caesar","CharacterEncodings","Home","Morse","NatoAlphabet","NavalFlags","PigpenReference","Resistors","Semaphore","Settings","Vigenere","App","HashRouter","renderNavbar","Route","exact","path","component","categoryName","toLowerCase","replace","concat","_this","RouteData","getCategories","map","category","lib","key","name","onClick","preventDefault","to","rootUrl","NavDropdown","eventKey","id","getCategoryDropdownId","title","children","child","url","MenuItem","Navbar","collapseOnSelect","fluid","inverse","onSelect","document","activeElement","blur","staticTop","Header","Brand","Link","Toggle","Collapse","Nav","renderNavbarCategories","pullRight","href","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Object","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_travis_build_kfarnung_puzztool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","getRoutes","categories","description"],"mappings":"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","file":"static/js/main.aa04bdb5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as Loadable from 'react-loadable';\nimport './Loading.css';\n\nclass Loading extends Component<Loadable.LoadingComponentProps> {\n  public render() {\n    return (\n      <div className=\"Loading\">\n        {this.getContent()}\n      </div>\n    );\n  }\n\n  private getContent() {\n    if (this.props.error) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Failed to load content</div>\n        </div>\n      );\n    } else if (this.props.timedOut) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-error\" />\n          <div>Timed out while loading content</div>\n        </div>\n      );\n    } else if (this.props.pastDelay) {\n      return (\n        <div className=\"Loading-content\">\n          <div className=\"Loading-spinner\" />\n          <div>Loading</div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { MenuItem, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Loadable from 'react-loadable';\nimport { RouteData } from './Data/RouteData';\nimport Loading from './Views/Loading';\nimport './App.css';\n\nconst defaultTimeout = 10000;\n\nconst AutoConvert = Loadable({\n  loader: () => import('./Views/Encoding/AutoConvert'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Autokey = Loadable({\n  loader: () => import('./Views/Cipher/Autokey'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Braille = Loadable({\n  loader: () => import('./Views/Encoding/Braille'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Caesar = Loadable({\n  loader: () => import('./Views/Cipher/Caesar'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst CharacterEncodings = Loadable({\n  loader: () => import('./Views/Reference/CharacterEncodings'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Home = Loadable({\n  loader: () => import('./Views/Home'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Morse = Loadable({\n  loader: () => import('./Views/Encoding/Morse'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst NatoAlphabet = Loadable({\n  loader: () => import('./Views/Reference/Nato'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst NavalFlags = Loadable({\n  loader: () => import('./Views/Reference/NavalFlagTable'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst PigpenReference = Loadable({\n  loader: () => import('./Views/Reference/PigpenReference'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Resistors = Loadable({\n  loader: () => import('./Views/Reference/Resistors'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Semaphore = Loadable({\n  loader: () => import('./Views/Encoding/Semaphore'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Settings = Loadable({\n  loader: () => import('./Views/Settings'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Vigenere = Loadable({\n  loader: () => import('./Views/Cipher/Vigenere'),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nclass App extends Component {\n  public render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {this.renderNavbar()}\n          <div className=\"App-content\">\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route path=\"/encoding/braille\" component={Braille} />\n            <Route path=\"/cipher/autokey\" component={Autokey} />\n            <Route path=\"/cipher/caesar\" component={Caesar} />\n            <Route path=\"/cipher/vigenere\" component={Vigenere} />\n            <Route path=\"/encoding/autoconvert\" component={AutoConvert} />\n            <Route path=\"/encoding/morse\" component={Morse} />\n            <Route path=\"/encoding/pigpen\" component={PigpenReference} />\n            <Route path=\"/encoding/semaphore\" component={Semaphore} />\n            <Route path=\"/help/settings\" component={Settings} />\n            <Route path=\"/reference/characterencodings\" component={CharacterEncodings} />\n            <Route path=\"/reference/nato\" component={NatoAlphabet} />\n            <Route path=\"/reference/navalflags\" component={NavalFlags} />\n            <Route path=\"/reference/resistors\" component={Resistors} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n  private getCategoryDropdownId(categoryName: string) {\n    return categoryName.toLowerCase().replace(/[^a-z]/, '').concat('-dropdown');\n  }\n\n  private renderNavbarCategories() {\n    return RouteData.getCategories().map((category) => (\n      <LinkContainer\n        key={category.name}\n        onClick={(e) => e.preventDefault()}\n        to={category.rootUrl}\n      >\n        <NavDropdown\n          eventKey={category.name}\n          id={this.getCategoryDropdownId(category.name)}\n          title={category.name}\n        >\n          {category.children.map((child) => (\n            <LinkContainer\n              key={`${category.name}-${child.name}`}\n              to={category.rootUrl + child.url}\n            >\n              <MenuItem eventKey={category.name + child.name}>{child.name}</MenuItem>\n            </LinkContainer>\n          ))}\n        </NavDropdown>\n      </LinkContainer>\n    ));\n  }\n\n  private renderNavbar() {\n    return (\n      <Navbar\n        collapseOnSelect={true}\n        fluid={true}\n        inverse={true}\n        // Remove focus from the selected element to prevent it from taking\n        // further keyboard input.\n        onSelect={() => (document.activeElement as HTMLElement).blur()}\n        staticTop={true}\n      >\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">PuzzTool</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav>\n            {this.renderNavbarCategories()}\n          </Nav>\n          <Nav pullRight={true}>\n            <LinkContainer to=\"/help\" onClick={(e) => e.preventDefault()}>\n              <NavDropdown eventKey=\"Help\" title=\"Help\" id=\"help-dropdown\">\n                <LinkContainer to=\"/help/settings\">\n                  <MenuItem eventKey=\"Help.Settings\">Settings</MenuItem>\n                </LinkContainer>\n                <MenuItem href=\"https://github.com/beckbria/puzztool/issues/new\" target=\"_blank\">\n                  Feedback\n                </MenuItem>\n              </NavDropdown>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-theme.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","export interface RouteChild {\r\n    description: string;\r\n    name: string;\r\n    url: string;\r\n}\r\n\r\nexport interface RouteCategory {\r\n    children: RouteChild[];\r\n    description: string;\r\n    name: string;\r\n    rootUrl: string;\r\n}\r\n\r\nexport interface RoutesInfo {\r\n    categories: RouteCategory[];\r\n    name: string;\r\n}\r\n\r\nexport class RouteData {\r\n    public static getCategories() {\r\n        return RouteData.getRoutes().categories;\r\n    }\r\n\r\n    private static getRoutes(): RoutesInfo {\r\n        return {\r\n            categories: [\r\n                {\r\n                    children: [\r\n                        {\r\n                            description: ' A Vignere cipher which uses plaintext as the key',\r\n                            name: 'Autokey',\r\n                            url: '/autokey',\r\n                        },\r\n                        {\r\n                            description: 'Letters are shifted by a fixed value',\r\n                            name: 'Caesar',\r\n                            url: '/caesar',\r\n                        },\r\n                        {\r\n                            description: 'Letters are mapped based on a key word',\r\n                            name: 'Vignere',\r\n                            url: '/vigenere',\r\n                        },\r\n                    ],\r\n                    description: 'Scrambled letters',\r\n                    name: 'Ciphers',\r\n                    rootUrl: '/cipher',\r\n                },\r\n                {\r\n                    children: [\r\n                        {\r\n                            description: 'Mapping numbers to letters (ASCII, Binary, Ordinal)',\r\n                            name: 'AutoConvert',\r\n                            url: '/autoconvert',\r\n                        },\r\n                        {\r\n                            description: 'Six dots in a two-by-three grid',\r\n                            name: 'Braille',\r\n                            url: '/braille',\r\n                        },\r\n                        {\r\n                            description: 'Dots and dashes with separations',\r\n                            name: 'Morse Code',\r\n                            url: '/morse',\r\n                        },\r\n                        {\r\n                            description: 'Parts of a tic-tac-toe grid or X, some with dot',\r\n                            name: 'Pigpen',\r\n                            url: '/pigpen',\r\n                        },\r\n                        {\r\n                            description: ' Positions of two different flags',\r\n                            name: 'Semaphore',\r\n                            url: '/semaphore',\r\n                        },\r\n                    ],\r\n                    description: 'Different ways to represent letters',\r\n                    name: 'Encodings',\r\n                    rootUrl: '/encoding',\r\n                },\r\n                {\r\n                    children: [\r\n                        {\r\n                            description: 'Static display of number to letter mapping',\r\n                            name: 'Character Encodings',\r\n                            url: '/characterencodings',\r\n                        },\r\n                        {\r\n                            description: 'Words used to clearly identify a letter',\r\n                            name: 'NATO Alphabet',\r\n                            url: '/nato',\r\n                        },\r\n                        {\r\n                            description: 'Different simple flags which convey a letter',\r\n                            name: 'Naval Flags',\r\n                            url: '/navalflags',\r\n                        },\r\n                        {\r\n                            description: 'Find a resistor value using different colored bands',\r\n                            name: 'Resistors',\r\n                            url: '/resistors',\r\n                        }\r\n                    ],\r\n                    description: 'Miscellaneous information',\r\n                    name: 'Reference',\r\n                    rootUrl: '/reference',\r\n                }\r\n            ],\r\n            name: 'Puzztool',\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}